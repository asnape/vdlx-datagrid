<vdl version="4.1">

    <!--

    I guess its missing some functionality versus our table? Selection mainly? So would that be the compromise?

    Realistically, how much effort to go from this demo to viable alternative high performance table..
    it would need to support editing + validation at the very least, including add row. Next step beyond that is global and column filtering? And finally selection?

    And we would need to FICO style it.

    I expect replacing our current table is a very large job. Offering a cut down high performance alternative, not sure how much we could save.

    Thoughts?

    -->

    <vdl-include src="vdlx-datagrid.vdl"/>
    <link rel="stylesheet" href="css/vdlx-datagrid2.css">

    <!--! t1IndexA,t1IndexB,t1IndexC,t1IndexD,t1IndexE,t1Col1,t1Col2,t1Col3,t1Col4,t1Col5,t1Col6 -->
    <!--! t2IndexA,t2IndexB,t2IndexC,t2IndexD,t2IndexE,t2IndexF,t2Col1,t2Col2,t2Col3 -->
    <!--! t3IndexA,t3IndexB,t3IndexC,t3IndexD,t3IndexE,t3IndexF,t3Col1,t3Col2,t3Col3 -->
    <!--! t4IndexA,t4IndexB,t4IndexC,t4IndexD,t4IndexE,t4IndexF,t4Col1,t4Col2,t4Col3 -->

    <vdl-page>

        <vdl-section heading="Customising the table">
            <vdl-row>
                <vdl-column>
                    <ul>
                        <li>This table loads in 1000 rows of data.</li>
                        <li>It has 6 indices and displays 4 array entities.</li>
                        <li>Table scrolls responsively</li>
                        <li>Loading and rendering is quick.</li>
                        <li>Sorting and filtering is relatively fast.</li>
                        <li>Saving is reasonable quick. (Depends on network speed and data volumes)</li>
                        <li>Column widths are easily set. Can be controlled by user if enabled.</li>
                    </ul>
                </vdl-column>
            </vdl-row>
        </vdl-section>

        <script>

            var idxWidth = 64;
            var tablePrefix = 't4'; // change this number t2-t5 for different table sizes. See above

            var columns = [
                {set: tablePrefix + 'IndexA', title: 'A', bottomCalc: 'count', width: idxWidth},
                {set: tablePrefix + 'IndexB', title: 'B', width: idxWidth},
                {set: tablePrefix + 'IndexC', title: 'C', width: idxWidth},
                {set: tablePrefix + 'IndexD', title: 'D', width: idxWidth},
                {set: tablePrefix + 'IndexE', title: 'E', width: idxWidth},
                {set: tablePrefix + 'IndexF', title: 'F', width: idxWidth},
                {entity: tablePrefix + 'Col1', editor: true},
                {entity: tablePrefix + 'Col2', width: idxWidth},
                {entity: tablePrefix + 'Col3', width: 160, editor: 'select', editorParams: {values: {bronze: 'Bronze', silver:'Silver', gold:'Gold'}}},
                {entity: tablePrefix + 'Col4', editor: true}
            ];

        </script>

        <vdl-section>
            <vdl-row>
                <vdl-column size="9" heading="vdlx-datagrid">
                    <vdlx-datagrid column-filter="true" data-page-mode="paged" data-page-size="20">
                        <vdlx-datagrid-provider columns="=columns">
                        </vdlx-datagrid-provider>
                    </vdlx-datagrid>
                </vdl-column>
                <vdl-column vdl-if="=false" size="6" heading="vdl-table">
                    <vdl-table page-mode="paged" page-size="15" save-state="false">
                        <!--<vdl-table-column entity="t1Col1"></vdl-table-column>-->
                        <vdl-table-column entity="t1Col5" editable="true"></vdl-table-column>
                    </vdl-table>
                </vdl-column>
            </vdl-row>
        </vdl-section>
    </vdl-page>
</vdl>