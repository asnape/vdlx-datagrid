parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"L+K7":[function(require,module,exports) {

},{}],"Y7y7":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var e=[{name:"id",description:"Specify an element id for the table. Useful if you later want to target the table using a selector. If not given then an id will be generated."},{name:"scenario",description:"The default scenario to use for fetching data in the table. This can be overridden per column but the default will be used when a column does not specify a particular scenario and the index sets will be fetched from the default scenario.",acceptsExpression:!0},{name:"page-size",description:"The number of rows to show per-page in paged mode. Defaults to 50.",acceptsExpression:!0},{name:"page-mode",description:'By default the table will show all rows. Set this attribute to "paged" to enable table pagination.'},{name:"height",description:"Table height",acceptsExpression:!0},{name:"show-filter",description:'Set this to "true" to enable the table filter. This will show a single input above the table to filter across all table cells.'},{name:"column-filter",description:'Set this to "true" to enable the column filters. This will show a header row with filter inputs for each column.'},{name:"add-remove-row",description:'Setting this will show the add-remove row buttons at the bottom of the table. Set to "true" to prompt for index selection on row add. Set to "addrow-autoinc" will switch the behaviour to allow new index values to be created, incrementing from the highest value in the set(s).'},{name:"selection-navigation",description:'Enable/disable table navigation, selection and clipboard features. Set to "false" to disable these features. Defaults to true.'},{name:"modifier",description:"Table modifier function. Will be called after the table configuration has been built. Provides a way to change the configuration before the table is rendered. Must be an expression that resolves to a function. Takes the table configuration object and should return the modified configuration. If an object is not returned then the table will be unaffected.",acceptsExpression:!0},{name:"width",description:'Set the table to a fixed width, in pixels. Accepts an integer value. If set to the string "custom" then the table width is calculated by adding up all the widths of the columns in the table. If a column doesn\'t have a width specified then it is given a default value of 100px.',acceptsExpression:!1},{name:"class",description:"Space-separated list of the classes of the element.",acceptsExpression:!1},{name:"always-show-selection",description:'Whether to display selection on inactive tables. Set to "true" to keep selection on a table when it becomes inactive. Defaults to false.',acceptsExpression:!1},{name:"row-filter",description:"Expression to be used for filtering the rows of a <vdl-table>. This must be an expression and should resolve to either a function or a boolean value. If a function it will be executed when table updates. The function will have the following signature (rowData, indices) and should return a boolean.",acceptsExpression:!0,required:!1,expressionVars:[{name:"rowData",type:"Array.<(string|boolean|number)>",description:"Data for all row cells"},{name:"indices",type:"Array.<(string|boolean|number)>",description:"Data for the index columns of the row"}]},{name:"save-state",description:'Set this to "false" to disable table state saving. By default table state is stored in the user\'s browser session so that user settings (e.g. page, sorting and search) are preserved if table data is reloaded. Defaults to true.',acceptsExpression:!1,required:!1},{name:"grid-data",acceptsExpression:!0}];exports.default=e;
},{}],"72gB":[function(require,module,exports) {
"use strict";function a(a,e,r){var i=r.getComponentParamsBuilder(a),d=$(a),s=e.scenario;if(s)if(s.expression.isString){var t=parseInt(s.rawValue);if(isNaN(t))i.addParam("scenarioId",s.rawValue);else{if(t<0)throw Error("If scenario-id is specifying an index it must be a positive integer.");i.addParam("scenarioId",t)}}else i.addParam("scenarioId",s.expression.value,!0);var o=e["page-size"];if(o)if(o.expression.isString){var l=parseInt(o.rawValue);isNaN(l)||i.addParam("pageSize",l)}else i.addParam("pageSize",o.expression.value,!0);var n=e["page-mode"];n&&i.addParam("pageMode",n.rawValue);var u=e["column-filter"];u&&i.addParam("columnFilter","true"===u.rawValue);var p=e["add-remove-row"];p&&("true"===p.rawValue?i.addParam("addRemoveRow",!0):"addrow-autoinc"===p.rawValue&&i.addParam("addRemoveRow","addrow-autoinc"));var m=e.id;m&&(d.attr("id",null),i.addParam("tableId",m.rawValue));var v=e.width;v&&i.addParam("width",v.rawValue);var w=e.modifier;if(w){if(w.expression.isString)throw Error("The vdl-table modifier attribute must be supplied as an expression");i.addParam("modifier",w.expression.value,!0)}var f=e.class;f&&(d.removeAttr("class"),i.addParam("class",f.rawValue));var g=e["row-filter"];if(g){if(g.expression.isString)throw Error('The vdl-table "row-filter" attribute must be supplied as an expression');i.addFunctionOrExpressionParam("rowFilter",g.expression.value,["rowData","indices"])}var c=e["grid-data"];c&&i.addParam("gridData",c.expression.value,!0);var P=e.height;P&&(P.expression.isString?i.addParam("gridHeight",P.rawValue,!1):i.addParam("gridHeight",P.expression.value,!0));var x=$("<div/>");x.attr("id",m.rawValue),x.addClass("table-striped table-bordered table-condensed"),d.append(x)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=a;
},{}],"0X7G":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=a;var t=100;function e(t){var e=_.parseInt(t);return _.isNaN(e)?t:e}function n(t){return _.isNull(t)||_.isUndefined(t)}function a(a,i){insight.getView();var o={columnConfig:[]};a.width&&(o.tableWidth=a.width.replace("px",""));var r=i.element,l=a.scenarioId||0;a.pageMode,ko.unwrap(a.gridHeight);function u(){var t={columns:o.columnConfig,layout:"fitColumns",placeholder:"Waiting for data",groupStartOpen:!0,ajaxLoader:!0},i=$(r).find("vdlx-datagrid-column").map(function(t,e){return _.clone(e.autotableConfig)}),u=[],s={};_.forEach(i,function(t){var a=e(t.scenario||l);if(_.isNumber(a),t.scenario=a,t.entity)t.name=t.entity,delete t.entity,u.push(_.omit(t,n));else if(t.set){_.has(s,[t.set])||(s[t.set]=[]);var i=s[t.set],o=_.omit(t,n),r=t.setPosition;null==r?i.push(o):i[r]||(i[r]=o,_.range(i.length).forEach(function(t){i[t]||(i[t]=null)}))}}),console.log(s,u),t.columns=_.flatten(_.map(s,function(t,e){return _.map(t,function(t,e){return _.assign(t,{title:t.set,field:t.set,setPosition:e})})})),t.columns=t.columns.concat(_.map(u,function(t){return _.assign(t,{title:t.name,field:t.name})})),o.table=new Tabulator("#"+a.tableId,t),o.table.setData(a.gridData).then(function(){o.table.redraw()}).catch(function(t){})}var s=_.throttle(u,t,{leading:!1});return o.tableUpdate=function(){s()},o.tableValidate=function(){},o.validate=function(){},u(),o}
},{}],"eoyB":[function(require,module,exports) {
"use strict";var e=a(require("./attributes")),t=a(require("./transform")),r=a(require("./view-model"));function a(e){return e&&e.__esModule?e:{default:e}}VDL("vdlx-datagrid",{tag:"vdlx-datagrid",attributes:e.default,createViewModel:r.default,transform:t.default});
},{"./attributes":"Y7y7","./transform":"72gB","./view-model":"0X7G"}],"2esa":[function(require,module,exports) {
var e=insightModules.load("enums"),t=insightModules.load("vdl/extensions/vdl-index-filter"),a=insightModules.load("vdl/vdl-validator-factory"),i=insightModules.load("insight-getter"),r=insightModules.load("components/table/render-callbacks"),o=insightModules.load("utils/data-utils"),n=50,s="autotableConfig",d=[{name:"entity",description:"Name of the array entity to show in this column. Throws an error if the entity doesn't exist or is not an array or set type.",required:!1},{name:"set",description:"Name of the set entity to show in this column. Throws an error if the entity doesn't exist or is not a set type.",required:!1},{name:"set-position",description:"Index (zero-based) of occurrence of that index set in the index tuple for the array.Defaults to next available position."},{name:"scenario",description:"The scenario id/index for this column. Not allowed on index column (when specifying a set entity)",acceptsExpression:!0},{name:"editable",description:"Whether the cells within this column are editable.",acceptsExpression:!0},{name:"vdl-visible",acceptsExpression:!0,docIgnore:!0},{name:"heading",description:"A custom header for this column, will default to be the entity alias. Alternatively, you can set the title as the text contents of the <vdlx-datagrid-column> element.",acceptsExpression:!0},{name:"width",description:"The width, in pixels, to set the column.",acceptsExpression:!0},{name:"class",description:"CSS classes to add to the table column cells. You can provide multiple classes separated by spaces.",acceptsExpression:!0},{name:"sort-by-formatted",description:"Use formatted values for sorting."},{name:"filter-by-formatted",description:"Use formatted values for filtering. This defaults to false unless the entity has a label in which case the default is true."},{name:"editor-type",description:"The editor type to use, in edit mode, for cells in this column. If not specified then it will be autodetected based on entity type. Possible values: checkbox, select, text"},{name:"editor-checked-value",description:"The value to set the cell data to if input type is checkbox and it is checked."},{name:"editor-unchecked-value",description:"The value to set the cell data to if input type is checkbox and it is not checked."},{name:"editor-options-set",description:'Name of a set entity to use for select options. This will display labels if a labels entity is defined against this set. This will automatically set the editor-type to be "select".'},{name:"editor-options",description:'An expression that results in one of the follow to be used as the select options: an array of values, an object of property to value or an array of objects containing key and value properties. This will automatically set the editor-type to be "select".',acceptsExpression:!0,expressionVars:[{name:"value",type:"(string|boolean|number)",description:"The value of the cell. Its data type will match that of the array elements in this column."},{name:"rowData",type:"Array.<(string|boolean|number)>",description:"The values from each cell in the current row"}],expressionReturns:{type:"Array.<*>|Object.<string, string>|Array.<{key: string, value: *}>",description:"An array of values, an object of property to value or an array of objects containing key and value properties"}},{name:"editor-options-include-empty",description:"Allow array elements to be removed using the select input. Setting this to true will add a blank item to the top of the select list. Defaults to false."},{name:"render",description:"Reference to a custom cell renderer. Overrides any default entity rendering. This will be used to generate the cell value for rendering, filtering and sorting. It must be an expression and resolves as a function, this function should return a string.",acceptsExpression:!0,expressionVars:[{name:"data",type:"(string|boolean|number)",description:"The value of the cell being rendered. Its data type will match that of the array elements in this column."},{name:"type",type:"string",description:'The type call data requested - this will be "filter", "display", "type" or "sort"'},{name:"row",type:"Array.<(string|boolean|number)>",description:"The values from each cell in the current row"}]},{name:"format",description:"Specify a number formatting string. Only applicable to array elements of type integer, real, decision variable and constraint. The formatting syntax is explained in the Xpress Insight Developer Guide."}];VDL("vdlx-datagrid-column",{tag:"vdlx-datagrid-column",attributes:d,errorTargetSelector:function(e){return $(e).closest("vdlx-datagrid")[0]||e},template:"<vdl-contents></vdl-contents>",modifiesDescendants:!1,createViewModel:function(e,t){var o=ko.observable({}),d=ko.pureComputed(function(){return _.reduce(o(),function(e,t){return _.set(e,[t.setName,t.setPosition],t.value)},{})}),l=_.throttle(function(n){console.log("vdlx-datagrid update column");var l=$(t.element).find("vdl-index-filter").length===_.size(o()),c={scenario:ko.unwrap(e.scenario),title:ko.unwrap(e.heading),width:ko.unwrap(e.width),editable:"true"===(""+ko.unwrap(e.editable)).toLowerCase(),visible:!("false"===(""+ko.unwrap(e.visible)).toLowerCase()),style:e.style,sortByFormatted:e.sortByFormatted,filterByFormatted:e.filterByFormatted,editorOptionsSet:e.editorOptionsSet,selectNull:e.editorOptionsIncludeEmpty,checkedValue:e.editorCheckedValue,uncheckedValue:e.editorUncheckedValue,editorType:e.editorType};if(e.editorOptions&&(c.editorOptions=function(){return e.editorOptions.apply(null,arguments)||[]}),_.isFunction(e.render)&&(c.render=e.render),e.format?(c.render=r.markAsBuiltinRenderCallback(function(t,a){return"display"===a||"filter"===a&&e.filterByFormatted||"sort"===a&&e.sortByFormatted?i().Formatter.formatNumber(t,e.format):t}),c.format=e.format):c.format=null,e.entity?c.entity=e.entity:e.set&&(c.set=e.set),null!=e.setPosition&&(c.setPosition=e.setPosition),_.size(d())&&(c.filters=d()),c.entity){var u=ko.observable().extend({functionObservable:{onDependenciesChange:function(){e.tableValidate()},read:function(e,i,r){return function(e){var i=a.getValidationProperties({entity:c.entity,indices:e}),r=a.getCustomValidators(i,t.element);return a.createFromValidators(r)}(e)(i,r)},disposeWhenDependenciesChange:!1}});c.editorValidate=function(e,t,a){return u(a,e,t),u.peek()}}l&&(t.element[s]=c,_.isFunction(e.tableUpdate)&&e.tableUpdate()),_.isFunction(n)&&n()},n,{leading:!1}),c=ko.computed(function(){var t={scenario:ko.unwrap(e.scenario),title:ko.unwrap(e.heading),width:ko.unwrap(e.width),editable:ko.unwrap(e.editable),visible:ko.unwrap(e.visible)};return l(),t});return{columnUpdate:l,validate:l,dispose:function(){c.dispose(),_.isFunction(e.tableUpdate)&&e.tableUpdate()},filterUpdate:function(e,t){o(_.set(o(),e,t)),l()},filterRemove:function(e){o(_.omit(o(),e)),l()}}},transform:function(t,a,i){var r=$(t);if(!r.closest("vdlx-datagrid").length)throw Error("<vdlx-datagrid-column> must be contained within a <vdlx-datagrid> tag.");if(!a.entity&&!a.set)throw Error('Must specify either an "entity" or "set" attribute for <vdlx-datagrid-column>.');if(a.entity&&a.set)throw Error('You cannot specify both "entity" and "set" on a <vdlx-datagrid-column>.');if(a["set-position"]&&!a.set)throw Error('You cannot specify "set-position" without also specifying "set"');if(a.set&&a.scenario)throw Error('The "scenario" attribute cannot be used in combination with the "set" attribute on a <vdlx-datagrid-column>.');var n=(a.entity?a.entity:a.set).rawValue,s=i.getModelEntityByName(n);if(!s)throw Error('Entity "'+n+'" does not exist in the model schema.');var d=_.get(a,["set-position","rawValue"]);if(null!=d){if(!/^\d+$/.test(d))throw Error('Invalid set-position "'+d+'", must be a number at least zero');d=+d}var l=s.getType();if(a.entity&&l!==e.DataType.ARRAY)throw Error("Entity type "+l+" cannot be displayed as a column in <vdlx-datagrid>.");if(a.set&&l!==e.DataType.SET)throw Error("Entity type "+l+" cannot be specified as an index set in <vdlx-datagrid>.");var c=i.getComponentParamsBuilder(t).addParam("tableUpdate","$component.tableUpdate",!0).addParam("tableValidate","$component.tableValidate",!0).addParam("validate","$component.validate",!0);a.entity?c.addParam("entity",n):c.addParam("set",n),null!=d&&c.addParam("setPosition",d);var u=a.heading;if(u)c.addRawOrExpressionParam("heading",u);else{var p=$(t).contents().filter(function(e,t){return t.nodeType===Node.TEXT_NODE&&""!==t.textContent.trim()}).toArray().map(function(e){return e.textContent.trim()}).join(" ");p&&c.addParam("heading",p)}var m=a.scenario;m&&c.addRawOrExpressionParam("scenario",m);var h=a.editable;if(a.editable){if(s.getManagementType()===e.EntityManagementType.RESULT)throw Error("Cannot set editable attribute on a <vdlx-datagrid-column> bound to a result entity.");c.addRawOrExpressionParam("editable",h)}var f=a["vdl-visible"];if(f){if(f.expression.isString||_.isEmpty(f.expression.value))throw Error("vdl-visible has to be an expression");c.addRawOrExpressionParam("visible",f),r.removeAttr("vdl-visible")}var y=a.width;y&&(c.addRawOrExpressionParam("width",y),r.removeAttr("width"));var v=a.class;v&&(c.addRawOrExpressionParam("style",v),r.removeAttr("class"));var b=a["sort-by-formatted"];b&&"true"===b.rawValue&&c.addParam("sortByFormatted",!0);var w=a["filter-by-formatted"];w&&("true"===w.rawValue?c.addParam("filterByFormatted",!0):"false"===w.rawValue&&c.addParam("filterByFormatted",!1));var g=a["editor-type"];if(g&&-1!==["checkbox","select","text"].indexOf(g.rawValue)){if("select"===g.rawValue&&!a["editor-options-set"]&&!a["editor-options"])throw Error('vdlx-datagrid-column with "editor-type" of "select" needs either the "editor-options-set" or the "editor-options" attribute to be supplied.');c.addParam("editorType",g.rawValue)}var x=a["editor-checked-value"];x&&c.addParam("editorCheckedValue",x.rawValue);var E=a["editor-unchecked-value"];E&&c.addParam("editorUncheckedValue",E.rawValue);var k=a["editor-options-set"];if(k){var T=i.getModelEntityByName(k.rawValue);if(!T)throw Error('vdlx-datagrid-column editor-options-set entity "'+k.rawValue+'" does not exist in the model schema.');if(T.getType()!==e.DataType.SET)throw Error('Entity "'+k.rawValue+'" cannot be used as editor-options-set, wrong data type.');c.addParam("editorOptionsSet",k.rawValue)}var V=a["editor-options"];if(V){if(V.expression.isString)throw Error('vdlx-datagrid-column attribute "editor-options" must be an expression.');c.addFunctionOrExpressionParam("editorOptions",V.expression.value,["value","rowData"])}if(k&&V)throw Error("vdlx-datagrid-column cannot have both editor-options-set and editor-options specified.");var P=a["editor-options-include-empty"];P&&c.addParam("editorOptionsIncludeEmpty","true"===P.rawValue);var O=a.render;if(O){if(O.expression.isString)throw Error("Render parameter has to be an expression");c.addParam("render",O.expression.value,!0)}var A=a.format;if(A){if(!o.entityTypeIsNumber(s))throw Error("Entity "+n+" with element type "+s.getElementType()+" cannot be formatted");c.addParam("format",A.rawValue)}}});
},{}],"Focm":[function(require,module,exports) {
"use strict";require("../css/vdlx-datagrid.css"),require("./vdlx-datagrid"),require("./vdlx-datagrid-column");
},{"../css/vdlx-datagrid.css":"L+K7","./vdlx-datagrid":"eoyB","./vdlx-datagrid-column":"2esa"}]},{},["Focm"], null)
//# sourceMappingURL=/vdlx-datagrid.map