{"version":3,"sources":["vdlx-datagrid/attributes.js","vdlx-datagrid/transform.js","vdlx-datagrid/ko-utils.js","vdlx-datagrid/data-loader.js","vdlx-datagrid/data-transform.js","vdlx-datagrid/datagrid.js","vdlx-datagrid/view-model.js","vdlx-datagrid/index.js","vdlx-datagrid-column/index.js","index.js"],"names":["name","description","acceptsExpression","required","expressionVars","type","element","attributes","api","paramsBuilder","getComponentParamsBuilder","$element","$","scenarioId","expression","isString","parsedNum","parseInt","rawValue","isNaN","addParam","Error","value","pageSize","pageSizeNum","pageMode","addClass","columnFilter","addRemoveRow","tableId","attr","width","modifier","klass","removeAttr","rowFilter","addFunctionOrExpressionParam","gridData","gridHeight","$tableDiv","append","ko","map","_","curry","f","observable","pureComputed","unwrap","combineLatest","observables","concat","combineMap","filter","predicate","previousValue","val","onSubscribe","subscribe","subscription","apply","arguments","onSubscriptionDispose","dispose","findScenario","scenarios","identifier","result","some","currentScenario","getId","getSelectionIndex","getAutoTableEntities","columnOptions","modelSchema","insight","getView","getProject","getModelSchema","entities","flatten","entity","getEntity","getIndexSets","identity","uniq","getLabelsEntity","getScenarios","config","defaultScenario","isUndefined","scenario","columnsAndScenarios","zipObject","currentColumn","id","columnId","withScenarioData","config$","hasSubscription","scenarios$","scenarioData$","compose","configAndScenarios","undefined","isEmpty","scenarioObserverSubscription$","scenarioList","withScenarios","withEntities","notify","start","subscriptions","noop","oldScenarioObserver","getSubscriptionsCount","each","sub","DataUtils","insightModules","load","createDenseData","getAllColumnIndices","schema","option","getDisplayIndices","columnIndices","setCount","numColumns","length","indices","i","options","setPosns","getIndexPosns","forEach","setName","setPosn","getFilterValue","filters","key","position","keyJson","JSON","stringify","pick","count","keys","k","parse","generateCompositeKey","setValues","setNameAndPosns","arrayIndices","arrayOptions","setIndex","findIndex","filterValue","allColumnIndices","setNamePosnsAndOptions","scenariosData","indexScenarios","get","arrayIds","setIds","arrays","column","getArray","sets","setNameAndPosn","getSet","createRow","partial","SelectOptions","createTabulatorFactory","selector","Tabulator","Datagrid","options$","scenariosData$","indicesOptions$","property","entitiesOptions$","allColumnIndices$","setNameAndPosns$","entitiesOptions","setNamePosnsAndOptions$","indicesOptions","allScenarios$","values","indicesColumns$","allScenarios","title","String","getAbbreviation","field","mutatorData","data","params","getLabel","entitiesColumns$","assign","columns$","console","log","tabulatorFactory$","tabulatorOptions$","layout","placeholder","groupStartOpen","ajaxLoader","columns","table$","factory","oldTable","destroy","data$","dataTransform","table","setData","then","redraw","catch","err","setColumns","COLUMN_UPDATE_DELAY","parseIntOrKeep","isNullOrUndefined","isNull","stripEmpties","partialRight","flow","negate","componentInfo","view","vm","tableWidth","replace","tableOptions$","datagrid","buildTable","datagridConfig","find","idx","clone","configItem","scenarioNum","isNumber","push","omit","set","has","indexList","cleanItem","setPosition","range","j","item","sortBy","overrides","paging","pageLength","searching","showFilter","tableOptions","selectionAndNavigation","selectionNavigation","onError","bindKey","self","alwaysShowSelection","pagination","paginationSize","height","filterObservable","extend","functionObservable","onDependenciesChange","tableUpdate","read","peek","isFunction","modifiedTableOptions","cloneDeep","isPlainObject","isEditable","editable","noFns","isEqual","_appliedTableOptions","throttledBuildTable","throttle","leading","tableValidate","validate","VDL","tag","VXDAttributes","createViewModel","viewModel","transform","window","enums","vdlIndexFilter","validatorFactory","insightGetter","RenderCallbacks","COLUMN_BUILD_DELAY","AUTOCOLUMN_PROP_NAME","VDGCattributes","docIgnore","expressionReturns","errorTargetSelector","closest","template","modifiesDescendants","indexFilters$","filters$","reduce","memo","filterProps","uniqueId","buildColumn","done","columnReady","size","props","heading","toLowerCase","visible","style","sortByFormatted","filterByFormatted","editorOptionsSet","selectNull","editorOptionsIncludeEmpty","checkedValue","editorCheckedValue","uncheckedValue","editorUncheckedValue","editorType","editorOptions","render","format","markAsBuiltinRenderCallback","formatCell","Formatter","formatNumber","getValidationFn","validationProperties","getValidationProperties","customValidators","getCustomValidators","createFromValidators","validationObservable","rowData","disposeWhenDependenciesChange","editorValidate","newValue","paramsWatcher","computed","constructedParams","columnUpdate","filterUpdate","filterId","filterProperties","filterRemove","entityAttr","entityName","getModelEntityByName","test","entityType","getType","DataType","ARRAY","SET","addRawOrExpressionParam","textContent","contents","index","nodeType","Node","TEXT_NODE","trim","toArray","join","getManagementType","EntityManagementType","RESULT","editorTypes","indexOf","optionsSetEntity","optionsSetEntityType","entityTypeIsNumber","getElementType"],"mappings":"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","file":"vdlx-datagrid.map","sourceRoot":"..\\..\\..\\src\\js","sourcesContent":["export default [\r\n    {\r\n        name: 'id',\r\n        description:\r\n        'Specify an element id for the table. Useful if you later want to target the table using a selector. ' +\r\n        'If not given then an id will be generated.'\r\n    },\r\n    {\r\n        name: 'scenario',\r\n        description:\r\n        'The default scenario to use for fetching data in the table. This can be overridden per column but the default ' +\r\n        'will be used when a column does not specify a particular scenario and the index sets will be fetched from the default scenario.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-size',\r\n        description: 'The number of rows to show per-page in paged mode. Defaults to 50.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-mode',\r\n        description: 'By default the table will show all rows. Set this attribute to \"paged\" to enable table pagination.'\r\n    },\r\n    {\r\n        name: 'height',\r\n        description: 'Table height',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'show-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the table filter. This will show a single input above the table to filter across all table cells.'\r\n    },\r\n    {\r\n        name: 'column-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the column filters. This will show a header row with filter inputs for each column.'\r\n    },\r\n    {\r\n        name: 'add-remove-row',\r\n        description:\r\n        'Setting this will show the add-remove row buttons at the bottom of the table. Set to \"true\" ' +\r\n        'to prompt for index selection on row add. Set to \"addrow-autoinc\" will switch the behaviour to allow new ' +\r\n        'index values to be created, incrementing from the highest value in the set(s).'\r\n    },\r\n    {\r\n        name: 'selection-navigation',\r\n        description:\r\n        'Enable/disable table navigation, selection and clipboard features. Set to \"false\" to disable ' +\r\n        'these features. Defaults to true.'\r\n    },\r\n    {\r\n        name: 'modifier',\r\n        description:\r\n        'Table modifier function. Will be called after the table configuration ' +\r\n        'has been built. Provides a way to change the configuration before the table is rendered. Must ' +\r\n        'be an expression that resolves to a function. Takes the table configuration object and ' +\r\n        'should return the modified configuration. If an object is not returned then the table will be unaffected.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'width',\r\n        description:\r\n        'Set the table to a fixed width, in pixels. Accepts an integer value. ' +\r\n        'If set to the string \"custom\" then the table width is calculated by adding up all the widths of the columns in the table. ' +\r\n        \"If a column doesn't have a width specified then it is given a default value of 100px.\",\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'class',\r\n        description: 'Space-separated list of the classes of the element.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'always-show-selection',\r\n        description:\r\n            'Whether to display selection on inactive tables. Set to \"true\" to keep selection on a table when it becomes inactive. Defaults to false.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'row-filter',\r\n        description:\r\n        'Expression to be used for filtering the rows of a <vdl-table>. This must be an expression and ' +\r\n        'should resolve to either a function or a boolean value. If a function it will be executed when table updates. ' +\r\n        'The function will have the following signature (rowData, indices) and should return a boolean.',\r\n        acceptsExpression: true,\r\n        required: false,\r\n        expressionVars: [\r\n            {\r\n                name: 'rowData',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for all row cells'\r\n            },\r\n            {\r\n                name: 'indices',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for the index columns of the row'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'save-state',\r\n        description:\r\n        'Set this to \"false\" to disable table state saving. By default table state is stored in the ' +\r\n        \"user's browser session so that user settings (e.g. page, sorting and search) are preserved if table data \" +\r\n        'is reloaded. Defaults to true.',\r\n        acceptsExpression: false,\r\n        required: false\r\n    },\r\n    {\r\n        name: 'grid-data',\r\n        acceptsExpression: true\r\n    }\r\n];","export default function (element, attributes, api) {\r\n    var paramsBuilder = api.getComponentParamsBuilder(element);\r\n    var $element = $(element);\r\n\r\n    var scenarioId = attributes['scenario'];\r\n    if (scenarioId) {\r\n        if (scenarioId.expression.isString) {\r\n            var parsedNum = parseInt(scenarioId.rawValue);\r\n            if (isNaN(parsedNum)) {\r\n                paramsBuilder.addParam('scenarioId', scenarioId.rawValue);\r\n            } else {\r\n                if (parsedNum < 0) {\r\n                    throw Error('If scenario-id is specifying an index it must be a positive integer.');\r\n                }\r\n                paramsBuilder.addParam('scenarioId', parsedNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('scenarioId', scenarioId.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageSize = attributes['page-size'];\r\n    if (pageSize) {\r\n        if (pageSize.expression.isString) {\r\n            var pageSizeNum = parseInt(pageSize.rawValue);\r\n            if (!isNaN(pageSizeNum)) {\r\n                paramsBuilder.addParam('pageSize', pageSizeNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('pageSize', pageSize.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageMode = attributes['page-mode'];\r\n    if (pageMode && pageMode.rawValue === 'paged') {\r\n        paramsBuilder.addParam('pageMode', pageMode.rawValue);\r\n    } else {\r\n        paramsBuilder.addParam('pageMode', 'scrolling');\r\n        $(element).addClass('scrolling');\r\n    }\r\n\r\n    // TODO No table search in vdlx-datagrid\r\n    // var showFilter = attributes['show-filter'];\r\n    // if (showFilter) {\r\n    //     paramsBuilder.addParam('showFilter', showFilter.rawValue === 'true');\r\n    // }\r\n\r\n    var columnFilter = attributes['column-filter'];\r\n    if (columnFilter) {\r\n        paramsBuilder.addParam('columnFilter', columnFilter.rawValue === 'true');\r\n    }\r\n\r\n    var addRemoveRow = attributes['add-remove-row'];\r\n    if (addRemoveRow) {\r\n        if (addRemoveRow.rawValue === 'true') {\r\n            paramsBuilder.addParam('addRemoveRow', true);\r\n        } else if (addRemoveRow.rawValue === 'addrow-autoinc') {\r\n            paramsBuilder.addParam('addRemoveRow', 'addrow-autoinc');\r\n        }\r\n    }\r\n\r\n    // TODO row selection?\r\n    // var selectionNavigation = attributes['selection-navigation'];\r\n    // if (selectionNavigation && selectionNavigation.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('selectionNavigation', false);\r\n    // }\r\n\r\n    var tableId = attributes['id'];\r\n    if (tableId) {\r\n        $element.attr('id', null);\r\n        paramsBuilder.addParam('tableId', tableId.rawValue);\r\n    }\r\n\r\n    var width = attributes['width'];\r\n    if (width) {\r\n        paramsBuilder.addParam('width', width.rawValue);\r\n    }\r\n\r\n    // TODO state saving?\r\n    // var saveState = attributes['save-state'];\r\n    // if (saveState && saveState.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('saveState', false);\r\n    // }\r\n\r\n    var modifier = attributes['modifier'];\r\n    if (modifier) {\r\n        if (modifier.expression.isString) {\r\n            throw Error('The vdl-table modifier attribute must be supplied as an expression');\r\n        }\r\n        paramsBuilder.addParam('modifier', modifier.expression.value, true);\r\n    }\r\n\r\n    var klass = attributes['class'];\r\n    if (klass) {\r\n        $element.removeAttr('class');\r\n        paramsBuilder.addParam('class', klass.rawValue);\r\n    }\r\n\r\n    // TODO any way to achieve this? Is it needed?\r\n    // var alwaysShowSelection = attributes['always-show-selection'];\r\n    // if (alwaysShowSelection && (alwaysShowSelection.rawValue.toUpperCase() === 'TRUE')) {\r\n    //     paramsBuilder.addParam('alwaysShowSelection', true);\r\n    // }\r\n\r\n    var rowFilter = attributes['row-filter'];\r\n    if (rowFilter) {\r\n        if (rowFilter.expression.isString) {\r\n            throw Error('The vdl-table \"row-filter\" attribute must be supplied as an expression');\r\n        }\r\n\r\n        paramsBuilder.addFunctionOrExpressionParam('rowFilter', rowFilter.expression.value, ['rowData', 'indices']);\r\n    }\r\n\r\n    // TODO temporary data\r\n    var gridData = attributes['grid-data'];\r\n    if (gridData) {\r\n        paramsBuilder.addParam('gridData', gridData.expression.value, true);\r\n    }\r\n\r\n    var gridHeight = attributes['height'];\r\n    if (gridHeight) {\r\n        if (gridHeight.expression.isString) {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.rawValue, false);\r\n        } else {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.expression.value, true);\r\n        }\r\n    }\r\n\r\n    const $tableDiv = $('<div/>');\r\n    $tableDiv.attr('id', tableId.rawValue);\r\n    $tableDiv.addClass('table-striped table-bordered table-condensed');\r\n    $element.append($tableDiv);\r\n}","/** @type {KnockoutStatic} */ ko;\r\n\r\nexport const map = _.curry(function (f, observable) {\r\n    return ko.pureComputed(function () {\r\n        return f(ko.unwrap(observable));\r\n    });\r\n}, 2);\r\n\r\nexport const combineLatest = function (observables) {\r\n    return ko.pureComputed(function () {\r\n        return _.map([].concat(observables), function (observable) {\r\n            return ko.unwrap(observable);\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * @param {Function} f\r\n * @param {...KnockoutObservable} observables\r\n * @returns {KnockoutObservable}\r\n*/\r\nexport const combineMap = _.curry((f, ...observables) => {\r\n    return map(f, combineLatest(...observables));\r\n}, 2);\r\n\r\nexport const filter = _.curry(function (predicate, observable) {\r\n    var previousValue;\r\n\r\n    return map(function (val) {\r\n        if (predicate(val)) {\r\n            previousValue = val;\r\n            return val;\r\n        }\r\n        return previousValue;\r\n    }, observable);\r\n}, 2);\r\n\r\nexport const onSubscribe = _.curry(function (f, observable) {\r\n    var subscribe = observable.subscribe;\r\n    observable.subscribe = function () {\r\n        var subscription = subscribe.apply(observable, arguments);\r\n        f(subscription);\r\n        return subscription;\r\n    };\r\n\r\n    return observable;\r\n}, 2);\r\n\r\nexport function onSubscriptionDispose (f, subscription) {\r\n    var dispose = subscription.dispose;\r\n\r\n    subscription.dispose = function () {\r\n        dispose.apply(subscription, arguments);\r\n        f();\r\n    };\r\n\r\n    return subscription;\r\n}","import { onSubscribe, onSubscriptionDispose, combineLatest, filter, map } from \"./ko-utils\";\r\n\r\nfunction findScenario (scenarios, identifier) {\r\n    var result = null;\r\n\r\n    // Find scenario by ID.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getId() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    if (result) {\r\n        return result;\r\n    }\r\n\r\n    // Find by position.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getSelectionIndex() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getAutoTableEntities (columnOptions) {\r\n    var modelSchema = insight.getView().getProject().getModelSchema();\r\n\r\n    let entities = _.map(columnOptions, 'name');\r\n    // and index sets\r\n    entities = entities.concat(\r\n        _.flatten(_.map(entities, entity => modelSchema.getEntity(entity).getIndexSets()))\r\n    );\r\n\r\n    // Also add entities from editor options set.\r\n    entities = entities.concat(\r\n        _.filter(_.map(columnOptions, 'editorOptionsSet'), _.identity)\r\n    );\r\n\r\n    entities = _.uniq(entities);\r\n\r\n    return entities.concat(\r\n        _.filter(_.map(entities, (entity) => modelSchema.getEntity(entity).getLabelsEntity()), _.identity)\r\n    );\r\n}\r\n\r\nfunction getScenarios (config, scenarios) {\r\n    scenarios = [].concat(scenarios);\r\n    const defaultScenario = _.isUndefined(config.scenario) ? scenarios[0] : findScenario(scenarios, config.scenario);\r\n\r\n    // Bind a scenario per column - single table.\r\n    const columnsAndScenarios = _.zipObject(_.filter(_.map(config.columnOptions, currentColumn => [\r\n        currentColumn.id,\r\n        findScenario(scenarios, currentColumn.scenario)\r\n    ]), ([columnId, scenario]) => !!scenario));\r\n\r\n    return { defaultScenario: defaultScenario, scenarios: columnsAndScenarios };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} config$\r\n * @returns {KnockoutObservable<{defaultScenario: Scenario, scenarios: Scenario[]}>}\r\n */\r\nfunction withScenarioData (config$) {\r\n    let hasSubscription = false;\r\n    const scenarios$ = ko.observable([]);\r\n\r\n    const scenarioData$ = _.compose(\r\n        map((configAndScenarios) => {\r\n            if (!configAndScenarios) {\r\n                return undefined;\r\n            }\r\n            const [config, scenarios] = configAndScenarios;\r\n            return getScenarios(config, scenarios);\r\n        }),\r\n        filter(([config, scenarios]) => !_.isEmpty(config) && !_.isEmpty(scenarios)),\r\n        combineLatest\r\n    )([config$, scenarios$]);\r\n\r\n    const scenarioObserverSubscription$ = ko.pureComputed(function () {\r\n        let config = ko.unwrap(config$);\r\n        if (!_.isEmpty(config.scenarioList) && !_.isEmpty(config.columnOptions)) {\r\n            return insight.getView()\r\n                .withScenarios(config.scenarioList)\r\n                .withEntities(getAutoTableEntities(config.columnOptions))\r\n                .notify(function (scenarios) {\r\n                    scenarios$(scenarios);\r\n                })\r\n                .start();\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    return onSubscribe(function (subscription) {\r\n        let subscriptions = [];\r\n\r\n        if (!hasSubscription) {\r\n            subscriptions = [scenarioObserverSubscription$.subscribe(_.noop),\r\n            scenarioObserverSubscription$.subscribe(function (oldScenarioObserver) {\r\n                oldScenarioObserver && oldScenarioObserver.dispose();\r\n            }, null, 'beforeChange')];\r\n            hasSubscription = true;\r\n        }\r\n\r\n        onSubscriptionDispose(function () {\r\n            hasSubscription = !!scenarioData$.getSubscriptionsCount();\r\n            if (!hasSubscription) {\r\n                _.each(subscriptions, sub => sub.dispose());\r\n            }\r\n        }, subscription);\r\n\r\n    }, scenarioData$);\r\n};\r\n\r\nexport default withScenarioData;\r\n","const DataUtils = insightModules.load('utils/data-utils');\r\nconst createDenseData = insightModules.load('components/table/create-dense-data');\r\n\r\nexport const getAllColumnIndices = _.curry((schema, columnOptions) => {\r\n    return _.map(columnOptions, function (option) {\r\n        return schema.getEntity(option.name).getIndexSets();\r\n    });\r\n}, 2);\r\n\r\n/**\r\n * @typedef {{name: string, position: number}} SetNameAndPosition \r\n */\r\n\r\n/** @returns {SetNameAndPosition[]} */\r\nexport const getDisplayIndices = (columnIndices, columnOptions) => {\r\n    var setCount = {};\r\n    var numColumns = columnIndices.length;\r\n\r\n    for (var i = 0; i < numColumns; i++) {\r\n        const indices = columnIndices[i], options = columnOptions[i];\r\n        const setPosns = DataUtils.getIndexPosns(indices);\r\n        indices.forEach(function (setName, i) {\r\n            const setPosn = setPosns[i];\r\n            if (DataUtils.getFilterValue(options.filters, setName, setPosn) == null) {\r\n                // i.e. if there is no filter, then this index is to be used\r\n                const key = { name: setName, position: setPosn }, keyJson = JSON.stringify(key);\r\n                setCount[keyJson] = (setCount[keyJson] || 0) + 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    return _(setCount)\r\n        .pick(function (count) {\r\n            return count === numColumns;\r\n        })\r\n        .keys()\r\n        .map(function (k) {\r\n            return JSON.parse(k);\r\n        })\r\n        .value();\r\n}\r\n\r\nconst generateCompositeKey = function (setValues, setNameAndPosns, arrayIndices, arrayOptions) {\r\n    const setPosns = DataUtils.getIndexPosns(arrayIndices);\r\n    return arrayIndices.map(function (setName, i) {\r\n        const setPosn = setPosns[i];\r\n        const setIndex = _.findIndex(setNameAndPosns, { name: setName, position: setPosn });\r\n        const filterValue = DataUtils.getFilterValue(arrayOptions.filters, setName, setPosn);\r\n        if (setIndex !== -1) {\r\n            return setValues[setIndex];\r\n        } else if (filterValue != null) {\r\n            return filterValue;\r\n        } else {\r\n            throw Error('Cannot generate table with incomplete index configuration. Missing indices: ' +\r\n                setName + ' for entity: ' + arrayOptions.name);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (allColumnIndices, columnOptions, setNamePosnsAndOptions, scenariosData) => {\r\n\r\n    var defaultScenario = scenariosData.defaultScenario;\r\n    const indexScenarios = _.uniq(_.map(_.map(columnOptions, 'id'), id =>\r\n        _.get(scenariosData.scenarios, id, defaultScenario)\r\n    ));\r\n\r\n    const arrayIds = _.map(columnOptions, 'id');\r\n    const setIds = _.map(setNamePosnsAndOptions, 'options.id');\r\n\r\n    const arrays = _.map(columnOptions, column =>\r\n        _.get(scenariosData.scenarios, column.id, defaultScenario).getArray(column.name)\r\n    );\r\n\r\n    const sets = _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n        return _(indexScenarios)\r\n            .map(function (scenario) {\r\n                return scenario.getSet(setNameAndPosn.name);\r\n            })\r\n            .flatten()\r\n            .uniq()\r\n            .value();\r\n    });\r\n\r\n    const createRow = _.partial(_.zipObject, setIds.concat(arrayIds));\r\n\r\n    return _.map(createDenseData(sets, arrays, setNamePosnsAndOptions, allColumnIndices, columnOptions, generateCompositeKey), createRow);\r\n};","import dataTransform, { getAllColumnIndices, getDisplayIndices } from './data-transform';\r\nimport { map, combineMap } from './ko-utils';\r\nimport withScenarioData from './data-loader';\r\n\r\nconst SelectOptions = insightModules.load('components/autotable-select-options');\r\n\r\nconst createTabulatorFactory = selector => config => new Tabulator(selector, config);\r\n\r\nclass Datagrid {\r\n  constructor(options$) {\r\n    const schema = insight\r\n      .getView()\r\n      .getProject()\r\n      .getModelSchema();\r\n    const scenariosData$ = withScenarioData(options$);\r\n    const indicesOptions$ = map(_.property('indicesOptions'), options$);\r\n    const entitiesOptions$ = map(_.property('columnOptions'), options$);\r\n    const allColumnIndices$ = map(getAllColumnIndices(schema), entitiesOptions$);\r\n\r\n    /** @type {KnockoutComputed<import('./data-transform').SetNameAndPosition[]>} */\r\n    const setNameAndPosns$ = combineMap(\r\n      ([columnIndices, entitiesOptions]) => getDisplayIndices(columnIndices, entitiesOptions),\r\n      [allColumnIndices$, entitiesOptions$]\r\n    );\r\n\r\n    const setNamePosnsAndOptions$ = combineMap(\r\n      ([setNameAndPosns, indicesOptions]) =>\r\n        _.map(setNameAndPosns, setNameAndPosn => ({\r\n          ...setNameAndPosn,\r\n          options: _.get(indicesOptions, `${setNameAndPosn.name}.${setNameAndPosn.position}`, {\r\n            id: `${setNameAndPosn.name}_${setNameAndPosn.position}`\r\n          })\r\n        })),\r\n      [setNameAndPosns$, indicesOptions$]\r\n    );\r\n\r\n    const allScenarios$ = map(\r\n      scenariosData =>\r\n        scenariosData && _.uniq([scenariosData.defaultScenario].concat(_.values(scenariosData.scenarios))),\r\n      scenariosData$\r\n    );\r\n\r\n    const indicesColumns$ = combineMap(\r\n      ([setNamePosnsAndOptions, allScenarios]) => {\r\n        return _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n          const { name, options } = setNameAndPosn;\r\n          const entity = schema.getEntity(name);\r\n\r\n          return {\r\n            title: String(options.title || entity.getAbbreviation() || name),\r\n            field: options.id,\r\n            mutatorData: (value, data, type, params) => SelectOptions.getLabel(schema, allScenarios, entity, value)\r\n          };\r\n        });\r\n      },\r\n      [setNamePosnsAndOptions$, allScenarios$]\r\n    );\r\n\r\n    const entitiesColumns$ = map(\r\n      entitiesOptions => _.map(entitiesOptions, entity => _.assign(entity, { title: entity.name, field: entity.id })),\r\n      entitiesOptions$\r\n    );\r\n\r\n    const columns$ = combineMap(_.flatten, [indicesColumns$, entitiesColumns$]);\r\n    columns$.subscribe(console.log);\r\n\r\n    const tabulatorFactory$ = map(\r\n      options => (options.tableId ? createTabulatorFactory(`#${options.tableId}`) : _.noop),\r\n      options$\r\n    );\r\n\r\n    const tabulatorOptions$ = map(\r\n      options => ({\r\n        layout: 'fitColumns',\r\n        placeholder: 'Waiting for data',\r\n        groupStartOpen: false,\r\n        ajaxLoader: true,\r\n        columns: []\r\n      }),\r\n      options$\r\n    );\r\n\r\n    tabulatorOptions$.subscribe(console.log);\r\n\r\n    const table$ = combineMap(([factory, options]) => factory(options), [tabulatorFactory$, tabulatorOptions$]);\r\n\r\n    table$.subscribe(oldTable => oldTable && oldTable.destroy(), null, 'beforeChange');\r\n\r\n    const data$ = combineMap(params => !_.some(params, _.isEmpty) && dataTransform(...params), [\r\n      allColumnIndices$,\r\n      entitiesColumns$,\r\n      setNamePosnsAndOptions$,\r\n      scenariosData$\r\n    ]);\r\n\r\n    combineMap(\r\n      ([table, data]) =>\r\n        table &&\r\n        data &&\r\n        table\r\n          .setData(data)\r\n          .then(function () {\r\n            table.redraw();\r\n          })\r\n          .catch(function (err) {\r\n            debugger;\r\n          }),\r\n      [table$, data$]\r\n    ).subscribe(_.noop);\r\n\r\n    combineMap(([table, columns]) => table && columns && table.setColumns(columns), [table$, columns$]).subscribe(\r\n      _.noop\r\n    );\r\n  }\r\n}\r\n\r\nexport default Datagrid;\r\n","import withScenarioData from './data-loader';\r\nimport Datagrid from './datagrid';\r\n\r\nconst COLUMN_UPDATE_DELAY = 100;\r\n\r\nfunction parseIntOrKeep (val) {\r\n    var result = _.parseInt(val);\r\n    if (_.isNaN(result)) {\r\n        return val;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isNullOrUndefined (val) {\r\n    return _.isNull(val) || _.isUndefined(val);\r\n}\r\n\r\nconst stripEmpties = _.partialRight(_.pick, _.flow(_.identity, _.negate(isNullOrUndefined)));\r\n\r\nexport default function (params, componentInfo) {\r\n    const view = insight.getView();\r\n\r\n    var vm = {};\r\n\r\n    if (params.width) {\r\n        vm.tableWidth = params.width.replace('px', '');\r\n    }\r\n\r\n    const element = componentInfo.element;\r\n\r\n    const defaultScenario = params.scenarioId || 0;\r\n\r\n    const tableOptions$ = ko.observable({});\r\n\r\n    var datagrid = new Datagrid(tableOptions$);\r\n\r\n    function buildTable () {\r\n        const datagridConfig = $(element)\r\n            .find('vdlx-datagrid-column')\r\n            .map(function (idx, element) {\r\n                return _.clone(element['autotableConfig']);\r\n            });\r\n\r\n        var entities = [];\r\n        var indices = {};\r\n\r\n        _.forEach(datagridConfig, function (configItem) {\r\n            var scenarioNum = parseIntOrKeep(configItem.scenario || defaultScenario);\r\n            if (_.isNumber(scenarioNum)) {\r\n                if (scenarioNum < 0) {\r\n                    // reject('Scenario index must be a positive integer.');\r\n                }\r\n            }\r\n            configItem.scenario = scenarioNum;\r\n            if (!!configItem.entity) {\r\n                configItem.name = configItem.entity;\r\n                delete configItem.entity;\r\n                entities.push(_.omit(configItem, isNullOrUndefined));\r\n            } else if (!!configItem.set) {\r\n                if (!_.has(indices, [configItem.set])) {\r\n                    indices[configItem.set] = [];\r\n                }\r\n                const indexList = indices[configItem.set];\r\n                const cleanItem = _.omit(configItem, isNullOrUndefined);\r\n                const setPosn = configItem.setPosition;\r\n                if (setPosn == null) {\r\n                    indexList.push(cleanItem);\r\n                } else if (indexList[setPosn]) {\r\n                    // reject('Table column for set \"' + configItem.set + '\" at position ' + setPosn\r\n                    //     + ' specified more than once');\r\n                } else {\r\n                    indexList[setPosn] = cleanItem;\r\n                    // if we have increased the length, then need to\r\n                    // explicitly inserts null/undefined here, or some\r\n                    // standard algorithms behave oddly. (E.g. _.map\r\n                    // will count the missing items, but [].map won't)\r\n                    _.range(indexList.length).forEach(function (j) {\r\n                        if (!indexList[j]) {\r\n                            indexList[j] = null;\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // reject('Unknown column type');\r\n            }\r\n        });\r\n\r\n        var scenarioList = _(entities).filter(function (item) {\r\n            return !isNullOrUndefined(item);\r\n        }).map(function (item) {\r\n            return ko.unwrap(item.scenario);\r\n        }).uniq().sortBy().value();\r\n\r\n        var overrides = stripEmpties({\r\n            paging: params.pageMode,\r\n            pageLength: params.pageSize,\r\n            searching: params.showFilter,\r\n            columnFilter: params.columnFilter\r\n        });\r\n\r\n        var tableOptions = {\r\n            tableId: params.tableId,\r\n            columnOptions: entities,\r\n            addRemoveRow: params.addRemoveRow,\r\n            selectionAndNavigation: params.selectionNavigation,\r\n            overrides: overrides,\r\n            scenarioList: scenarioList,\r\n            onError: _.bindKey(self, '_wrapAlert'),\r\n            alwaysShowSelection: params.alwaysShowSelection,\r\n            gridHeight: params.gridHeight,\r\n            gridData: params.gridData\r\n        };\r\n\r\n        // TODO stretch goal\r\n        // if (params.saveState === false) {\r\n        //     tableOptions.saveState = params.saveState;\r\n        // }\r\n\r\n        var pageMode = params['pageMode'];\r\n\r\n        if (pageMode === 'paged') {\r\n            tableOptions.pagination = 'local';\r\n            tableOptions.paginationSize = params.pageSize || 15;\r\n        } else if (!pageMode || pageMode === 'none') {\r\n            tableOptions.height = false;\r\n        }\r\n\r\n        if (params.rowFilter) {\r\n            var filterObservable = ko.observable().extend({\r\n                functionObservable: {\r\n                    onDependenciesChange: function () {\r\n                        self.tableUpdate();\r\n                    },\r\n                    read: params.rowFilter\r\n                }\r\n            });\r\n\r\n            tableOptions.rowFilter = function () {\r\n                filterObservable.apply(null, arguments);\r\n                return filterObservable.peek();\r\n            };\r\n        }\r\n\r\n        if (_.keys(indices).length) {\r\n            tableOptions.indicesOptions = indices;\r\n        }\r\n\r\n\r\n        tableOptions = stripEmpties(tableOptions);\r\n\r\n        if (!_.isUndefined(params.modifier)) {\r\n            if (_.isFunction(params.modifier)) {\r\n                // Pass cloned options so they cannot modify the original table options object\r\n                var modifiedTableOptions = params.modifier(_.cloneDeep(tableOptions));\r\n                if (_.isPlainObject(modifiedTableOptions)) {\r\n                    tableOptions = modifiedTableOptions;\r\n                }\r\n            } else {\r\n                // console.error('vdl-table (' + self.tableId + '): \"modifier\" attribute must be a function.');\r\n            }\r\n        }\r\n\r\n        if (tableOptions.addRemoveRow) {\r\n            var isEditable = tableOptions.columnOptions.some(function (column) {\r\n                return !!column.editable;\r\n            });\r\n\r\n            if (!isEditable) {\r\n                tableOptions.addRemoveRow = false;\r\n                // not a hard error as this is used as a feature when making a table read only based on permissions\r\n                // console.log('vdl-table (' + self.tableId + \"): add/remove rows disabled. Table needs to have at least one editable column to use this feature.\");\r\n            }\r\n        }\r\n\r\n        if (_.isEmpty(scenarioList) || _.isEmpty(tableOptions.columnOptions)) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Scenario list or table column configuration is empty, ignoring update');\r\n\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n\r\n            // empty table element, to get rid of old configuration\r\n            // $table && $table.empty();\r\n            return;\r\n        }\r\n\r\n        // functions should not be used in the equality comparison\r\n        const noFns = _.partialRight(_.omit, _.isFunction);\r\n        if (_.isEqual(noFns(this._appliedTableOptions), noFns(tableOptions))) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Table configuration unchanged, ignoring update');\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n            return;\r\n        }\r\n\r\n        tableOptions$(tableOptions);\r\n\r\n    }\r\n\r\n    const throttledBuildTable = _.throttle(buildTable, COLUMN_UPDATE_DELAY, { leading: false });\r\n\r\n    vm.tableUpdate = function () {\r\n        throttledBuildTable();\r\n    };\r\n\r\n    vm.tableValidate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.validate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.dispose = function () { };\r\n\r\n    buildTable();\r\n\r\n    return vm;\r\n}","\r\nimport VXDAttributes from './attributes';\r\nimport transform from './transform';\r\nimport viewModel from './view-model';\r\n\r\nVDL('vdlx-datagrid', {\r\n    tag: 'vdlx-datagrid',\r\n    attributes: VXDAttributes,\r\n    createViewModel: viewModel,\r\n    transform: transform\r\n});\r\n","(function (window) {\r\n    /*\r\n        vdlx-datagrid-column\r\n    \r\n        To be used as the direct child of <vdlx-datagrid>. <vdlx-datagrid-column may be used multiple times within its parent.\r\n        One of these tags directly generates a column in the resulting Datagrid.\r\n    \r\n        This tag creates config to tell its parent how to populate the datagrid column.\r\n     */\r\n\r\n    var enums = insightModules.load('enums');\r\n    var vdlIndexFilter = insightModules.load('vdl/extensions/vdl-index-filter');\r\n    var validatorFactory = insightModules.load('vdl/vdl-validator-factory');\r\n    var insightGetter = insightModules.load('insight-getter');\r\n    var RenderCallbacks = insightModules.load('components/table/render-callbacks');\r\n    var DataUtils = insightModules.load('utils/data-utils');\r\n\r\n    var COLUMN_BUILD_DELAY = 50;\r\n    var AUTOCOLUMN_PROP_NAME = 'autotableConfig';\r\n\r\n    /*\r\n        vdlx-datagrid-column attributes\r\n    \r\n        TODO do we need to add extra properties for the datagrid?\r\n     */\r\n    var VDGCattributes = [\r\n        {\r\n            name: 'entity',\r\n            description: 'Name of the array entity to show in this column. Throws an error if the entity doesn\\'t exist or is not an array or set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set',\r\n            description: 'Name of the set entity to show in this column. Throws an error if the entity doesn\\'t exist or is not a set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set-position',\r\n            description: 'Index (zero-based) of occurrence of that index set in the index tuple for the array.' +\r\n                'Defaults to next available position.'\r\n        },\r\n        {\r\n            name: 'scenario',\r\n            description: 'The scenario id/index for this column. Not allowed on index column (when specifying a set entity)',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'editable',\r\n            description: 'Whether the cells within this column are editable.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'vdl-visible',\r\n            acceptsExpression: true,\r\n            docIgnore: true\r\n        },\r\n        {\r\n            name: 'heading',\r\n            description: 'A custom header for this column, will default to be the entity alias. ' +\r\n                'Alternatively, you can set the title as the text contents of the <vdlx-datagrid-column> element.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'width',\r\n            description: 'The width, in pixels, to set the column.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'class',\r\n            description: 'CSS classes to add to the table column cells. You can provide multiple classes separated by spaces.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'sort-by-formatted',\r\n            description: 'Use formatted values for sorting.'\r\n        },\r\n        {\r\n            name: 'filter-by-formatted',\r\n            description: 'Use formatted values for filtering. This defaults to false unless the entity has a label in which case the default is true.'\r\n        },\r\n        {\r\n            name: 'editor-type',\r\n            description: 'The editor type to use, in edit mode, for cells in this column. If not specified then it ' +\r\n                'will be autodetected based on entity type. Possible values: checkbox, select, text'\r\n        },\r\n        {\r\n            name: 'editor-checked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is checked.'\r\n        },\r\n        {\r\n            name: 'editor-unchecked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is not checked.'\r\n        },\r\n        {\r\n            name: 'editor-options-set',\r\n            description: 'Name of a set entity to use for select options. This will display labels if a labels entity ' +\r\n                'is defined against this set. This will automatically set the editor-type to be \"select\".'\r\n        },\r\n        {\r\n            name: 'editor-options',\r\n            description: 'An expression that results in one of the follow to be used as the select options: an array ' +\r\n                'of values, an object of property to value or an array of objects containing key and value properties. ' +\r\n                'This will automatically set the editor-type to be \"select\".',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'value',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'rowData',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ],\r\n            expressionReturns: {\r\n                type: 'Array.<*>|Object.<string, string>|Array.<{key: string, value: *}>',\r\n                description: 'An array of values, an object of property to value or an array of objects containing key and value properties'\r\n            }\r\n        },\r\n        {\r\n            name: 'editor-options-include-empty',\r\n            description: 'Allow array elements to be removed using the select input. Setting this to true will add ' +\r\n                'a blank item to the top of the select list. Defaults to false.'\r\n        },\r\n        {\r\n            name: 'render',\r\n            description: 'Reference to a custom cell renderer. Overrides any default entity rendering. This will be used to generate the cell value ' +\r\n                'for rendering, filtering and sorting. It must be an expression and resolves as a function, this function should return a string.',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'data',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell being rendered. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'type',\r\n                    type: 'string',\r\n                    description: 'The type call data requested - this will be \"filter\", \"display\", \"type\" or \"sort\"'\r\n                },\r\n                {\r\n                    name: 'row',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'format',\r\n            description: 'Specify a number formatting string. Only applicable to array elements of type integer, real, ' +\r\n                'decision variable and constraint. The formatting syntax is explained in the Xpress Insight Developer Guide.'\r\n        }\r\n    ];\r\n\r\n    VDL('vdlx-datagrid-column', {\r\n        tag: 'vdlx-datagrid-column',\r\n        attributes: VDGCattributes,\r\n        // Apply errors to the parent vdlx-datagrid element\r\n        errorTargetSelector: function (element) {\r\n            // error is displayed on autotable, or if there isn't one, the parent\r\n            // will have to do as as default\r\n            return $(element).closest('vdlx-datagrid')[0] || element;\r\n        },\r\n\r\n        template: '<vdl-contents></vdl-contents>',\r\n\r\n        modifiesDescendants: false,\r\n\r\n        createViewModel: function (params, componentInfo) {\r\n\r\n            var indexFilters$ = ko.observable({});\r\n            var filters$ = ko.pureComputed(function () {\r\n                return _.reduce(indexFilters$(), function (memo, filterProps) {\r\n                    return _.set(memo, [filterProps.setName, filterProps.setPosition], filterProps.value);\r\n                }, {});\r\n            });\r\n\r\n            const columnId = _.uniqueId('datagrid-column');\r\n\r\n            var buildColumn = _.throttle(function (done) {\r\n                console.log('vdlx-datagrid update column');\r\n                var columnReady = $(componentInfo.element).find('vdl-index-filter').length === _.size(indexFilters$());\r\n\r\n                var props = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ('' + ko.unwrap(params.editable)).toLowerCase() === 'true',\r\n                    visible: !(('' + ko.unwrap(params.visible)).toLowerCase() === 'false'),\r\n                    style: params.style,\r\n                    sortByFormatted: params.sortByFormatted,\r\n                    filterByFormatted: params.filterByFormatted,\r\n                    editorOptionsSet: params.editorOptionsSet,\r\n                    selectNull: params.editorOptionsIncludeEmpty,\r\n                    checkedValue: params.editorCheckedValue,\r\n                    uncheckedValue: params.editorUncheckedValue,\r\n                    editorType: params.editorType,\r\n                    id: columnId \r\n                };\r\n\r\n                if (params.editorOptions) {\r\n                    props.editorOptions = function () {\r\n                        // Return an empty list of options if value is undefined\r\n                        return params.editorOptions.apply(null, arguments) || [];\r\n                    };\r\n                }\r\n\r\n                if (_.isFunction(params.render)) {\r\n                    props.render = params.render;\r\n                }\r\n\r\n                if (params.format) {\r\n                    props.render = RenderCallbacks.markAsBuiltinRenderCallback(function (data, type) {\r\n                        var formatCell = type === 'display'\r\n                            || (type === 'filter' && params.filterByFormatted)\r\n                            || (type === 'sort' && params.sortByFormatted);\r\n\r\n                        return formatCell ? insightGetter().Formatter.formatNumber(data, params.format) : data;\r\n                    });\r\n\r\n                    props.format = params.format;\r\n                } else {\r\n                    props.format = null;\r\n                }\r\n\r\n                if (!!params.entity) {\r\n                    props.entity = params.entity;\r\n                } else if (!!params.set) {\r\n                    props.set = params.set;\r\n                }\r\n\r\n                if (params.setPosition != null) {\r\n                    props.setPosition = params.setPosition;\r\n                }\r\n\r\n                if (_.size(filters$())) {\r\n                    props.filters = filters$();\r\n                }\r\n\r\n                if (props.entity) {\r\n                    var getValidationFn = function (indices) {\r\n                        var validationProperties = validatorFactory.getValidationProperties({\r\n                            entity: props.entity,\r\n                            indices: indices\r\n                        });\r\n\r\n                        var customValidators = validatorFactory\r\n                            .getCustomValidators(validationProperties, componentInfo.element);\r\n\r\n                        return validatorFactory.createFromValidators(customValidators);\r\n                    };\r\n\r\n                    var validationObservable = ko.observable().extend({\r\n                        functionObservable: {\r\n                            onDependenciesChange: function () {\r\n                                params.tableValidate();\r\n\r\n                            },\r\n                            read: function (indices, value, rowData) {\r\n                                return getValidationFn(indices)(value, rowData);\r\n                            },\r\n                            disposeWhenDependenciesChange: false\r\n                        }\r\n                    });\r\n\r\n                    props.editorValidate = function (newValue, rowData, keys) {\r\n                        validationObservable(keys, newValue, rowData);\r\n                        return validationObservable.peek();\r\n                    };\r\n                }\r\n\r\n                if (columnReady) {\r\n                    componentInfo.element[AUTOCOLUMN_PROP_NAME] = props;\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                }\r\n\r\n                if (_.isFunction(done)) {\r\n                    done();\r\n                }\r\n\r\n            }, COLUMN_BUILD_DELAY, { leading: false });\r\n\r\n            var paramsWatcher = ko.computed(function () {\r\n                var constructedParams = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ko.unwrap(params.editable),\r\n                    visible: ko.unwrap(params.visible),\r\n                };\r\n\r\n                buildColumn();\r\n\r\n                return constructedParams;\r\n            });\r\n\r\n            return {\r\n                columnUpdate: buildColumn,\r\n                validate: buildColumn,\r\n                dispose: function () {\r\n                    paramsWatcher.dispose();\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                },\r\n                filterUpdate: function (filterId, filterProperties) {\r\n                    indexFilters$(_.set(indexFilters$(), filterId, filterProperties));\r\n                    buildColumn();\r\n                },\r\n                filterRemove: function (filterId) {\r\n                    indexFilters$(_.omit(indexFilters$(), filterId));\r\n                    buildColumn();\r\n                }\r\n            };\r\n        },\r\n\r\n        transform: function (element, attributes, api) {\r\n\r\n            var $element = $(element);\r\n\r\n            if (!$element.closest('vdlx-datagrid').length) {\r\n                throw Error('<vdlx-datagrid-column> must be contained within a <vdlx-datagrid> tag.');\r\n            }\r\n\r\n            if (!attributes.entity && !attributes.set) {\r\n                throw Error('Must specify either an \"entity\" or \"set\" attribute for <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes.entity && attributes.set) {\r\n                throw Error('You cannot specify both \"entity\" and \"set\" on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes['set-position'] && !attributes.set) {\r\n                throw Error('You cannot specify \"set-position\" without also specifying \"set\"');\r\n            }\r\n\r\n            if (attributes.set && attributes.scenario) {\r\n                throw Error('The \"scenario\" attribute cannot be used in combination with the \"set\" attribute on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            var entityAttr = !!attributes.entity ? attributes.entity : attributes.set;\r\n\r\n            var entityName = entityAttr.rawValue;\r\n            var entity = api.getModelEntityByName(entityName);\r\n            if (!entity) {\r\n                throw Error('Entity \"' + entityName + '\" does not exist in the model schema.');\r\n            }\r\n\r\n            var setPosition = _.get(attributes, ['set-position', 'rawValue']);\r\n            if (setPosition != null) {\r\n                if (!/^\\d+$/.test(setPosition)) {\r\n                    throw Error('Invalid set-position \"' + setPosition + '\", must be a number at least zero');\r\n                } else {\r\n                    setPosition = +setPosition;\r\n                }\r\n            }\r\n            var entityType = entity.getType();\r\n            if (attributes.entity && entityType !== enums.DataType.ARRAY) {\r\n                throw Error('Entity type ' + entityType + ' cannot be displayed as a column in <vdlx-datagrid>.');\r\n            } else if (attributes.set && entityType !== enums.DataType.SET) {\r\n                throw Error('Entity type ' + entityType + ' cannot be specified as an index set in <vdlx-datagrid>.');\r\n            }\r\n\r\n            var paramsBuilder = api.getComponentParamsBuilder(element)\r\n                .addParam('tableUpdate', '$component.tableUpdate', true)\r\n                .addParam('tableValidate', '$component.tableValidate', true)\r\n                .addParam('validate', '$component.validate', true);\r\n\r\n            if (!!attributes.entity) {\r\n                paramsBuilder.addParam('entity', entityName);\r\n            } else {\r\n                paramsBuilder.addParam('set', entityName);\r\n            }\r\n\r\n            if (setPosition != null) {\r\n                paramsBuilder.addParam('setPosition', setPosition);\r\n            }\r\n\r\n            var heading = attributes['heading'];\r\n            if (heading) {\r\n                paramsBuilder.addRawOrExpressionParam('heading', heading);\r\n            } else {\r\n                var textContent = $(element)\r\n                    .contents()\r\n                    .filter(function (index, element) {\r\n                        return element.nodeType === Node.TEXT_NODE && element.textContent.trim() !== '';\r\n                    })\r\n                    .toArray()\r\n                    .map(function (element) {\r\n                        return element.textContent.trim();\r\n                    })\r\n                    .join(' ');\r\n\r\n                if (textContent) {\r\n                    paramsBuilder.addParam('heading', textContent);\r\n                }\r\n            }\r\n\r\n            var scenario = attributes['scenario'];\r\n            if (scenario) {\r\n                paramsBuilder.addRawOrExpressionParam('scenario', scenario);\r\n            }\r\n\r\n            var editable = attributes['editable'];\r\n            if (attributes['editable']) {\r\n                if (entity.getManagementType() === enums.EntityManagementType.RESULT) {\r\n                    throw Error('Cannot set editable attribute on a <vdlx-datagrid-column> bound to a result entity.');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('editable', editable);\r\n            }\r\n\r\n            var visible = attributes['vdl-visible'];\r\n            if (visible) {\r\n                if (visible.expression.isString || _.isEmpty(visible.expression.value)) {\r\n                    throw Error('vdl-visible has to be an expression');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('visible', visible);\r\n                $element.removeAttr('vdl-visible');\r\n            }\r\n\r\n            var width = attributes['width'];\r\n            if (width) {\r\n                paramsBuilder.addRawOrExpressionParam('width', width);\r\n                // Remove the width attribute from the vdlx-datagrid-column as it has implications on page layout\r\n                $element.removeAttr('width');\r\n            }\r\n\r\n            var style = attributes['class'];\r\n            if (style) {\r\n                paramsBuilder.addRawOrExpressionParam('style', style);\r\n                // Remove the class attribute from the vdlx-datagrid-column as it has implications on styling for the hidden element\r\n                $element.removeAttr('class');\r\n            }\r\n\r\n            var sortByFormatted = attributes['sort-by-formatted'];\r\n            if (sortByFormatted && sortByFormatted.rawValue === 'true') {\r\n                paramsBuilder.addParam('sortByFormatted', true);\r\n            }\r\n\r\n            var filterByFormatted = attributes['filter-by-formatted'];\r\n            if (filterByFormatted) {\r\n                if (filterByFormatted.rawValue === 'true') {\r\n                    paramsBuilder.addParam('filterByFormatted', true);\r\n                } else if (filterByFormatted.rawValue === 'false') {\r\n                    paramsBuilder.addParam('filterByFormatted', false);\r\n                }\r\n            }\r\n\r\n            var editorType = attributes['editor-type'];\r\n            var editorTypes = ['checkbox', 'select', 'text'];\r\n            if (editorType && editorTypes.indexOf(editorType.rawValue) !== -1) {\r\n                if (editorType.rawValue === 'select') {\r\n                    if (!attributes['editor-options-set'] && !attributes['editor-options']) {\r\n                        throw Error('vdlx-datagrid-column with \"editor-type\" of \"select\" needs either the \"editor-options-set\" or the \"editor-options\" attribute to be supplied.');\r\n                    }\r\n                }\r\n                paramsBuilder.addParam('editorType', editorType.rawValue);\r\n            }\r\n\r\n            var editorCheckedValue = attributes['editor-checked-value'];\r\n            if (editorCheckedValue) {\r\n                paramsBuilder.addParam('editorCheckedValue', editorCheckedValue.rawValue);\r\n            }\r\n\r\n            var editorUncheckedValue = attributes['editor-unchecked-value'];\r\n            if (editorUncheckedValue) {\r\n                paramsBuilder.addParam('editorUncheckedValue', editorUncheckedValue.rawValue);\r\n            }\r\n\r\n            var editorOptionsSet = attributes['editor-options-set'];\r\n            if (editorOptionsSet) {\r\n                var optionsSetEntity = api.getModelEntityByName(editorOptionsSet.rawValue);\r\n                if (!optionsSetEntity) {\r\n                    throw Error('vdlx-datagrid-column editor-options-set entity \"' + editorOptionsSet.rawValue + '\" does not exist in the model schema.');\r\n                }\r\n\r\n                var optionsSetEntityType = optionsSetEntity.getType();\r\n                if (optionsSetEntityType !== enums.DataType.SET) {\r\n                    throw Error('Entity \"' + editorOptionsSet.rawValue + '\" cannot be used as editor-options-set, wrong data type.');\r\n                }\r\n                paramsBuilder.addParam('editorOptionsSet', editorOptionsSet.rawValue);\r\n            }\r\n\r\n            var editorOptions = attributes['editor-options'];\r\n            if (editorOptions) {\r\n                if (editorOptions.expression.isString) {\r\n                    throw Error('vdlx-datagrid-column attribute \"editor-options\" must be an expression.');\r\n                }\r\n                paramsBuilder.addFunctionOrExpressionParam(\r\n                    'editorOptions',\r\n                    editorOptions.expression.value,\r\n                    ['value', 'rowData']);\r\n            }\r\n\r\n            if (editorOptionsSet && editorOptions) {\r\n                throw Error('vdlx-datagrid-column cannot have both editor-options-set and editor-options specified.');\r\n            }\r\n\r\n            var editorOptionsIncludeEmpty = attributes['editor-options-include-empty'];\r\n            if (editorOptionsIncludeEmpty) {\r\n                paramsBuilder.addParam('editorOptionsIncludeEmpty', editorOptionsIncludeEmpty.rawValue === 'true');\r\n            }\r\n\r\n            var render = attributes['render'];\r\n            if (render) {\r\n                if (render.expression.isString) {\r\n                    throw Error('Render parameter has to be an expression');\r\n                }\r\n                paramsBuilder.addParam('render', render.expression.value, true);\r\n            }\r\n\r\n            var format = attributes['format'];\r\n            if (format) {\r\n                if (!DataUtils.entityTypeIsNumber(entity)) {\r\n                    throw Error('Entity ' + entityName + ' with element type ' + entity.getElementType() + ' cannot be formatted');\r\n                }\r\n\r\n                paramsBuilder.addParam('format', format.rawValue);\r\n            }\r\n        }\r\n    });\r\n})(window);","\r\nimport '../css/vdlx-datagrid.scss';\r\nimport './vdlx-datagrid';\r\nimport './vdlx-datagrid-column';\r\n\r\n"]}