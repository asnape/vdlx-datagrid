{"version":3,"sources":["vdlx-datagrid/attributes.js","vdlx-datagrid/transform.js","vdlx-datagrid/data-loader.js","vdlx-datagrid/datagrid.js","vdlx-datagrid/view-model.js","vdlx-datagrid/index.js","vdlx-datagrid-column/index.js","index.js"],"names":["name","description","acceptsExpression","required","expressionVars","type","element","attributes","api","paramsBuilder","getComponentParamsBuilder","$element","$","scenarioId","expression","isString","parsedNum","parseInt","rawValue","isNaN","addParam","Error","value","pageSize","pageSizeNum","pageMode","columnFilter","addRemoveRow","tableId","attr","width","modifier","klass","removeAttr","rowFilter","addFunctionOrExpressionParam","gridData","gridHeight","$tableDiv","addClass","append","console","log","onSubscribe","_","curry","f","observable","subscribe","subscription","apply","arguments","onSubscriptionDispose","dispose","findScenario","scenarios","identifier","result","some","currentScenario","getId","getSelectionIndex","getLabelsEntity","entityName","modelSchema","insight","getView","getProject","getModelSchema","getEntity","getAutoTableEntities","columnOptions","entities","map","column","reduce","memo","current","push","concat","getIndexSets","filter","editorOptionsSet","uniq","identity","updateAutoTable","config","defaultScenario","scenario","currentColumn","undefined","scenarioIdOrIndex","assign","autoTableOptions","extend","withData","config$","hasSubscription","scenarios$","ko","configWithData$","pureComputed","unwrap","isEmpty","scenarioObserverSubscription$","scenarioList","withScenarios","withEntities","notify","start","subscriptions","noop","oldScenarioObserver","getSubscriptionsCount","each","sub","Datagrid","options$","buildTable","options","empty","tableOptions","layout","height","placeholder","groupStartOpen","ajaxLoader","columns","flatten","indicesOptions","setArray","setName","setObject","setPosition","title","set","field","entity","table","Tabulator","setData","then","redraw","catch","err","COLUMN_UPDATE_DELAY","parseIntOrKeep","val","isNullOrUndefined","isNull","isUndefined","stripEmpties","partialRight","pick","flow","negate","params","componentInfo","view","vm","tableWidth","replace","tableOptions$","tableOptionsWithData$","datagrid","datagridConfig","find","idx","clone","indices","forEach","configItem","scenarioNum","isNumber","omit","has","indexList","cleanItem","setPosn","range","length","j","item","sortBy","overrides","paging","pageLength","searching","showFilter","selectionAndNavigation","selectionNavigation","onError","bindKey","self","alwaysShowSelection","saveState","filterObservable","functionObservable","onDependenciesChange","tableUpdate","read","peek","keys","isFunction","modifiedTableOptions","cloneDeep","isPlainObject","isEditable","editable","noFns","isEqual","_appliedTableOptions","throttledBuildTable","throttle","leading","tableValidate","validate","VDL","tag","VXDAttributes","createViewModel","viewModel","transform","window","enums","insightModules","load","vdlIndexFilter","validatorFactory","insightGetter","RenderCallbacks","DataUtils","COLUMN_BUILD_DELAY","AUTOCOLUMN_PROP_NAME","VDGCattributes","docIgnore","expressionReturns","errorTargetSelector","closest","template","modifiesDescendants","indexFilters$","filters$","filterProps","buildColumn","done","columnReady","size","props","heading","toLowerCase","visible","style","sortByFormatted","filterByFormatted","selectNull","editorOptionsIncludeEmpty","checkedValue","editorCheckedValue","uncheckedValue","editorUncheckedValue","editorType","editorOptions","render","format","markAsBuiltinRenderCallback","data","formatCell","Formatter","formatNumber","filters","getValidationFn","validationProperties","getValidationProperties","customValidators","getCustomValidators","createFromValidators","validationObservable","rowData","disposeWhenDependenciesChange","editorValidate","newValue","paramsWatcher","computed","constructedParams","columnUpdate","filterUpdate","filterId","filterProperties","filterRemove","entityAttr","getModelEntityByName","get","test","entityType","getType","DataType","ARRAY","SET","addRawOrExpressionParam","textContent","contents","index","nodeType","Node","TEXT_NODE","trim","toArray","join","getManagementType","EntityManagementType","RESULT","editorTypes","indexOf","optionsSetEntity","optionsSetEntityType","entityTypeIsNumber","getElementType"],"mappings":"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","file":"vdlx-datagrid.map","sourceRoot":"..\\..\\..\\src\\js","sourcesContent":["export default [\r\n    {\r\n        name: 'id',\r\n        description:\r\n            'Specify an element id for the table. Useful if you later want to target the table using a selector. ' +\r\n            'If not given then an id will be generated.'\r\n    },\r\n    {\r\n        name: 'scenario',\r\n        description:\r\n            'The default scenario to use for fetching data in the table. This can be overridden per column but the default ' +\r\n            'will be used when a column does not specify a particular scenario and the index sets will be fetched from the default scenario.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-size',\r\n        description: 'The number of rows to show per-page in paged mode. Defaults to 50.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-mode',\r\n        description: 'By default the table will show all rows. Set this attribute to \"paged\" to enable table pagination.'\r\n    },\r\n    {\r\n        name: 'height',\r\n        description: 'Table height',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'show-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the table filter. This will show a single input above the table to filter across all table cells.'\r\n    },\r\n    {\r\n        name: 'column-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the column filters. This will show a header row with filter inputs for each column.'\r\n    },\r\n    {\r\n        name: 'add-remove-row',\r\n        description:\r\n            'Setting this will show the add-remove row buttons at the bottom of the table. Set to \"true\" ' +\r\n            'to prompt for index selection on row add. Set to \"addrow-autoinc\" will switch the behaviour to allow new ' +\r\n            'index values to be created, incrementing from the highest value in the set(s).'\r\n    },\r\n    {\r\n        name: 'selection-navigation',\r\n        description:\r\n            'Enable/disable table navigation, selection and clipboard features. Set to \"false\" to disable ' +\r\n            'these features. Defaults to true.'\r\n    },\r\n    {\r\n        name: 'modifier',\r\n        description:\r\n            'Table modifier function. Will be called after the table configuration ' +\r\n            'has been built. Provides a way to change the configuration before the table is rendered. Must ' +\r\n            'be an expression that resolves to a function. Takes the table configuration object and ' +\r\n            'should return the modified configuration. If an object is not returned then the table will be unaffected.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'width',\r\n        description:\r\n            'Set the table to a fixed width, in pixels. Accepts an integer value. ' +\r\n            'If set to the string \"custom\" then the table width is calculated by adding up all the widths of the columns in the table. ' +\r\n            \"If a column doesn't have a width specified then it is given a default value of 100px.\",\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'class',\r\n        description: 'Space-separated list of the classes of the element.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'always-show-selection',\r\n        description:\r\n            'Whether to display selection on inactive tables. Set to \"true\" to keep selection on a table when it becomes inactive. Defaults to false.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'row-filter',\r\n        description:\r\n            'Expression to be used for filtering the rows of a <vdl-table>. This must be an expression and ' +\r\n            'should resolve to either a function or a boolean value. If a function it will be executed when table updates. ' +\r\n            'The function will have the following signature (rowData, indices) and should return a boolean.',\r\n        acceptsExpression: true,\r\n        required: false,\r\n        expressionVars: [\r\n            {\r\n                name: 'rowData',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for all row cells'\r\n            },\r\n            {\r\n                name: 'indices',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for the index columns of the row'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'save-state',\r\n        description:\r\n            'Set this to \"false\" to disable table state saving. By default table state is stored in the ' +\r\n            \"user's browser session so that user settings (e.g. page, sorting and search) are preserved if table data \" +\r\n            'is reloaded. Defaults to true.',\r\n        acceptsExpression: false,\r\n        required: false\r\n    },\r\n    {\r\n        name: 'grid-data',\r\n        acceptsExpression: true\r\n    }\r\n    ];","export default function (element, attributes, api) {\r\n    var paramsBuilder = api.getComponentParamsBuilder(element);\r\n    var $element = $(element);\r\n\r\n    var scenarioId = attributes['scenario'];\r\n    if (scenarioId) {\r\n        if (scenarioId.expression.isString) {\r\n            var parsedNum = parseInt(scenarioId.rawValue);\r\n            if (isNaN(parsedNum)) {\r\n                paramsBuilder.addParam('scenarioId', scenarioId.rawValue);\r\n            } else {\r\n                if (parsedNum < 0) {\r\n                    throw Error('If scenario-id is specifying an index it must be a positive integer.');\r\n                }\r\n                paramsBuilder.addParam('scenarioId', parsedNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('scenarioId', scenarioId.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageSize = attributes['page-size'];\r\n    if (pageSize) {\r\n        if (pageSize.expression.isString) {\r\n            var pageSizeNum = parseInt(pageSize.rawValue);\r\n            if (!isNaN(pageSizeNum)) {\r\n                paramsBuilder.addParam('pageSize', pageSizeNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('pageSize', pageSize.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageMode = attributes['page-mode'];\r\n    if (pageMode) {\r\n        paramsBuilder.addParam('pageMode', pageMode.rawValue);\r\n    }\r\n\r\n    // TODO No table search in vdlx-datagrid\r\n    // var showFilter = attributes['show-filter'];\r\n    // if (showFilter) {\r\n    //     paramsBuilder.addParam('showFilter', showFilter.rawValue === 'true');\r\n    // }\r\n\r\n    var columnFilter = attributes['column-filter'];\r\n    if (columnFilter) {\r\n        paramsBuilder.addParam('columnFilter', columnFilter.rawValue === 'true');\r\n    }\r\n\r\n    var addRemoveRow = attributes['add-remove-row'];\r\n    if (addRemoveRow) {\r\n        if (addRemoveRow.rawValue === 'true') {\r\n            paramsBuilder.addParam('addRemoveRow', true);\r\n        } else if (addRemoveRow.rawValue === 'addrow-autoinc') {\r\n            paramsBuilder.addParam('addRemoveRow', 'addrow-autoinc');\r\n        }\r\n    }\r\n\r\n    // TODO row selection?\r\n    // var selectionNavigation = attributes['selection-navigation'];\r\n    // if (selectionNavigation && selectionNavigation.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('selectionNavigation', false);\r\n    // }\r\n\r\n    var tableId = attributes['id'];\r\n    if (tableId) {\r\n        $element.attr('id', null);\r\n        paramsBuilder.addParam('tableId', tableId.rawValue);\r\n    }\r\n\r\n    var width = attributes['width'];\r\n    if (width) {\r\n        paramsBuilder.addParam('width', width.rawValue);\r\n    }\r\n\r\n    // TODO state saving?\r\n    // var saveState = attributes['save-state'];\r\n    // if (saveState && saveState.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('saveState', false);\r\n    // }\r\n\r\n    var modifier = attributes['modifier'];\r\n    if (modifier) {\r\n        if (modifier.expression.isString) {\r\n            throw Error('The vdl-table modifier attribute must be supplied as an expression');\r\n        }\r\n        paramsBuilder.addParam('modifier', modifier.expression.value, true);\r\n    }\r\n\r\n    var klass = attributes['class'];\r\n    if (klass) {\r\n        $element.removeAttr('class');\r\n        paramsBuilder.addParam('class', klass.rawValue);\r\n    }\r\n\r\n    // TODO any way to achieve this? Is it needed?\r\n    // var alwaysShowSelection = attributes['always-show-selection'];\r\n    // if (alwaysShowSelection && (alwaysShowSelection.rawValue.toUpperCase() === 'TRUE')) {\r\n    //     paramsBuilder.addParam('alwaysShowSelection', true);\r\n    // }\r\n\r\n    var rowFilter = attributes['row-filter'];\r\n    if (rowFilter) {\r\n        if (rowFilter.expression.isString) {\r\n            throw Error('The vdl-table \"row-filter\" attribute must be supplied as an expression');\r\n        }\r\n\r\n        paramsBuilder.addFunctionOrExpressionParam('rowFilter', rowFilter.expression.value, ['rowData', 'indices']);\r\n    }\r\n\r\n    // TODO temporary data\r\n    var gridData = attributes['grid-data'];\r\n    if (gridData) {\r\n        paramsBuilder.addParam('gridData', gridData.expression.value, true);\r\n    }\r\n\r\n    var gridHeight = attributes['height'];\r\n    if (gridHeight) {\r\n        if (gridHeight.expression.isString) {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.rawValue, false);\r\n        } else {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.expression.value, true);\r\n        }\r\n    }\r\n\r\n    const $tableDiv = $('<div/>');\r\n    $tableDiv.attr('id', tableId.rawValue);\r\n    $tableDiv.addClass('table-striped table-bordered table-condensed');\r\n    $element.append($tableDiv);\r\n}","console.log('data-loader');\r\n\r\nvar onSubscribe = _.curry(function (f, observable) {\r\n    var subscribe = observable.subscribe;\r\n    observable.subscribe = function () {\r\n        var subscription = subscribe.apply(observable, arguments);\r\n        f(subscription);\r\n        return subscription;\r\n    };\r\n\r\n    return observable;\r\n}, 2);\r\n\r\nfunction onSubscriptionDispose (f, subscription) {\r\n    var dispose = subscription.dispose;\r\n\r\n    subscription.dispose = function () {\r\n        dispose.apply(subscription, arguments);\r\n        f();\r\n    };\r\n\r\n    return subscription;\r\n}\r\n\r\n/**\r\n * Lookup a scenario by index or id.\r\n *\r\n * @param {Array.<Scenario>} scenarios list of available scenarios\r\n * @param {(number|string)} identifier either scenario index or id to look up\r\n * @returns {Scenario} the matching scenario\r\n */\r\nfunction findScenario (scenarios, identifier) {\r\n    var result = null;\r\n\r\n    // Find scenario by ID.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getId() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    if (result) {\r\n        return result;\r\n    }\r\n\r\n    // Find by position.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getSelectionIndex() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getLabelsEntity (entityName) {\r\n    var modelSchema = insight.getView().getProject().getModelSchema();\r\n    return modelSchema.getEntity(entityName).getLabelsEntity();\r\n}\r\n\r\nfunction getAutoTableEntities (columnOptions) {\r\n    var modelSchema = insight.getView().getProject().getModelSchema();\r\n\r\n    var entities = columnOptions\r\n        .map(function (column) {\r\n            return column.name;\r\n        })\r\n        .reduce(function (memo, current) {\r\n            memo.push(current);\r\n            return memo.concat(modelSchema.getEntity(current).getIndexSets());\r\n        }, []);\r\n\r\n    // Also add entities from editor options set.\r\n    entities = columnOptions\r\n        .filter(function (column) {\r\n            return column.editorOptionsSet;\r\n        })\r\n        .map(function (column) {\r\n            return column.editorOptionsSet;\r\n        })\r\n        .reduce(function (memo, current) {\r\n            return memo.concat(current);\r\n        }, entities);\r\n\r\n    entities = _.uniq(entities);\r\n\r\n    return entities.concat(entities.map(getLabelsEntity).filter(_.identity));\r\n}\r\n\r\nfunction updateAutoTable (config, scenarios) {\r\n    scenarios = [].concat(scenarios);\r\n    var defaultScenario;\r\n\r\n    // Bind a scenario per table.\r\n    if (typeof config.scenario !== 'undefined') {\r\n        defaultScenario = findScenario(scenarios, config.scenario);\r\n        if (!defaultScenario) {\r\n            // return config;\r\n            // throw new Error(': Unable to bind AutoTable, scenario ' + config.scenario + ' not found');\r\n            // MODULE_NAME + ': Unable to bind AutoTable, scenario ' + config.scenario + ' not found');\r\n        }\r\n    } else {\r\n        defaultScenario = scenarios[0];\r\n    }\r\n\r\n    // Bind a scenario per column - single table.\r\n    config.columnOptions = _.map(config.columnOptions, function (currentColumn) {\r\n        if (currentColumn.scenario === undefined) {\r\n            return currentColumn;\r\n        }\r\n\r\n        var scenarioIdOrIndex;\r\n        if (typeof currentColumn.scenario === 'object') {\r\n            scenarioIdOrIndex = currentColumn.scenario.getId();\r\n        } else {\r\n            // The user initially passes the scenario ID or index; we then overwrite it with the scenario.\r\n            scenarioIdOrIndex = currentColumn.scenario;\r\n        }\r\n\r\n        var scenario = findScenario(scenarios, scenarioIdOrIndex);\r\n\r\n        if (!scenario) {\r\n            return currentColumn;\r\n            // throw new Error(': Unable to bind AutoTable, scenario ' + scenarioIdOrIndex + ' not found');\r\n        }\r\n\r\n        return _.assign(currentColumn, { scenario: scenario });\r\n    });\r\n\r\n    var autoTableOptions = _.extend({}, config, { scenario: defaultScenario });\r\n\r\n    return autoTableOptions;\r\n}\r\n\r\nfunction withData (config$) {\r\n\r\n    let hasSubscription = false;\r\n    const scenarios$ = ko.observable([]);\r\n\r\n    const configWithData$ = ko.pureComputed(function () {\r\n        const scenarios = ko.unwrap(scenarios$);\r\n        const config = ko.unwrap(config$);\r\n        if (!_.isEmpty(config) && !_.isEmpty(scenarios)) {\r\n            return updateAutoTable(ko.unwrap(config$), ko.unwrap(scenarios$));\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    const scenarioObserverSubscription$ = ko.pureComputed(function () {\r\n        let config = ko.unwrap(config$);\r\n        if (!_.isEmpty(config.scenarioList) && !_.isEmpty(config.columnOptions)) {\r\n            return insight.getView()\r\n                .withScenarios(config.scenarioList)\r\n                .withEntities(getAutoTableEntities(config.columnOptions))\r\n                .notify(function (scenarios) {\r\n                    scenarios$(scenarios);\r\n                })\r\n                .start();\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    return onSubscribe(function (subscription) {\r\n        let subscriptions = [];\r\n\r\n        if (!hasSubscription) {\r\n            subscriptions = [scenarioObserverSubscription$.subscribe(_.noop),\r\n            scenarioObserverSubscription$.subscribe(function (oldScenarioObserver) {\r\n                oldScenarioObserver && oldScenarioObserver.dispose();\r\n            }, null, 'beforeChange')];\r\n            hasSubscription = true;\r\n        }\r\n\r\n        onSubscriptionDispose(function () {\r\n            hasSubscription = !!configWithData$.getSubscriptionsCount();\r\n            if (!hasSubscription) {\r\n                _.each(subscriptions, function (sub) { sub.dispose(); });\r\n            }\r\n        }, subscription);\r\n\r\n    }, configWithData$);\r\n};\r\n\r\nexport default withData;\r\n","class Datagrid {\r\n\r\n    constructor(options$) {\r\n        options$.subscribe(this.buildTable);\r\n    }\r\n\r\n    buildTable(options) {\r\n        $('#' + options.tableId).empty();\r\n\r\n        const tableOptions = {\r\n            layout: 'fitColumns',\r\n            height: options.gridHeight || '600px',\r\n            placeholder: 'Waiting for data',\r\n            groupStartOpen: false,\r\n            ajaxLoader: true\r\n        };\r\n\r\n        tableOptions.columns = _.flatten(\r\n            _.map(options.indicesOptions, (setArray, setName) => {\r\n                return _.map(setArray, (setObject, setPosition) => {\r\n                    return _.assign(setObject, { title: setObject.set, field: setObject.set, setPosition: setPosition });\r\n                });\r\n            })\r\n        );\r\n\r\n        tableOptions.columns = tableOptions.columns.concat(\r\n            _.map(options.columnOptions, entity => _.assign(entity, { title: entity.name, field: entity.name }))\r\n        );\r\n\r\n        const table = new Tabulator('#' + options.tableId, tableOptions);\r\n        debugger;\r\n        table\r\n            .setData(options.gridData)\r\n            .then(function () {\r\n                table.redraw();\r\n            })\r\n            .catch(function (err) {\r\n                debugger;\r\n            });\r\n\r\n    }\r\n};\r\n\r\nexport default Datagrid;\r\n","import withData from './data-loader';\r\nimport Datagrid from './datagrid';\r\n\r\nconst COLUMN_UPDATE_DELAY = 100;\r\n\r\nfunction parseIntOrKeep (val) {\r\n    var result = _.parseInt(val);\r\n    if (_.isNaN(result)) {\r\n        return val;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isNullOrUndefined (val) {\r\n    return _.isNull(val) || _.isUndefined(val);\r\n}\r\n\r\nconst stripEmpties = _.partialRight(_.pick, _.flow(_.identity, _.negate(isNullOrUndefined)));\r\n\r\nexport default function (params, componentInfo) {\r\n    const view = insight.getView();\r\n\r\n    var vm = {};\r\n\r\n    if (params.width) {\r\n        vm.tableWidth = params.width.replace('px', '');\r\n    }\r\n\r\n    const element = componentInfo.element;\r\n\r\n    const defaultScenario = params.scenarioId || 0;\r\n\r\n    const tableOptions$ = ko.observable({});\r\n\r\n    const tableOptionsWithData$ = withData(tableOptions$);\r\n\r\n    var datagrid = new Datagrid(tableOptionsWithData$);\r\n\r\n    function buildTable () {\r\n        const datagridConfig = $(element)\r\n            .find('vdlx-datagrid-column')\r\n            .map(function (idx, element) {\r\n                return _.clone(element['autotableConfig']);\r\n            });\r\n\r\n        var entities = [];\r\n        var indices = {};\r\n\r\n        _.forEach(datagridConfig, function (configItem) {\r\n            var scenarioNum = parseIntOrKeep(configItem.scenario || defaultScenario);\r\n            if (_.isNumber(scenarioNum)) {\r\n                if (scenarioNum < 0) {\r\n                    // reject('Scenario index must be a positive integer.');\r\n                }\r\n            }\r\n            configItem.scenario = scenarioNum;\r\n            if (!!configItem.entity) {\r\n                configItem.name = configItem.entity;\r\n                delete configItem.entity;\r\n                entities.push(_.omit(configItem, isNullOrUndefined));\r\n            } else if (!!configItem.set) {\r\n                if (!_.has(indices, [configItem.set])) {\r\n                    indices[configItem.set] = [];\r\n                }\r\n                const indexList = indices[configItem.set];\r\n                const cleanItem = _.omit(configItem, isNullOrUndefined);\r\n                const setPosn = configItem.setPosition;\r\n                if (setPosn == null) {\r\n                    indexList.push(cleanItem);\r\n                } else if (indexList[setPosn]) {\r\n                    // reject('Table column for set \"' + configItem.set + '\" at position ' + setPosn\r\n                    //     + ' specified more than once');\r\n                } else {\r\n                    indexList[setPosn] = cleanItem;\r\n                    // if we have increased the length, then need to\r\n                    // explicitly inserts null/undefined here, or some\r\n                    // standard algorithms behave oddly. (E.g. _.map\r\n                    // will count the missing items, but [].map won't)\r\n                    _.range(indexList.length).forEach(function (j) {\r\n                        if (!indexList[j]) {\r\n                            indexList[j] = null;\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // reject('Unknown column type');\r\n            }\r\n        });\r\n\r\n        var scenarioList = _(entities).filter(function (item) {\r\n            return !isNullOrUndefined(item);\r\n        }).map(function (item) {\r\n            return ko.unwrap(item.scenario);\r\n        }).uniq().sortBy().value();\r\n\r\n        var overrides = stripEmpties({\r\n            paging: params.pageMode,\r\n            pageLength: params.pageSize,\r\n            searching: params.showFilter,\r\n            columnFilter: params.columnFilter\r\n        });\r\n\r\n        var tableOptions = {\r\n            tableId: params.tableId,\r\n            columnOptions: entities,\r\n            addRemoveRow: params.addRemoveRow,\r\n            selectionAndNavigation: params.selectionNavigation,\r\n            overrides: overrides,\r\n            scenarioList: scenarioList,\r\n            onError: _.bindKey(self, '_wrapAlert'),\r\n            alwaysShowSelection: params.alwaysShowSelection,\r\n            gridHeight: params.gridHeight,\r\n            gridData: params.gridData\r\n        };\r\n\r\n        if (params.saveState === false) {\r\n            tableOptions.saveState = params.saveState;\r\n        }\r\n\r\n        if (params.rowFilter) {\r\n            var filterObservable = ko.observable().extend({\r\n                functionObservable: {\r\n                    onDependenciesChange: function () {\r\n                        self.tableUpdate();\r\n                    },\r\n                    read: params.rowFilter\r\n                }\r\n            });\r\n\r\n            tableOptions.rowFilter = function () {\r\n                filterObservable.apply(null, arguments);\r\n                return filterObservable.peek();\r\n            };\r\n        }\r\n\r\n        if (_.keys(indices).length) {\r\n            tableOptions.indicesOptions = indices;\r\n        }\r\n\r\n        tableOptions = stripEmpties(tableOptions);\r\n\r\n        if (!_.isUndefined(params.modifier)) {\r\n            if (_.isFunction(params.modifier)) {\r\n                // Pass cloned options so they cannot modify the original table options object\r\n                var modifiedTableOptions = params.modifier(_.cloneDeep(tableOptions));\r\n                if (_.isPlainObject(modifiedTableOptions)) {\r\n                    tableOptions = modifiedTableOptions;\r\n                }\r\n            } else {\r\n                // console.error('vdl-table (' + self.tableId + '): \"modifier\" attribute must be a function.');\r\n            }\r\n        }\r\n\r\n        if (tableOptions.addRemoveRow) {\r\n            var isEditable = tableOptions.columnOptions.some(function (column) {\r\n                return !!column.editable;\r\n            });\r\n\r\n            if (!isEditable) {\r\n                tableOptions.addRemoveRow = false;\r\n                // not a hard error as this is used as a feature when making a table read only based on permissions\r\n                // console.log('vdl-table (' + self.tableId + \"): add/remove rows disabled. Table needs to have at least one editable column to use this feature.\");\r\n            }\r\n        }\r\n\r\n        if (_.isEmpty(scenarioList) || _.isEmpty(tableOptions.columnOptions)) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Scenario list or table column configuration is empty, ignoring update');\r\n\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n\r\n            // empty table element, to get rid of old configuration\r\n            // $table && $table.empty();\r\n            return;\r\n        }\r\n\r\n        // functions should not be used in the equality comparison\r\n        const noFns = _.partialRight(_.omit, _.isFunction);\r\n        if (_.isEqual(noFns(this._appliedTableOptions), noFns(tableOptions))) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Table configuration unchanged, ignoring update');\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n            return;\r\n        }\r\n\r\n        tableOptions$(tableOptions);\r\n\r\n    }\r\n\r\n    const throttledBuildTable = _.throttle(buildTable, COLUMN_UPDATE_DELAY, { leading: false });\r\n\r\n    vm.tableUpdate = function () {\r\n        throttledBuildTable();\r\n    };\r\n\r\n    vm.tableValidate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.validate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.dispose = function () { };\r\n\r\n    buildTable();\r\n\r\n    return vm;\r\n}","\r\nimport VXDAttributes from './attributes';\r\nimport transform from './transform';\r\nimport viewModel from './view-model';\r\n\r\nVDL('vdlx-datagrid', {\r\n    tag: 'vdlx-datagrid',\r\n    attributes: VXDAttributes,\r\n    createViewModel: viewModel,\r\n    transform: transform\r\n});\r\n","(function (window) {\r\n    /*\r\n        vdlx-datagrid-column\r\n    \r\n        To be used as the direct child of <vdlx-datagrid>. <vdlx-datagrid-column may be used multiple times within its parent.\r\n        One of these tags directly generates a column in the resulting Datagrid.\r\n    \r\n        This tag creates config to tell its parent how to populate the datagrid column.\r\n     */\r\n\r\n    var enums = insightModules.load('enums');\r\n    var vdlIndexFilter = insightModules.load('vdl/extensions/vdl-index-filter');\r\n    var validatorFactory = insightModules.load('vdl/vdl-validator-factory');\r\n    var insightGetter = insightModules.load('insight-getter');\r\n    var RenderCallbacks = insightModules.load('components/table/render-callbacks');\r\n    var DataUtils = insightModules.load('utils/data-utils');\r\n\r\n    var COLUMN_BUILD_DELAY = 50;\r\n    var AUTOCOLUMN_PROP_NAME = 'autotableConfig';\r\n\r\n    /*\r\n        vdlx-datagrid-column attributes\r\n    \r\n        TODO do we need to add extra properties for the datagrid?\r\n     */\r\n    var VDGCattributes = [\r\n        {\r\n            name: 'entity',\r\n            description: 'Name of the array entity to show in this column. Throws an error if the entity doesn\\'t exist or is not an array or set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set',\r\n            description: 'Name of the set entity to show in this column. Throws an error if the entity doesn\\'t exist or is not a set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set-position',\r\n            description: 'Index (zero-based) of occurrence of that index set in the index tuple for the array.' +\r\n                'Defaults to next available position.'\r\n        },\r\n        {\r\n            name: 'scenario',\r\n            description: 'The scenario id/index for this column. Not allowed on index column (when specifying a set entity)',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'editable',\r\n            description: 'Whether the cells within this column are editable.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'vdl-visible',\r\n            acceptsExpression: true,\r\n            docIgnore: true\r\n        },\r\n        {\r\n            name: 'heading',\r\n            description: 'A custom header for this column, will default to be the entity alias. ' +\r\n                'Alternatively, you can set the title as the text contents of the <vdlx-datagrid-column> element.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'width',\r\n            description: 'The width, in pixels, to set the column.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'class',\r\n            description: 'CSS classes to add to the table column cells. You can provide multiple classes separated by spaces.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'sort-by-formatted',\r\n            description: 'Use formatted values for sorting.'\r\n        },\r\n        {\r\n            name: 'filter-by-formatted',\r\n            description: 'Use formatted values for filtering. This defaults to false unless the entity has a label in which case the default is true.'\r\n        },\r\n        {\r\n            name: 'editor-type',\r\n            description: 'The editor type to use, in edit mode, for cells in this column. If not specified then it ' +\r\n                'will be autodetected based on entity type. Possible values: checkbox, select, text'\r\n        },\r\n        {\r\n            name: 'editor-checked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is checked.'\r\n        },\r\n        {\r\n            name: 'editor-unchecked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is not checked.'\r\n        },\r\n        {\r\n            name: 'editor-options-set',\r\n            description: 'Name of a set entity to use for select options. This will display labels if a labels entity ' +\r\n                'is defined against this set. This will automatically set the editor-type to be \"select\".'\r\n        },\r\n        {\r\n            name: 'editor-options',\r\n            description: 'An expression that results in one of the follow to be used as the select options: an array ' +\r\n                'of values, an object of property to value or an array of objects containing key and value properties. ' +\r\n                'This will automatically set the editor-type to be \"select\".',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'value',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'rowData',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ],\r\n            expressionReturns: {\r\n                type: 'Array.<*>|Object.<string, string>|Array.<{key: string, value: *}>',\r\n                description: 'An array of values, an object of property to value or an array of objects containing key and value properties'\r\n            }\r\n        },\r\n        {\r\n            name: 'editor-options-include-empty',\r\n            description: 'Allow array elements to be removed using the select input. Setting this to true will add ' +\r\n                'a blank item to the top of the select list. Defaults to false.'\r\n        },\r\n        {\r\n            name: 'render',\r\n            description: 'Reference to a custom cell renderer. Overrides any default entity rendering. This will be used to generate the cell value ' +\r\n                'for rendering, filtering and sorting. It must be an expression and resolves as a function, this function should return a string.',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'data',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell being rendered. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'type',\r\n                    type: 'string',\r\n                    description: 'The type call data requested - this will be \"filter\", \"display\", \"type\" or \"sort\"'\r\n                },\r\n                {\r\n                    name: 'row',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'format',\r\n            description: 'Specify a number formatting string. Only applicable to array elements of type integer, real, ' +\r\n                'decision variable and constraint. The formatting syntax is explained in the Xpress Insight Developer Guide.'\r\n        }\r\n    ];\r\n\r\n    VDL('vdlx-datagrid-column', {\r\n        tag: 'vdlx-datagrid-column',\r\n        attributes: VDGCattributes,\r\n        // Apply errors to the parent vdlx-datagrid element\r\n        errorTargetSelector: function (element) {\r\n            // error is displayed on autotable, or if there isn't one, the parent\r\n            // will have to do as as default\r\n            return $(element).closest('vdlx-datagrid')[0] || element;\r\n        },\r\n\r\n        template: '<vdl-contents></vdl-contents>',\r\n\r\n        modifiesDescendants: false,\r\n\r\n        createViewModel: function (params, componentInfo) {\r\n\r\n            var indexFilters$ = ko.observable({});\r\n            var filters$ = ko.pureComputed(function () {\r\n                return _.reduce(indexFilters$(), function (memo, filterProps) {\r\n                    return _.set(memo, [filterProps.setName, filterProps.setPosition], filterProps.value);\r\n                }, {});\r\n            });\r\n\r\n            var buildColumn = _.throttle(function (done) {\r\n                console.log('vdlx-datagrid update column');\r\n                var columnReady = $(componentInfo.element).find('vdl-index-filter').length === _.size(indexFilters$());\r\n\r\n                var props = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ('' + ko.unwrap(params.editable)).toLowerCase() === 'true',\r\n                    visible: !(('' + ko.unwrap(params.visible)).toLowerCase() === 'false'),\r\n                    style: params.style,\r\n                    sortByFormatted: params.sortByFormatted,\r\n                    filterByFormatted: params.filterByFormatted,\r\n                    editorOptionsSet: params.editorOptionsSet,\r\n                    selectNull: params.editorOptionsIncludeEmpty,\r\n                    checkedValue: params.editorCheckedValue,\r\n                    uncheckedValue: params.editorUncheckedValue,\r\n                    editorType: params.editorType\r\n                };\r\n\r\n                if (params.editorOptions) {\r\n                    props.editorOptions = function () {\r\n                        // Return an empty list of options if value is undefined\r\n                        return params.editorOptions.apply(null, arguments) || [];\r\n                    };\r\n                }\r\n\r\n                if (_.isFunction(params.render)) {\r\n                    props.render = params.render;\r\n                }\r\n\r\n                if (params.format) {\r\n                    props.render = RenderCallbacks.markAsBuiltinRenderCallback(function (data, type) {\r\n                        var formatCell = type === 'display'\r\n                            || (type === 'filter' && params.filterByFormatted)\r\n                            || (type === 'sort' && params.sortByFormatted);\r\n\r\n                        return formatCell ? insightGetter().Formatter.formatNumber(data, params.format) : data;\r\n                    });\r\n\r\n                    props.format = params.format;\r\n                } else {\r\n                    props.format = null;\r\n                }\r\n\r\n                if (!!params.entity) {\r\n                    props.entity = params.entity;\r\n                } else if (!!params.set) {\r\n                    props.set = params.set;\r\n                }\r\n\r\n                if (params.setPosition != null) {\r\n                    props.setPosition = params.setPosition;\r\n                }\r\n\r\n                if (_.size(filters$())) {\r\n                    props.filters = filters$();\r\n                }\r\n\r\n                if (props.entity) {\r\n                    var getValidationFn = function (indices) {\r\n                        var validationProperties = validatorFactory.getValidationProperties({\r\n                            entity: props.entity,\r\n                            indices: indices\r\n                        });\r\n\r\n                        var customValidators = validatorFactory\r\n                            .getCustomValidators(validationProperties, componentInfo.element);\r\n\r\n                        return validatorFactory.createFromValidators(customValidators);\r\n                    };\r\n\r\n                    var validationObservable = ko.observable().extend({\r\n                        functionObservable: {\r\n                            onDependenciesChange: function () {\r\n                                params.tableValidate();\r\n\r\n                            },\r\n                            read: function (indices, value, rowData) {\r\n                                return getValidationFn(indices)(value, rowData);\r\n                            },\r\n                            disposeWhenDependenciesChange: false\r\n                        }\r\n                    });\r\n\r\n                    props.editorValidate = function (newValue, rowData, keys) {\r\n                        validationObservable(keys, newValue, rowData);\r\n                        return validationObservable.peek();\r\n                    };\r\n                }\r\n\r\n                if (columnReady) {\r\n                    componentInfo.element[AUTOCOLUMN_PROP_NAME] = props;\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                }\r\n\r\n                if (_.isFunction(done)) {\r\n                    done();\r\n                }\r\n\r\n            }, COLUMN_BUILD_DELAY, { leading: false });\r\n\r\n            var paramsWatcher = ko.computed(function () {\r\n                var constructedParams = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ko.unwrap(params.editable),\r\n                    visible: ko.unwrap(params.visible),\r\n                };\r\n\r\n                buildColumn();\r\n\r\n                return constructedParams;\r\n            });\r\n\r\n            return {\r\n                columnUpdate: buildColumn,\r\n                validate: buildColumn,\r\n                dispose: function () {\r\n                    paramsWatcher.dispose();\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                },\r\n                filterUpdate: function (filterId, filterProperties) {\r\n                    indexFilters$(_.set(indexFilters$(), filterId, filterProperties));\r\n                    buildColumn();\r\n                },\r\n                filterRemove: function (filterId) {\r\n                    indexFilters$(_.omit(indexFilters$(), filterId));\r\n                    buildColumn();\r\n                }\r\n            };\r\n        },\r\n\r\n        transform: function (element, attributes, api) {\r\n\r\n            var $element = $(element);\r\n\r\n            if (!$element.closest('vdlx-datagrid').length) {\r\n                throw Error('<vdlx-datagrid-column> must be contained within a <vdlx-datagrid> tag.');\r\n            }\r\n\r\n            if (!attributes.entity && !attributes.set) {\r\n                throw Error('Must specify either an \"entity\" or \"set\" attribute for <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes.entity && attributes.set) {\r\n                throw Error('You cannot specify both \"entity\" and \"set\" on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes['set-position'] && !attributes.set) {\r\n                throw Error('You cannot specify \"set-position\" without also specifying \"set\"');\r\n            }\r\n\r\n            if (attributes.set && attributes.scenario) {\r\n                throw Error('The \"scenario\" attribute cannot be used in combination with the \"set\" attribute on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            var entityAttr = !!attributes.entity ? attributes.entity : attributes.set;\r\n\r\n            var entityName = entityAttr.rawValue;\r\n            var entity = api.getModelEntityByName(entityName);\r\n            if (!entity) {\r\n                throw Error('Entity \"' + entityName + '\" does not exist in the model schema.');\r\n            }\r\n\r\n            var setPosition = _.get(attributes, ['set-position', 'rawValue']);\r\n            if (setPosition != null) {\r\n                if (!/^\\d+$/.test(setPosition)) {\r\n                    throw Error('Invalid set-position \"' + setPosition + '\", must be a number at least zero');\r\n                } else {\r\n                    setPosition = +setPosition;\r\n                }\r\n            }\r\n            var entityType = entity.getType();\r\n            if (attributes.entity && entityType !== enums.DataType.ARRAY) {\r\n                throw Error('Entity type ' + entityType + ' cannot be displayed as a column in <vdlx-datagrid>.');\r\n            } else if (attributes.set && entityType !== enums.DataType.SET) {\r\n                throw Error('Entity type ' + entityType + ' cannot be specified as an index set in <vdlx-datagrid>.');\r\n            }\r\n\r\n            var paramsBuilder = api.getComponentParamsBuilder(element)\r\n                .addParam('tableUpdate', '$component.tableUpdate', true)\r\n                .addParam('tableValidate', '$component.tableValidate', true)\r\n                .addParam('validate', '$component.validate', true);\r\n\r\n            if (!!attributes.entity) {\r\n                paramsBuilder.addParam('entity', entityName);\r\n            } else {\r\n                paramsBuilder.addParam('set', entityName);\r\n            }\r\n\r\n            if (setPosition != null) {\r\n                paramsBuilder.addParam('setPosition', setPosition);\r\n            }\r\n\r\n            var heading = attributes['heading'];\r\n            if (heading) {\r\n                paramsBuilder.addRawOrExpressionParam('heading', heading);\r\n            } else {\r\n                var textContent = $(element)\r\n                    .contents()\r\n                    .filter(function (index, element) {\r\n                        return element.nodeType === Node.TEXT_NODE && element.textContent.trim() !== '';\r\n                    })\r\n                    .toArray()\r\n                    .map(function (element) {\r\n                        return element.textContent.trim();\r\n                    })\r\n                    .join(' ');\r\n\r\n                if (textContent) {\r\n                    paramsBuilder.addParam('heading', textContent);\r\n                }\r\n            }\r\n\r\n            var scenario = attributes['scenario'];\r\n            if (scenario) {\r\n                paramsBuilder.addRawOrExpressionParam('scenario', scenario);\r\n            }\r\n\r\n            var editable = attributes['editable'];\r\n            if (attributes['editable']) {\r\n                if (entity.getManagementType() === enums.EntityManagementType.RESULT) {\r\n                    throw Error('Cannot set editable attribute on a <vdlx-datagrid-column> bound to a result entity.');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('editable', editable);\r\n            }\r\n\r\n            var visible = attributes['vdl-visible'];\r\n            if (visible) {\r\n                if (visible.expression.isString || _.isEmpty(visible.expression.value)) {\r\n                    throw Error('vdl-visible has to be an expression');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('visible', visible);\r\n                $element.removeAttr('vdl-visible');\r\n            }\r\n\r\n            var width = attributes['width'];\r\n            if (width) {\r\n                paramsBuilder.addRawOrExpressionParam('width', width);\r\n                // Remove the width attribute from the vdlx-datagrid-column as it has implications on page layout\r\n                $element.removeAttr('width');\r\n            }\r\n\r\n            var style = attributes['class'];\r\n            if (style) {\r\n                paramsBuilder.addRawOrExpressionParam('style', style);\r\n                // Remove the class attribute from the vdlx-datagrid-column as it has implications on styling for the hidden element\r\n                $element.removeAttr('class');\r\n            }\r\n\r\n            var sortByFormatted = attributes['sort-by-formatted'];\r\n            if (sortByFormatted && sortByFormatted.rawValue === 'true') {\r\n                paramsBuilder.addParam('sortByFormatted', true);\r\n            }\r\n\r\n            var filterByFormatted = attributes['filter-by-formatted'];\r\n            if (filterByFormatted) {\r\n                if (filterByFormatted.rawValue === 'true') {\r\n                    paramsBuilder.addParam('filterByFormatted', true);\r\n                } else if (filterByFormatted.rawValue === 'false') {\r\n                    paramsBuilder.addParam('filterByFormatted', false);\r\n                }\r\n            }\r\n\r\n            var editorType = attributes['editor-type'];\r\n            var editorTypes = ['checkbox', 'select', 'text'];\r\n            if (editorType && editorTypes.indexOf(editorType.rawValue) !== -1) {\r\n                if (editorType.rawValue === 'select') {\r\n                    if (!attributes['editor-options-set'] && !attributes['editor-options']) {\r\n                        throw Error('vdlx-datagrid-column with \"editor-type\" of \"select\" needs either the \"editor-options-set\" or the \"editor-options\" attribute to be supplied.');\r\n                    }\r\n                }\r\n                paramsBuilder.addParam('editorType', editorType.rawValue);\r\n            }\r\n\r\n            var editorCheckedValue = attributes['editor-checked-value'];\r\n            if (editorCheckedValue) {\r\n                paramsBuilder.addParam('editorCheckedValue', editorCheckedValue.rawValue);\r\n            }\r\n\r\n            var editorUncheckedValue = attributes['editor-unchecked-value'];\r\n            if (editorUncheckedValue) {\r\n                paramsBuilder.addParam('editorUncheckedValue', editorUncheckedValue.rawValue);\r\n            }\r\n\r\n            var editorOptionsSet = attributes['editor-options-set'];\r\n            if (editorOptionsSet) {\r\n                var optionsSetEntity = api.getModelEntityByName(editorOptionsSet.rawValue);\r\n                if (!optionsSetEntity) {\r\n                    throw Error('vdlx-datagrid-column editor-options-set entity \"' + editorOptionsSet.rawValue + '\" does not exist in the model schema.');\r\n                }\r\n\r\n                var optionsSetEntityType = optionsSetEntity.getType();\r\n                if (optionsSetEntityType !== enums.DataType.SET) {\r\n                    throw Error('Entity \"' + editorOptionsSet.rawValue + '\" cannot be used as editor-options-set, wrong data type.');\r\n                }\r\n                paramsBuilder.addParam('editorOptionsSet', editorOptionsSet.rawValue);\r\n            }\r\n\r\n            var editorOptions = attributes['editor-options'];\r\n            if (editorOptions) {\r\n                if (editorOptions.expression.isString) {\r\n                    throw Error('vdlx-datagrid-column attribute \"editor-options\" must be an expression.');\r\n                }\r\n                paramsBuilder.addFunctionOrExpressionParam(\r\n                    'editorOptions',\r\n                    editorOptions.expression.value,\r\n                    ['value', 'rowData']);\r\n            }\r\n\r\n            if (editorOptionsSet && editorOptions) {\r\n                throw Error('vdlx-datagrid-column cannot have both editor-options-set and editor-options specified.');\r\n            }\r\n\r\n            var editorOptionsIncludeEmpty = attributes['editor-options-include-empty'];\r\n            if (editorOptionsIncludeEmpty) {\r\n                paramsBuilder.addParam('editorOptionsIncludeEmpty', editorOptionsIncludeEmpty.rawValue === 'true');\r\n            }\r\n\r\n            var render = attributes['render'];\r\n            if (render) {\r\n                if (render.expression.isString) {\r\n                    throw Error('Render parameter has to be an expression');\r\n                }\r\n                paramsBuilder.addParam('render', render.expression.value, true);\r\n            }\r\n\r\n            var format = attributes['format'];\r\n            if (format) {\r\n                if (!DataUtils.entityTypeIsNumber(entity)) {\r\n                    throw Error('Entity ' + entityName + ' with element type ' + entity.getElementType() + ' cannot be formatted');\r\n                }\r\n\r\n                paramsBuilder.addParam('format', format.rawValue);\r\n            }\r\n        }\r\n    });\r\n})(window);","\r\nimport '../css/vdlx-datagrid.css';\r\nimport './vdlx-datagrid';\r\nimport './vdlx-datagrid-column';\r\n\r\n"]}