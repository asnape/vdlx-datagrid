{"version":3,"sources":["vdlx-datagrid/attributes.js","vdlx-datagrid/transform.js","vdlx-datagrid/data-transform.js","vdlx-datagrid/ko-utils.js","vdlx-datagrid/data-loader.js","vdlx-datagrid/paginator.js","vdlx-datagrid/datagrid.js","vdlx-datagrid/view-model.js","vdlx-datagrid/index.js","vdlx-datagrid-column/index.js","index.js"],"names":["name","description","acceptsExpression","required","expressionVars","type","element","attributes","api","paramsBuilder","getComponentParamsBuilder","$element","$","scenarioId","expression","isString","parsedNum","parseInt","rawValue","isNaN","addParam","Error","value","pageSize","pageSizeNum","pageMode","addClass","columnFilter","addRemoveRow","tableId","attr","width","modifier","klass","removeAttr","rowFilter","addFunctionOrExpressionParam","gridData","gridHeight","$tableDiv","append","$hiddenFooter","$footerToolBar","DataUtils","insightModules","load","createDenseData","getAllColumnIndices","_","curry","schema","columnOptions","map","option","getEntity","getIndexSets","getDisplayIndices","columnIndices","setCount","numColumns","length","indices","i","options","setPosns","getIndexPosns","forEach","setName","setPosn","getFilterValue","filters","key","position","keyJson","JSON","stringify","pick","count","keys","k","parse","generateCompositeKey","setValues","setNameAndPosns","arrayIndices","arrayOptions","setIndex","findIndex","filterValue","allColumnIndices","setNamePosnsAndOptions","scenariosData","defaultScenario","indexScenarios","uniq","id","get","scenarios","arrayIds","setIds","arrays","column","getArray","sets","setNameAndPosn","scenario","getSet","flatten","createRow","partial","zipObject","concat","ko","f","observable","pureComputed","unwrap","combineLatest","observables","combineMap","filter","predicate","previousValue","val","startWith","o2","res","anotherSubscription","onSubscribe","subscription","subscribe","anotherValue","onSubscriptionDispose","getSubscriptionsCount","dispose","apply","arguments","withEqualityComparer","obs","equalityComparer","withDeepEquals","isEqual","findScenario","identifier","result","some","currentScenario","getId","getSelectionIndex","getAutoTableEntities","modelSchema","insight","getView","getProject","getModelSchema","entities","entity","identity","getLabelsEntity","getScenarios","config","isUndefined","columnsAndScenarios","currentColumn","columnId","withScenarioData","config$","hasSubscription","scenarios$","scenarioData$","compose","configAndScenarios","undefined","isEmpty","scenarioObserverSubscription$","scenarioList","withScenarios","withEntities","notify","start","subscriptions","noop","oldScenarioObserver","each","sub","Paginator","table","$paginationControl","pageNum","currentPage","$pageInput","$prevBtn","removeClass","maxPage","$nextBtn","$pageNumbersSpan","text","previousPage","updatePageIndicators","nextPage","Math","max","min","$container","$revealBtn","find","$dropdown","$perPageSelector","on","toggleClass","evt","target","isNumber","actual","goToPage","setPageSize","defer","getPage","num","setPage","getPageMax","SelectOptions","createTabulatorFactory","selector","Tabulator","someEmpty","values","notSomeEmpty","negate","Datagrid","root","options$","columnOptions$","componentRoot","buildTable","scenariosData$","v","indicesOptions$","property","entitiesOptions$","allColumnIndices$","setNameAndPosns$","entitiesOptions","setNamePosnsAndOptions$","indicesOptions","allScenarios$","indicesColumns$","allScenarios","title","String","getAbbreviation","field","mutator","data","params","getLabel","entitiesColumns$","entityOptions","assign","columns$","tabulatorFactory$","tabulatorOptions$","layout","placeholder","groupStartOpen","ajaxLoader","columns","tableBuilt","table$","factory","oldTable","destroy","data$","dataTransform","setColumns","setData","then","redraw","catch","err","self","$componentRoot","paginatorControl","appendTo","COLUMN_UPDATE_DELAY","DEFAULT_GRID_PAGE_SIZE","parseIntOrKeep","isNullOrUndefined","isNull","stripEmpties","partialRight","flow","getTableOptions","overrides","paging","pageLength","searching","showFilter","tableOptions","selectionAndNavigation","selectionNavigation","onError","bindKey","alwaysShowSelection","pagination","paginationSize","paginationElement","height","isFunction","modifiedTableOptions","cloneDeep","isPlainObject","isEditable","editable","componentInfo","vm","tableWidth","replace","tableOptions$","columnConfig$","datagrid","datagridConfig","idx","clone","configItem","scenarioNum","push","omit","set","has","indexList","cleanItem","setPosition","range","j","item","sortBy","throttledBuildTable","throttle","leading","tableUpdate","tableValidate","validate","VDL","tag","VXDAttributes","createViewModel","viewModel","transform","window","enums","vdlIndexFilter","validatorFactory","insightGetter","RenderCallbacks","COLUMN_BUILD_DELAY","AUTOCOLUMN_PROP_NAME","VDGCattributes","docIgnore","expressionReturns","errorTargetSelector","closest","template","modifiesDescendants","indexFilters$","filters$","reduce","memo","filterProps","uniqueId","buildColumn","done","console","log","columnReady","size","props","heading","toLowerCase","visible","style","sortByFormatted","filterByFormatted","editorOptionsSet","selectNull","editorOptionsIncludeEmpty","checkedValue","editorCheckedValue","uncheckedValue","editorUncheckedValue","editorType","editorOptions","render","format","markAsBuiltinRenderCallback","formatCell","Formatter","formatNumber","getValidationFn","validationProperties","getValidationProperties","customValidators","getCustomValidators","createFromValidators","validationObservable","extend","functionObservable","onDependenciesChange","read","rowData","disposeWhenDependenciesChange","editorValidate","newValue","peek","paramsWatcher","computed","constructedParams","columnUpdate","filterUpdate","filterId","filterProperties","filterRemove","entityAttr","entityName","getModelEntityByName","test","entityType","getType","DataType","ARRAY","SET","addRawOrExpressionParam","textContent","contents","index","nodeType","Node","TEXT_NODE","trim","toArray","join","getManagementType","EntityManagementType","RESULT","editorTypes","indexOf","optionsSetEntity","optionsSetEntityType","entityTypeIsNumber","getElementType"],"mappings":"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","file":"vdlx-datagrid.map","sourceRoot":"..\\..\\..\\src\\js","sourcesContent":["export default [\r\n    {\r\n        name: 'id',\r\n        description:\r\n        'Specify an element id for the table. Useful if you later want to target the table using a selector. ' +\r\n        'If not given then an id will be generated.'\r\n    },\r\n    {\r\n        name: 'scenario',\r\n        description:\r\n        'The default scenario to use for fetching data in the table. This can be overridden per column but the default ' +\r\n        'will be used when a column does not specify a particular scenario and the index sets will be fetched from the default scenario.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-size',\r\n        description: 'The number of rows to show per-page in paged mode. Defaults to 50.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-mode',\r\n        description: 'By default the table will show all rows. Set this attribute to \"paged\" to enable table pagination.'\r\n    },\r\n    {\r\n        name: 'height',\r\n        description: 'Table height',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'show-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the table filter. This will show a single input above the table to filter across all table cells.'\r\n    },\r\n    {\r\n        name: 'column-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the column filters. This will show a header row with filter inputs for each column.'\r\n    },\r\n    {\r\n        name: 'add-remove-row',\r\n        description:\r\n        'Setting this will show the add-remove row buttons at the bottom of the table. Set to \"true\" ' +\r\n        'to prompt for index selection on row add. Set to \"addrow-autoinc\" will switch the behaviour to allow new ' +\r\n        'index values to be created, incrementing from the highest value in the set(s).'\r\n    },\r\n    {\r\n        name: 'selection-navigation',\r\n        description:\r\n        'Enable/disable table navigation, selection and clipboard features. Set to \"false\" to disable ' +\r\n        'these features. Defaults to true.'\r\n    },\r\n    {\r\n        name: 'modifier',\r\n        description:\r\n        'Table modifier function. Will be called after the table configuration ' +\r\n        'has been built. Provides a way to change the configuration before the table is rendered. Must ' +\r\n        'be an expression that resolves to a function. Takes the table configuration object and ' +\r\n        'should return the modified configuration. If an object is not returned then the table will be unaffected.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'width',\r\n        description:\r\n        'Set the table to a fixed width, in pixels. Accepts an integer value. ' +\r\n        'If set to the string \"custom\" then the table width is calculated by adding up all the widths of the columns in the table. ' +\r\n        \"If a column doesn't have a width specified then it is given a default value of 100px.\",\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'class',\r\n        description: 'Space-separated list of the classes of the element.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'always-show-selection',\r\n        description:\r\n            'Whether to display selection on inactive tables. Set to \"true\" to keep selection on a table when it becomes inactive. Defaults to false.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'row-filter',\r\n        description:\r\n        'Expression to be used for filtering the rows of a <vdl-table>. This must be an expression and ' +\r\n        'should resolve to either a function or a boolean value. If a function it will be executed when table updates. ' +\r\n        'The function will have the following signature (rowData, indices) and should return a boolean.',\r\n        acceptsExpression: true,\r\n        required: false,\r\n        expressionVars: [\r\n            {\r\n                name: 'rowData',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for all row cells'\r\n            },\r\n            {\r\n                name: 'indices',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for the index columns of the row'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'save-state',\r\n        description:\r\n        'Set this to \"false\" to disable table state saving. By default table state is stored in the ' +\r\n        \"user's browser session so that user settings (e.g. page, sorting and search) are preserved if table data \" +\r\n        'is reloaded. Defaults to true.',\r\n        acceptsExpression: false,\r\n        required: false\r\n    },\r\n    {\r\n        name: 'grid-data',\r\n        acceptsExpression: true\r\n    }\r\n];","export default function (element, attributes, api) {\r\n    var paramsBuilder = api.getComponentParamsBuilder(element);\r\n    var $element = $(element);\r\n\r\n    var scenarioId = attributes['scenario'];\r\n    if (scenarioId) {\r\n        if (scenarioId.expression.isString) {\r\n            var parsedNum = parseInt(scenarioId.rawValue);\r\n            if (isNaN(parsedNum)) {\r\n                paramsBuilder.addParam('scenarioId', scenarioId.rawValue);\r\n            } else {\r\n                if (parsedNum < 0) {\r\n                    throw Error('If scenario-id is specifying an index it must be a positive integer.');\r\n                }\r\n                paramsBuilder.addParam('scenarioId', parsedNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('scenarioId', scenarioId.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageSize = attributes['page-size'];\r\n    if (pageSize) {\r\n        if (pageSize.expression.isString) {\r\n            var pageSizeNum = parseInt(pageSize.rawValue);\r\n            if (!isNaN(pageSizeNum)) {\r\n                paramsBuilder.addParam('pageSize', pageSizeNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('pageSize', pageSize.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageMode = attributes['page-mode'];\r\n    if (pageMode && pageMode.rawValue === 'paged') {\r\n        paramsBuilder.addParam('pageMode', pageMode.rawValue);\r\n    } else {\r\n        paramsBuilder.addParam('pageMode', 'scrolling');\r\n        $(element).addClass('scrolling');\r\n    }\r\n\r\n    // TODO No table search in vdlx-datagrid\r\n    // var showFilter = attributes['show-filter'];\r\n    // if (showFilter) {\r\n    //     paramsBuilder.addParam('showFilter', showFilter.rawValue === 'true');\r\n    // }\r\n\r\n    var columnFilter = attributes['column-filter'];\r\n    if (columnFilter) {\r\n        paramsBuilder.addParam('columnFilter', columnFilter.rawValue === 'true');\r\n    }\r\n\r\n    var addRemoveRow = attributes['add-remove-row'];\r\n    if (addRemoveRow) {\r\n        if (addRemoveRow.rawValue === 'true') {\r\n            paramsBuilder.addParam('addRemoveRow', true);\r\n        } else if (addRemoveRow.rawValue === 'addrow-autoinc') {\r\n            paramsBuilder.addParam('addRemoveRow', 'addrow-autoinc');\r\n        }\r\n    }\r\n\r\n    // TODO row selection?\r\n    // var selectionNavigation = attributes['selection-navigation'];\r\n    // if (selectionNavigation && selectionNavigation.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('selectionNavigation', false);\r\n    // }\r\n\r\n    var tableId = attributes['id'];\r\n    if (tableId) {\r\n        $element.attr('id', null);\r\n        paramsBuilder.addParam('tableId', tableId.rawValue);\r\n    }\r\n\r\n    var width = attributes['width'];\r\n    if (width) {\r\n        paramsBuilder.addParam('width', width.rawValue);\r\n    }\r\n\r\n    // TODO state saving?\r\n    // var saveState = attributes['save-state'];\r\n    // if (saveState && saveState.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('saveState', false);\r\n    // }\r\n\r\n    var modifier = attributes['modifier'];\r\n    if (modifier) {\r\n        if (modifier.expression.isString) {\r\n            throw Error('The vdl-table modifier attribute must be supplied as an expression');\r\n        }\r\n        paramsBuilder.addParam('modifier', modifier.expression.value, true);\r\n    }\r\n\r\n    var klass = attributes['class'];\r\n    if (klass) {\r\n        $element.removeAttr('class');\r\n        paramsBuilder.addParam('class', klass.rawValue);\r\n    }\r\n\r\n    // TODO any way to achieve this? Is it needed?\r\n    // var alwaysShowSelection = attributes['always-show-selection'];\r\n    // if (alwaysShowSelection && (alwaysShowSelection.rawValue.toUpperCase() === 'TRUE')) {\r\n    //     paramsBuilder.addParam('alwaysShowSelection', true);\r\n    // }\r\n\r\n    var rowFilter = attributes['row-filter'];\r\n    if (rowFilter) {\r\n        if (rowFilter.expression.isString) {\r\n            throw Error('The vdl-table \"row-filter\" attribute must be supplied as an expression');\r\n        }\r\n\r\n        paramsBuilder.addFunctionOrExpressionParam('rowFilter', rowFilter.expression.value, ['rowData', 'indices']);\r\n    }\r\n\r\n    // TODO temporary data\r\n    var gridData = attributes['grid-data'];\r\n    if (gridData) {\r\n        paramsBuilder.addParam('gridData', gridData.expression.value, true);\r\n    }\r\n\r\n    var gridHeight = attributes['height'];\r\n    if (gridHeight) {\r\n        if (gridHeight.expression.isString) {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.rawValue, false);\r\n        } else {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.expression.value, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n    Create the DIV placeholder to attach Tabulator component to. \r\n     */\r\n    const $tableDiv = $('<div/>');\r\n    $tableDiv.attr('id', tableId.rawValue);\r\n    $tableDiv.addClass('table-striped table-bordered table-condensed');\r\n    $element.append($tableDiv);\r\n\r\n    /*\r\n    Create to DIV to hide the built-in pagination\r\n     */\r\n    const $hiddenFooter = $('<div class=\"hidden-footer-toolbar\" style=\"display: none\"/>');\r\n    $element.append($hiddenFooter);\r\n\r\n    /*\r\n    Create the Footer toolbar with FICO pagination control.\r\n     */\r\n    const $footerToolBar = $('<div class=\"footer-toolbar\"/>');\r\n    $element.append($footerToolBar);\r\n}\r\n","const DataUtils = insightModules.load('utils/data-utils');\r\nconst createDenseData = insightModules.load('components/table/create-dense-data');\r\n\r\nexport const getAllColumnIndices = _.curry((schema, columnOptions) => {\r\n    return _.map(columnOptions, function (option) {\r\n        return schema.getEntity(option.name).getIndexSets();\r\n    });\r\n}, 2);\r\n\r\n/**\r\n * @typedef {{name: string, position: number}} SetNameAndPosition \r\n */\r\n\r\n/** @returns {SetNameAndPosition[]} */\r\nexport const getDisplayIndices = (columnIndices, columnOptions) => {\r\n    var setCount = {};\r\n    var numColumns = columnIndices.length;\r\n\r\n    for (var i = 0; i < numColumns; i++) {\r\n        const indices = columnIndices[i], options = columnOptions[i];\r\n        const setPosns = DataUtils.getIndexPosns(indices);\r\n        indices.forEach(function (setName, i) {\r\n            const setPosn = setPosns[i];\r\n            if (DataUtils.getFilterValue(options.filters, setName, setPosn) == null) {\r\n                // i.e. if there is no filter, then this index is to be used\r\n                const key = { name: setName, position: setPosn }, keyJson = JSON.stringify(key);\r\n                setCount[keyJson] = (setCount[keyJson] || 0) + 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    return _(setCount)\r\n        .pick(function (count) {\r\n            return count === numColumns;\r\n        })\r\n        .keys()\r\n        .map(function (k) {\r\n            return JSON.parse(k);\r\n        })\r\n        .value();\r\n}\r\n\r\nconst generateCompositeKey = function (setValues, setNameAndPosns, arrayIndices, arrayOptions) {\r\n    const setPosns = DataUtils.getIndexPosns(arrayIndices);\r\n    return arrayIndices.map(function (setName, i) {\r\n        const setPosn = setPosns[i];\r\n        const setIndex = _.findIndex(setNameAndPosns, { name: setName, position: setPosn });\r\n        const filterValue = DataUtils.getFilterValue(arrayOptions.filters, setName, setPosn);\r\n        if (setIndex !== -1) {\r\n            return setValues[setIndex];\r\n        } else if (filterValue != null) {\r\n            return filterValue;\r\n        } else {\r\n            throw Error('Cannot generate table with incomplete index configuration. Missing indices: ' +\r\n                setName + ' for entity: ' + arrayOptions.name);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (allColumnIndices, columnOptions, setNamePosnsAndOptions, scenariosData) => {\r\n\r\n    var defaultScenario = scenariosData.defaultScenario;\r\n    const indexScenarios = _.uniq(_.map(_.map(columnOptions, 'id'), id =>\r\n        _.get(scenariosData.scenarios, id, defaultScenario)\r\n    ));\r\n\r\n    const arrayIds = _.map(columnOptions, 'id');\r\n    const setIds = _.map(setNamePosnsAndOptions, 'options.id');\r\n\r\n    const arrays = _.map(columnOptions, column =>\r\n        _.get(scenariosData.scenarios, column.id, defaultScenario).getArray(column.name)\r\n    );\r\n\r\n    const sets = _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n        return _(indexScenarios)\r\n            .map(function (scenario) {\r\n                return scenario.getSet(setNameAndPosn.name);\r\n            })\r\n            .flatten()\r\n            .uniq()\r\n            .value();\r\n    });\r\n\r\n    const createRow = _.partial(_.zipObject, setIds.concat(arrayIds));\r\n\r\n    return _.map(createDenseData(sets, arrays, setNamePosnsAndOptions, allColumnIndices, columnOptions, generateCompositeKey), createRow);\r\n};","/** @type {KnockoutStatic} */ ko;\r\n\r\nexport const map = _.curry(function (f, observable) {\r\n    return ko.pureComputed(function () {\r\n        return f(ko.unwrap(observable));\r\n    });\r\n}, 2);\r\n\r\nexport const combineLatest = function (observables) {\r\n    return ko.pureComputed(function () {\r\n        return _.map([].concat(observables), function (observable) {\r\n            return ko.unwrap(observable);\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * @param {Function} f\r\n * @param {...KnockoutObservable} observables\r\n * @returns {KnockoutObservable}\r\n*/\r\nexport const combineMap = _.curry((f, ...observables) => {\r\n    return map(f, combineLatest(...observables));\r\n}, 2);\r\n\r\nexport const filter = _.curry(function (predicate, observable) {\r\n    var previousValue = ko.unwrap(observable);\r\n\r\n    return map(function (val) {\r\n        if (predicate(val)) {\r\n            previousValue = val;\r\n            return val;\r\n        }\r\n        return previousValue;\r\n    }, observable);\r\n}, 2);\r\n\r\nexport const startWith = _.curry((value, o2) => {\r\n    const res = ko.observable(ko.unwrap(value));\r\n\r\n    let anotherSubscription;\r\n    return onSubscribe(subscription => {\r\n        if (!anotherSubscription) {\r\n            anotherSubscription = o2.subscribe(anotherValue => res(anotherValue));\r\n        }\r\n\r\n        onSubscriptionDispose(() => {\r\n            if (!!res.getSubscriptionsCount()) {\r\n                anotherSubscription.dispose();\r\n                anotherSubscription = null;\r\n            }\r\n        }, subscription);\r\n    }, res);\r\n}, 2);\r\n\r\nexport const onSubscribe = _.curry(function (f, observable) {\r\n    var subscribe = observable.subscribe;\r\n    observable.subscribe = function () {\r\n        var subscription = subscribe.apply(observable, arguments);\r\n        f(subscription);\r\n        return subscription;\r\n    };\r\n\r\n    return observable;\r\n}, 2);\r\n\r\nexport function onSubscriptionDispose (f, subscription) {\r\n    var dispose = subscription.dispose;\r\n\r\n    subscription.dispose = function () {\r\n        dispose.apply(subscription, arguments);\r\n        f();\r\n    };\r\n\r\n    return subscription;\r\n}\r\n\r\nexport const withEqualityComparer = _.curry(function (f, obs) {\r\n    obs.equalityComparer = f;\r\n    return obs;\r\n}, 2);\r\n\r\nexport const  withDeepEquals = withEqualityComparer(_.isEqual);","import { onSubscribe, onSubscriptionDispose, combineLatest, filter, map } from \"./ko-utils\";\r\n\r\nfunction findScenario (scenarios, identifier) {\r\n    var result = null;\r\n\r\n    // Find scenario by ID.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getId() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    if (result) {\r\n        return result;\r\n    }\r\n\r\n    // Find by position.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getSelectionIndex() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getAutoTableEntities (columnOptions) {\r\n    var modelSchema = insight.getView().getProject().getModelSchema();\r\n\r\n    let entities = _.map(columnOptions, 'name');\r\n    // and index sets\r\n    entities = entities.concat(\r\n        _.flatten(_.map(entities, entity => modelSchema.getEntity(entity).getIndexSets()))\r\n    );\r\n\r\n    // Also add entities from editor options set.\r\n    entities = entities.concat(\r\n        _.filter(_.map(columnOptions, 'editorOptionsSet'), _.identity)\r\n    );\r\n\r\n    entities = _.uniq(entities);\r\n\r\n    return entities.concat(\r\n        _.filter(_.map(entities, (entity) => modelSchema.getEntity(entity).getLabelsEntity()), _.identity)\r\n    );\r\n}\r\n\r\nfunction getScenarios (config, scenarios) {\r\n    scenarios = [].concat(scenarios);\r\n    const defaultScenario = _.isUndefined(config.scenario) ? scenarios[0] : findScenario(scenarios, config.scenario);\r\n\r\n    // Bind a scenario per column - single table.\r\n    const columnsAndScenarios = _.zipObject(_.filter(_.map(config.columnOptions, currentColumn => [\r\n        currentColumn.id,\r\n        findScenario(scenarios, currentColumn.scenario)\r\n    ]), ([columnId, scenario]) => !!scenario));\r\n\r\n    return { defaultScenario: defaultScenario, scenarios: columnsAndScenarios };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} config$\r\n * @returns {KnockoutObservable<{defaultScenario: Scenario, scenarios: Scenario[]}>}\r\n */\r\nfunction withScenarioData (config$) {\r\n    let hasSubscription = false;\r\n    const scenarios$ = ko.observable([]);\r\n\r\n    const scenarioData$ = _.compose(\r\n        map((configAndScenarios) => {\r\n            if (!configAndScenarios) {\r\n                return undefined;\r\n            }\r\n            const [config, scenarios] = configAndScenarios;\r\n            return getScenarios(config, scenarios);\r\n        }),\r\n        filter(([config, scenarios]) => !_.isEmpty(config) && !_.isEmpty(scenarios)),\r\n        combineLatest\r\n    )([config$, scenarios$]);\r\n\r\n    const scenarioObserverSubscription$ = ko.pureComputed(function () {\r\n        let config = ko.unwrap(config$);\r\n        if (!_.isEmpty(config.scenarioList) && !_.isEmpty(config.columnOptions)) {\r\n            return insight.getView()\r\n                .withScenarios(config.scenarioList)\r\n                .withEntities(getAutoTableEntities(config.columnOptions))\r\n                .notify(function (scenarios) {\r\n                    scenarios$(scenarios);\r\n                })\r\n                .start();\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    return onSubscribe(function (subscription) {\r\n        let subscriptions = [];\r\n\r\n        if (!hasSubscription) {\r\n            subscriptions = [scenarioObserverSubscription$.subscribe(_.noop),\r\n            scenarioObserverSubscription$.subscribe(function (oldScenarioObserver) {\r\n                oldScenarioObserver && oldScenarioObserver.dispose();\r\n            }, null, 'beforeChange')];\r\n            hasSubscription = true;\r\n        }\r\n\r\n        onSubscriptionDispose(function () {\r\n            hasSubscription = !!scenarioData$.getSubscriptionsCount();\r\n            if (!hasSubscription) {\r\n                _.each(subscriptions, sub => sub.dispose());\r\n            }\r\n        }, subscription);\r\n\r\n    }, scenarioData$);\r\n};\r\n\r\nexport default withScenarioData;\r\n","export default class Paginator {\r\n\r\n    constructor(table) {\r\n\r\n        this.table = table;\r\n        if(table) {\r\n            // this.currentPage = table.getPage();\r\n            // this.maxPage = table.getPageMax();\r\n            // this.pageSize = table.getPageSize();\r\n        }\r\n\r\n        this.$paginationControl = $(`<div class=\"datagrid-pagination-control\">\r\n    <div class=\"pull-right\">\r\n        <div class=\"paging_fico\">\r\n            <button class=\"reveal-btn btn\"><span class=\"paginate-control-text\">page 1 of 1 </span><i class=\"fico-arrow-down5\"></i>\r\n            </button>\r\n            <ul class=\"pager jumpto-pager\">\r\n                <li><a class=\"pagination-button-previous disabled\"><i class=\"fico-chevron-left\"></i></a></li>\r\n                <li><a class=\"pagination-button-next\"><i class=\"fico-chevron-right\"></i></a></li>\r\n            </ul>\r\n            <div class=\"jumpto-pagination hide\">\r\n                <div>\r\n                    <div class=\"jumpto-pagination-label\">Jump to page:</div>\r\n                    <input type=\"number\" class=\"jumpto-pagination-input\" value=\"1\"></div>\r\n                <div class=\"results-per-page\">\r\n                    <div class=\"jumpto-pagination-label\">Items per page:</div>\r\n                    <select class=\"results-per-page-selector\">\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\" selected>10</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n<!--                        <option value=\"-1\">All</option>-->\r\n                    </select></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`);\r\n\r\n    }\r\n\r\n    /*\r\n    Tabulator Pagination methods\r\n\r\n    table.setPage(5);\r\n    table.nextPage();\r\n    table.previousPage();\r\n    table.setPageSize(50);\r\n    var pageSize = table.getPageSize();\r\n    table.getPage();\r\n    table.getPageMax();\r\n\r\n     */\r\n\r\n    get currentPage() {\r\n        return this.table.getPage();\r\n    }\r\n\r\n    set currentPage(num) {\r\n        return this.table.setPage(num);\r\n    }\r\n\r\n    get maxPage() {\r\n        return this.table.getPageMax();\r\n    }\r\n\r\n    updatePageIndicators() {\r\n        let pageNum = this.currentPage;\r\n        this.$pageInput.val(pageNum);\r\n        if(pageNum === 1) {\r\n            this.$prevBtn.addClass('disabled');\r\n        } else {\r\n            this.$prevBtn.removeClass('disabled');\r\n        }\r\n        if(pageNum === this.maxPage) {\r\n            this.$nextBtn.addClass('disabled');\r\n        } else {\r\n            this.$nextBtn.removeClass('disabled');\r\n        }\r\n        this.$pageNumbersSpan.text(`Page ${this.currentPage} of ${this.maxPage}`);\r\n    }\r\n\r\n    previousPage() {\r\n        if(this.currentPage > 1) {\r\n            this.table.previousPage();\r\n            this.updatePageIndicators();\r\n        }\r\n    }\r\n\r\n    nextPage() {\r\n        if(this.currentPage < this.maxPage) {\r\n            this.table.nextPage();\r\n            this.updatePageIndicators();\r\n        }\r\n    }\r\n\r\n    goToPage(pageNum) {\r\n        let currentPage = Math.max(1, Math.min(this.maxPage, pageNum));\r\n        this.currentPage = currentPage;\r\n\r\n        return currentPage;\r\n    }\r\n\r\n    appendTo($container) {\r\n        $container.append(this.$paginationControl);\r\n\r\n        this.$revealBtn = this.$paginationControl.find('.paging_fico .reveal-btn');\r\n        this.$dropdown = this.$paginationControl.find('.paging_fico .jumpto-pagination');\r\n        this.$prevBtn = this.$paginationControl.find('.pagination-button-previous');\r\n        this.$nextBtn = this.$paginationControl.find('.pagination-button-next');\r\n        this.$pageInput = this.$paginationControl.find('.paging_fico .jumpto-pagination-input');\r\n        this.$perPageSelector = this.$paginationControl.find('.results-per-page-selector');\r\n        this.$pageNumbersSpan = this.$paginationControl.find('.paginate-control-text');\r\n\r\n        this.$revealBtn.on('mousedown', () => {\r\n            this.$revealBtn.toggleClass('active-pager-btn');\r\n            this.$dropdown.toggleClass('hide');\r\n        });\r\n\r\n        this.$prevBtn.on('mouseup', () => {\r\n            this.previousPage();\r\n        });\r\n\r\n        this.$nextBtn.on('mouseup', () => {\r\n            this.nextPage();\r\n        });\r\n\r\n        this.$pageInput.on('input', evt => {\r\n            let val = _.parseInt(evt.target.value);\r\n            if(_.isNumber(val)) {\r\n                let actual = this.goToPage(val);\r\n                if(actual !== val) {\r\n                    this.updatePageIndicators();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$perPageSelector.on('input', evt => {\r\n            let val = _.parseInt(evt.target.value);\r\n            this.table.setPageSize(val);\r\n            this.updatePageIndicators();\r\n        });\r\n\r\n        _.defer(()=> {\r\n            this.updatePageIndicators();\r\n        });\r\n    }\r\n}","import dataTransform, { getAllColumnIndices, getDisplayIndices } from './data-transform';\r\nimport { map, combineMap, filter, startWith, combineLatest, withDeepEquals } from './ko-utils';\r\nimport withScenarioData from './data-loader';\r\nimport Paginator from \"./paginator\";\r\n\r\nconst SelectOptions = insightModules.load('components/autotable-select-options');\r\n\r\nconst createTabulatorFactory = selector => config => new Tabulator(selector, config);\r\nconst someEmpty = values => _.some(values, _.isEmpty);\r\nconst notSomeEmpty = _.negate(someEmpty);\r\n\r\nclass Datagrid {\r\n  constructor(root, options$, columnOptions$) {\r\n    this.options$ = options$;\r\n    this.columnOptions$ = columnOptions$;\r\n    this.componentRoot = root;\r\n    this.table = undefined;\r\n    this.buildTable();\r\n  }\r\n\r\n  buildTable () {\r\n    const columnOptions$ = this.columnOptions$;\r\n    const options$ = this.options$;\r\n    \r\n    const schema = insight\r\n      .getView()\r\n      .getProject()\r\n      .getModelSchema();\r\n\r\n    const scenariosData$ = _.compose(\r\n      filter(v => v && v.defaultScenario),\r\n      startWith(undefined),\r\n      withScenarioData\r\n    )(columnOptions$);\r\n\r\n    const indicesOptions$ = map(_.property('indicesOptions'), columnOptions$);\r\n    const entitiesOptions$ = map(_.property('columnOptions'), columnOptions$);\r\n    const allColumnIndices$ = map(getAllColumnIndices(schema), entitiesOptions$);\r\n\r\n    const setNameAndPosns$ = combineMap(\r\n      ([columnIndices, entitiesOptions]) => getDisplayIndices(columnIndices, entitiesOptions),\r\n      [allColumnIndices$, entitiesOptions$]\r\n    );\r\n\r\n    const setNamePosnsAndOptions$ = combineMap(\r\n      ([setNameAndPosns, indicesOptions]) =>\r\n        _.map(setNameAndPosns, setNameAndPosn => ({\r\n          ...setNameAndPosn,\r\n          options: _.get(indicesOptions, `${setNameAndPosn.name}.${setNameAndPosn.position}`, {\r\n            id: `${setNameAndPosn.name}_${setNameAndPosn.position}`\r\n          })\r\n        })),\r\n      [setNameAndPosns$, indicesOptions$]\r\n    );\r\n\r\n    const allScenarios$ = map(\r\n      scenariosData =>\r\n        scenariosData && _.uniq([scenariosData.defaultScenario].concat(_.values(scenariosData.scenarios))),\r\n      scenariosData$\r\n    );\r\n\r\n    const indicesColumns$ = _.compose(\r\n      map(values => {\r\n        const [setNamePosnsAndOptions, allScenarios] = values;\r\n        return _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n          const { name, options } = setNameAndPosn;\r\n          const entity = schema.getEntity(name);\r\n\r\n          return {\r\n            title: String(options.title || entity.getAbbreviation() || name),\r\n            field: options.id,\r\n            mutator: (value, data, type, params) => SelectOptions.getLabel(schema, allScenarios, entity, value)\r\n          };\r\n        });\r\n      }),\r\n      withDeepEquals,\r\n      filter(notSomeEmpty),\r\n      startWith([]),\r\n      combineLatest\r\n    )([setNamePosnsAndOptions$, allScenarios$]);\r\n\r\n    const entitiesColumns$ = map(\r\n      entitiesOptions => _.map(entitiesOptions, entityOptions => {\r\n        const entity = schema.getEntity(entityOptions.name);\r\n\r\n        return _.assign(entityOptions, {\r\n          title: String(entityOptions.title || entity.getAbbreviation() || entityOptions.name),\r\n          field: entityOptions.id\r\n        });\r\n\r\n      }),\r\n      entitiesOptions$\r\n    );\r\n\r\n    const columns$ = _.compose(\r\n      map(_.flatten),\r\n      filter(notSomeEmpty),\r\n      startWith([]),\r\n      combineLatest\r\n    )([indicesColumns$, entitiesColumns$]);\r\n\r\n    const tabulatorFactory$ = map(\r\n      options => (options.tableId ? createTabulatorFactory(`#${options.tableId}`) : _.noop),\r\n      options$\r\n    );\r\n\r\n    const tabulatorOptions$ = map(\r\n      options => ({\r\n        layout: 'fitColumns',\r\n        placeholder: 'Waiting for data',\r\n        groupStartOpen: false,\r\n        ajaxLoader: true,\r\n        columns: [],\r\n        tableBuilt: _.partial(this.tableBuilt, this)\r\n      }),\r\n      options$\r\n    );\r\n\r\n    const table$ = combineMap(([factory, options]) => factory(options), [tabulatorFactory$, tabulatorOptions$]);\r\n\r\n    table$.subscribe(oldTable => oldTable && oldTable.destroy(), null, 'beforeChange');\r\n\r\n    const data$ = _.compose(\r\n      map(params => params && dataTransform(...params)),\r\n      filter(notSomeEmpty),\r\n      startWith(undefined),\r\n      combineLatest\r\n    )([allColumnIndices$, entitiesColumns$, setNamePosnsAndOptions$, scenariosData$]);\r\n\r\n    _.compose(\r\n      map(values => {\r\n        if (!values) {\r\n          return false;\r\n        }\r\n        const [table, columns, data] = values;\r\n        table.setColumns(columns);\r\n\r\n        return table\r\n          .setData(data)\r\n          .then(function () {\r\n            table.redraw();\r\n          })\r\n          .catch(function (err) {\r\n            debugger;\r\n          });\r\n      }),\r\n      filter(notSomeEmpty),\r\n      startWith(undefined),\r\n      combineLatest\r\n    )([table$, columns$, data$]).subscribe(_.noop);\r\n  }\r\n\r\n  tableBuilt (self) {\r\n    let $componentRoot = $(self.componentRoot);\r\n    let $footerToolBar = $componentRoot.find('.footer-toolbar');\r\n    const paginatorControl = new Paginator(this);\r\n    paginatorControl.appendTo($footerToolBar);\r\n  }\r\n}\r\n\r\nexport default Datagrid;\r\n","import Datagrid from './datagrid';\r\nimport Paginator from \"./paginator\";\r\n\r\nconst COLUMN_UPDATE_DELAY = 100;\r\nconst DEFAULT_GRID_PAGE_SIZE = 10;\r\n\r\nfunction parseIntOrKeep (val) {\r\n    var result = _.parseInt(val);\r\n    if (_.isNaN(result)) {\r\n        return val;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isNullOrUndefined (val) {\r\n    return _.isNull(val) || _.isUndefined(val);\r\n}\r\n\r\nconst stripEmpties = _.partialRight(_.pick, _.flow(_.identity, _.negate(isNullOrUndefined)));\r\n\r\nconst getTableOptions = (params) => () => {\r\n    var overrides = stripEmpties({\r\n        paging: params.pageMode,\r\n        pageLength: params.pageSize,\r\n        searching: params.showFilter,\r\n        columnFilter: params.columnFilter\r\n    });\r\n\r\n    var tableOptions = {\r\n        tableId: params.tableId,\r\n        addRemoveRow: params.addRemoveRow,\r\n        selectionAndNavigation: params.selectionNavigation,\r\n        overrides: overrides,\r\n        onError: _.bindKey(self, '_wrapAlert'),\r\n        alwaysShowSelection: params.alwaysShowSelection,\r\n        gridHeight: params.gridHeight,\r\n        gridData: params.gridData\r\n    };\r\n\r\n    var pageMode = params['pageMode'];\r\n\r\n    if (pageMode === 'paged') {\r\n        tableOptions.pagination = 'local';\r\n        tableOptions.paginationSize = params.pageSize || DEFAULT_GRID_PAGE_SIZE;\r\n        tableOptions.paginationElement = $('.hidden-footer-toolbar').get(0); // hide the built-in paginator\r\n    } else if (!pageMode || pageMode === 'none') {\r\n        tableOptions.height = false;\r\n    }\r\n\r\n    if (_.isFunction(params.rowFilter)) {\r\n        tableOptions.rowFilter = params.rowFilter;\r\n    }\r\n\r\n    tableOptions = stripEmpties(tableOptions);\r\n\r\n    if (!_.isUndefined(params.modifier)) {\r\n        if (_.isFunction(params.modifier)) {\r\n            // Pass cloned options so they cannot modify the original table options object\r\n            var modifiedTableOptions = params.modifier(_.cloneDeep(tableOptions));\r\n            if (_.isPlainObject(modifiedTableOptions)) {\r\n                tableOptions = modifiedTableOptions;\r\n            }\r\n        } else {\r\n            // console.error('vdl-table (' + self.tableId + '): \"modifier\" attribute must be a function.');\r\n        }\r\n    }\r\n\r\n    if (tableOptions.addRemoveRow) {\r\n        var isEditable = tableOptions.columnOptions.some(function (column) {\r\n            return !!column.editable;\r\n        });\r\n\r\n        if (!isEditable) {\r\n            tableOptions.addRemoveRow = false;\r\n            // not a hard error as this is used as a feature when making a table read only based on permissions\r\n            // console.log('vdl-table (' + self.tableId + \"): add/remove rows disabled. Table needs to have at least one editable column to use this feature.\");\r\n        }\r\n    }\r\n\r\n    return tableOptions;\r\n}\r\n\r\nexport default function (params, componentInfo) {\r\n    var vm = {};\r\n\r\n    if (params.width) {\r\n        vm.tableWidth = params.width.replace('px', '');\r\n    }\r\n\r\n    const element = componentInfo.element;\r\n\r\n    const defaultScenario = params.scenarioId || 0;\r\n\r\n    const tableOptions$ = ko.pureComputed(getTableOptions(params));\r\n    const columnConfig$ = ko.observable({}); \r\n\r\n    var datagrid = new Datagrid(componentInfo.element, tableOptions$, columnConfig$);\r\n\r\n    function buildTable () {\r\n        const datagridConfig = $(element)\r\n            .find('vdlx-datagrid-column')\r\n            .map(function (idx, element) {\r\n                return _.clone(element['autotableConfig']);\r\n            });\r\n\r\n        var entities = [];\r\n        var indices = {};\r\n\r\n        _.forEach(datagridConfig, function (configItem) {\r\n            var scenarioNum = parseIntOrKeep(configItem.scenario || defaultScenario);\r\n            if (_.isNumber(scenarioNum)) {\r\n                if (scenarioNum < 0) {\r\n                    // reject('Scenario index must be a positive integer.');\r\n                }\r\n            }\r\n            configItem.scenario = scenarioNum;\r\n            if (!!configItem.entity) {\r\n                configItem.name = configItem.entity;\r\n                delete configItem.entity;\r\n                entities.push(_.omit(configItem, isNullOrUndefined));\r\n            } else if (!!configItem.set) {\r\n                if (!_.has(indices, [configItem.set])) {\r\n                    indices[configItem.set] = [];\r\n                }\r\n                const indexList = indices[configItem.set];\r\n                const cleanItem = _.omit(configItem, isNullOrUndefined);\r\n                const setPosn = configItem.setPosition;\r\n                if (setPosn == null) {\r\n                    indexList.push(cleanItem);\r\n                } else if (indexList[setPosn]) {\r\n                    // reject('Table column for set \"' + configItem.set + '\" at position ' + setPosn\r\n                    //     + ' specified more than once');\r\n                } else {\r\n                    indexList[setPosn] = cleanItem;\r\n                    // if we have increased the length, then need to\r\n                    // explicitly inserts null/undefined here, or some\r\n                    // standard algorithms behave oddly. (E.g. _.map\r\n                    // will count the missing items, but [].map won't)\r\n                    _.range(indexList.length).forEach(function (j) {\r\n                        if (!indexList[j]) {\r\n                            indexList[j] = null;\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // reject('Unknown column type');\r\n            }\r\n        });\r\n\r\n        var scenarioList = _(entities).filter(function (item) {\r\n            return !isNullOrUndefined(item);\r\n        }).map(function (item) {\r\n            return ko.unwrap(item.scenario);\r\n        }).uniq().sortBy().value();\r\n\r\n        if (_.isEmpty(scenarioList) || _.isEmpty(entities)) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Scenario list or table column configuration is empty, ignoring update');\r\n\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n\r\n            // empty table element, to get rid of old configuration\r\n            // $table && $table.empty();\r\n            return;\r\n        }\r\n\r\n        columnConfig$({columnOptions: entities, indicesOptions: indices, scenarioList: scenarioList});\r\n    }\r\n\r\n    const throttledBuildTable = _.throttle(buildTable, COLUMN_UPDATE_DELAY, { leading: false });\r\n\r\n    vm.tableUpdate = function () {\r\n        throttledBuildTable();\r\n    };\r\n\r\n    vm.tableValidate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.validate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.dispose = function () { };\r\n\r\n    buildTable();\r\n\r\n    return vm;\r\n}","\r\nimport VXDAttributes from './attributes';\r\nimport transform from './transform';\r\nimport viewModel from './view-model';\r\n\r\nVDL('vdlx-datagrid', {\r\n    tag: 'vdlx-datagrid',\r\n    attributes: VXDAttributes,\r\n    createViewModel: viewModel,\r\n    transform: transform\r\n});\r\n","(function (window) {\r\n    /*\r\n        vdlx-datagrid-column\r\n    \r\n        To be used as the direct child of <vdlx-datagrid>. <vdlx-datagrid-column may be used multiple times within its parent.\r\n        One of these tags directly generates a column in the resulting Datagrid.\r\n    \r\n        This tag creates config to tell its parent how to populate the datagrid column.\r\n     */\r\n\r\n    var enums = insightModules.load('enums');\r\n    var vdlIndexFilter = insightModules.load('vdl/extensions/vdl-index-filter');\r\n    var validatorFactory = insightModules.load('vdl/vdl-validator-factory');\r\n    var insightGetter = insightModules.load('insight-getter');\r\n    var RenderCallbacks = insightModules.load('components/table/render-callbacks');\r\n    var DataUtils = insightModules.load('utils/data-utils');\r\n\r\n    var COLUMN_BUILD_DELAY = 50;\r\n    var AUTOCOLUMN_PROP_NAME = 'autotableConfig';\r\n\r\n    /*\r\n        vdlx-datagrid-column attributes\r\n    \r\n        TODO do we need to add extra properties for the datagrid?\r\n     */\r\n    var VDGCattributes = [\r\n        {\r\n            name: 'entity',\r\n            description: 'Name of the array entity to show in this column. Throws an error if the entity doesn\\'t exist or is not an array or set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set',\r\n            description: 'Name of the set entity to show in this column. Throws an error if the entity doesn\\'t exist or is not a set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set-position',\r\n            description: 'Index (zero-based) of occurrence of that index set in the index tuple for the array.' +\r\n                'Defaults to next available position.'\r\n        },\r\n        {\r\n            name: 'scenario',\r\n            description: 'The scenario id/index for this column. Not allowed on index column (when specifying a set entity)',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'editable',\r\n            description: 'Whether the cells within this column are editable.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'vdl-visible',\r\n            acceptsExpression: true,\r\n            docIgnore: true\r\n        },\r\n        {\r\n            name: 'heading',\r\n            description: 'A custom header for this column, will default to be the entity alias. ' +\r\n                'Alternatively, you can set the title as the text contents of the <vdlx-datagrid-column> element.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'width',\r\n            description: 'The width, in pixels, to set the column.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'class',\r\n            description: 'CSS classes to add to the table column cells. You can provide multiple classes separated by spaces.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'sort-by-formatted',\r\n            description: 'Use formatted values for sorting.'\r\n        },\r\n        {\r\n            name: 'filter-by-formatted',\r\n            description: 'Use formatted values for filtering. This defaults to false unless the entity has a label in which case the default is true.'\r\n        },\r\n        {\r\n            name: 'editor-type',\r\n            description: 'The editor type to use, in edit mode, for cells in this column. If not specified then it ' +\r\n                'will be autodetected based on entity type. Possible values: checkbox, select, text'\r\n        },\r\n        {\r\n            name: 'editor-checked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is checked.'\r\n        },\r\n        {\r\n            name: 'editor-unchecked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is not checked.'\r\n        },\r\n        {\r\n            name: 'editor-options-set',\r\n            description: 'Name of a set entity to use for select options. This will display labels if a labels entity ' +\r\n                'is defined against this set. This will automatically set the editor-type to be \"select\".'\r\n        },\r\n        {\r\n            name: 'editor-options',\r\n            description: 'An expression that results in one of the follow to be used as the select options: an array ' +\r\n                'of values, an object of property to value or an array of objects containing key and value properties. ' +\r\n                'This will automatically set the editor-type to be \"select\".',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'value',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'rowData',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ],\r\n            expressionReturns: {\r\n                type: 'Array.<*>|Object.<string, string>|Array.<{key: string, value: *}>',\r\n                description: 'An array of values, an object of property to value or an array of objects containing key and value properties'\r\n            }\r\n        },\r\n        {\r\n            name: 'editor-options-include-empty',\r\n            description: 'Allow array elements to be removed using the select input. Setting this to true will add ' +\r\n                'a blank item to the top of the select list. Defaults to false.'\r\n        },\r\n        {\r\n            name: 'render',\r\n            description: 'Reference to a custom cell renderer. Overrides any default entity rendering. This will be used to generate the cell value ' +\r\n                'for rendering, filtering and sorting. It must be an expression and resolves as a function, this function should return a string.',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'data',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell being rendered. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'type',\r\n                    type: 'string',\r\n                    description: 'The type call data requested - this will be \"filter\", \"display\", \"type\" or \"sort\"'\r\n                },\r\n                {\r\n                    name: 'row',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'format',\r\n            description: 'Specify a number formatting string. Only applicable to array elements of type integer, real, ' +\r\n                'decision variable and constraint. The formatting syntax is explained in the Xpress Insight Developer Guide.'\r\n        }\r\n    ];\r\n\r\n    VDL('vdlx-datagrid-column', {\r\n        tag: 'vdlx-datagrid-column',\r\n        attributes: VDGCattributes,\r\n        // Apply errors to the parent vdlx-datagrid element\r\n        errorTargetSelector: function (element) {\r\n            // error is displayed on autotable, or if there isn't one, the parent\r\n            // will have to do as as default\r\n            return $(element).closest('vdlx-datagrid')[0] || element;\r\n        },\r\n\r\n        template: '<vdl-contents></vdl-contents>',\r\n\r\n        modifiesDescendants: false,\r\n\r\n        createViewModel: function (params, componentInfo) {\r\n\r\n            var indexFilters$ = ko.observable({});\r\n            var filters$ = ko.pureComputed(function () {\r\n                return _.reduce(indexFilters$(), function (memo, filterProps) {\r\n                    return _.set(memo, [filterProps.setName, filterProps.setPosition], filterProps.value);\r\n                }, {});\r\n            });\r\n\r\n            const columnId = _.uniqueId('datagrid-column');\r\n\r\n            var buildColumn = _.throttle(function (done) {\r\n                console.log('vdlx-datagrid update column');\r\n                var columnReady = $(componentInfo.element).find('vdl-index-filter').length === _.size(indexFilters$());\r\n\r\n                var props = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ('' + ko.unwrap(params.editable)).toLowerCase() === 'true',\r\n                    visible: !(('' + ko.unwrap(params.visible)).toLowerCase() === 'false'),\r\n                    style: params.style,\r\n                    sortByFormatted: params.sortByFormatted,\r\n                    filterByFormatted: params.filterByFormatted,\r\n                    editorOptionsSet: params.editorOptionsSet,\r\n                    selectNull: params.editorOptionsIncludeEmpty,\r\n                    checkedValue: params.editorCheckedValue,\r\n                    uncheckedValue: params.editorUncheckedValue,\r\n                    editorType: params.editorType,\r\n                    id: columnId \r\n                };\r\n\r\n                if (params.editorOptions) {\r\n                    props.editorOptions = function () {\r\n                        // Return an empty list of options if value is undefined\r\n                        return params.editorOptions.apply(null, arguments) || [];\r\n                    };\r\n                }\r\n\r\n                if (_.isFunction(params.render)) {\r\n                    props.render = params.render;\r\n                }\r\n\r\n                if (params.format) {\r\n                    props.render = RenderCallbacks.markAsBuiltinRenderCallback(function (data, type) {\r\n                        var formatCell = type === 'display'\r\n                            || (type === 'filter' && params.filterByFormatted)\r\n                            || (type === 'sort' && params.sortByFormatted);\r\n\r\n                        return formatCell ? insightGetter().Formatter.formatNumber(data, params.format) : data;\r\n                    });\r\n\r\n                    props.format = params.format;\r\n                } else {\r\n                    props.format = null;\r\n                }\r\n\r\n                if (!!params.entity) {\r\n                    props.entity = params.entity;\r\n                } else if (!!params.set) {\r\n                    props.set = params.set;\r\n                }\r\n\r\n                if (params.setPosition != null) {\r\n                    props.setPosition = params.setPosition;\r\n                }\r\n\r\n                if (_.size(filters$())) {\r\n                    props.filters = filters$();\r\n                }\r\n\r\n                if (props.entity) {\r\n                    var getValidationFn = function (indices) {\r\n                        var validationProperties = validatorFactory.getValidationProperties({\r\n                            entity: props.entity,\r\n                            indices: indices\r\n                        });\r\n\r\n                        var customValidators = validatorFactory\r\n                            .getCustomValidators(validationProperties, componentInfo.element);\r\n\r\n                        return validatorFactory.createFromValidators(customValidators);\r\n                    };\r\n\r\n                    var validationObservable = ko.observable().extend({\r\n                        functionObservable: {\r\n                            onDependenciesChange: function () {\r\n                                params.tableValidate();\r\n\r\n                            },\r\n                            read: function (indices, value, rowData) {\r\n                                return getValidationFn(indices)(value, rowData);\r\n                            },\r\n                            disposeWhenDependenciesChange: false\r\n                        }\r\n                    });\r\n\r\n                    props.editorValidate = function (newValue, rowData, keys) {\r\n                        validationObservable(keys, newValue, rowData);\r\n                        return validationObservable.peek();\r\n                    };\r\n                }\r\n\r\n                if (columnReady) {\r\n                    componentInfo.element[AUTOCOLUMN_PROP_NAME] = props;\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                }\r\n\r\n                if (_.isFunction(done)) {\r\n                    done();\r\n                }\r\n\r\n            }, COLUMN_BUILD_DELAY, { leading: false });\r\n\r\n            var paramsWatcher = ko.computed(function () {\r\n                var constructedParams = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ko.unwrap(params.editable),\r\n                    visible: ko.unwrap(params.visible),\r\n                };\r\n\r\n                buildColumn();\r\n\r\n                return constructedParams;\r\n            });\r\n\r\n            return {\r\n                columnUpdate: buildColumn,\r\n                validate: buildColumn,\r\n                dispose: function () {\r\n                    paramsWatcher.dispose();\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                },\r\n                filterUpdate: function (filterId, filterProperties) {\r\n                    indexFilters$(_.set(indexFilters$(), filterId, filterProperties));\r\n                    buildColumn();\r\n                },\r\n                filterRemove: function (filterId) {\r\n                    indexFilters$(_.omit(indexFilters$(), filterId));\r\n                    buildColumn();\r\n                }\r\n            };\r\n        },\r\n\r\n        transform: function (element, attributes, api) {\r\n\r\n            var $element = $(element);\r\n\r\n            if (!$element.closest('vdlx-datagrid').length) {\r\n                throw Error('<vdlx-datagrid-column> must be contained within a <vdlx-datagrid> tag.');\r\n            }\r\n\r\n            if (!attributes.entity && !attributes.set) {\r\n                throw Error('Must specify either an \"entity\" or \"set\" attribute for <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes.entity && attributes.set) {\r\n                throw Error('You cannot specify both \"entity\" and \"set\" on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes['set-position'] && !attributes.set) {\r\n                throw Error('You cannot specify \"set-position\" without also specifying \"set\"');\r\n            }\r\n\r\n            if (attributes.set && attributes.scenario) {\r\n                throw Error('The \"scenario\" attribute cannot be used in combination with the \"set\" attribute on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            var entityAttr = !!attributes.entity ? attributes.entity : attributes.set;\r\n\r\n            var entityName = entityAttr.rawValue;\r\n            var entity = api.getModelEntityByName(entityName);\r\n            if (!entity) {\r\n                throw Error('Entity \"' + entityName + '\" does not exist in the model schema.');\r\n            }\r\n\r\n            var setPosition = _.get(attributes, ['set-position', 'rawValue']);\r\n            if (setPosition != null) {\r\n                if (!/^\\d+$/.test(setPosition)) {\r\n                    throw Error('Invalid set-position \"' + setPosition + '\", must be a number at least zero');\r\n                } else {\r\n                    setPosition = +setPosition;\r\n                }\r\n            }\r\n            var entityType = entity.getType();\r\n            if (attributes.entity && entityType !== enums.DataType.ARRAY) {\r\n                throw Error('Entity type ' + entityType + ' cannot be displayed as a column in <vdlx-datagrid>.');\r\n            } else if (attributes.set && entityType !== enums.DataType.SET) {\r\n                throw Error('Entity type ' + entityType + ' cannot be specified as an index set in <vdlx-datagrid>.');\r\n            }\r\n\r\n            var paramsBuilder = api.getComponentParamsBuilder(element)\r\n                .addParam('tableUpdate', '$component.tableUpdate', true)\r\n                .addParam('tableValidate', '$component.tableValidate', true)\r\n                .addParam('validate', '$component.validate', true);\r\n\r\n            if (!!attributes.entity) {\r\n                paramsBuilder.addParam('entity', entityName);\r\n            } else {\r\n                paramsBuilder.addParam('set', entityName);\r\n            }\r\n\r\n            if (setPosition != null) {\r\n                paramsBuilder.addParam('setPosition', setPosition);\r\n            }\r\n\r\n            var heading = attributes['heading'];\r\n            if (heading) {\r\n                paramsBuilder.addRawOrExpressionParam('heading', heading);\r\n            } else {\r\n                var textContent = $(element)\r\n                    .contents()\r\n                    .filter(function (index, element) {\r\n                        return element.nodeType === Node.TEXT_NODE && element.textContent.trim() !== '';\r\n                    })\r\n                    .toArray()\r\n                    .map(function (element) {\r\n                        return element.textContent.trim();\r\n                    })\r\n                    .join(' ');\r\n\r\n                if (textContent) {\r\n                    paramsBuilder.addParam('heading', textContent);\r\n                }\r\n            }\r\n\r\n            var scenario = attributes['scenario'];\r\n            if (scenario) {\r\n                paramsBuilder.addRawOrExpressionParam('scenario', scenario);\r\n            }\r\n\r\n            var editable = attributes['editable'];\r\n            if (attributes['editable']) {\r\n                if (entity.getManagementType() === enums.EntityManagementType.RESULT) {\r\n                    throw Error('Cannot set editable attribute on a <vdlx-datagrid-column> bound to a result entity.');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('editable', editable);\r\n            }\r\n\r\n            var visible = attributes['vdl-visible'];\r\n            if (visible) {\r\n                if (visible.expression.isString || _.isEmpty(visible.expression.value)) {\r\n                    throw Error('vdl-visible has to be an expression');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('visible', visible);\r\n                $element.removeAttr('vdl-visible');\r\n            }\r\n\r\n            var width = attributes['width'];\r\n            if (width) {\r\n                paramsBuilder.addRawOrExpressionParam('width', width);\r\n                // Remove the width attribute from the vdlx-datagrid-column as it has implications on page layout\r\n                $element.removeAttr('width');\r\n            }\r\n\r\n            var style = attributes['class'];\r\n            if (style) {\r\n                paramsBuilder.addRawOrExpressionParam('style', style);\r\n                // Remove the class attribute from the vdlx-datagrid-column as it has implications on styling for the hidden element\r\n                $element.removeAttr('class');\r\n            }\r\n\r\n            var sortByFormatted = attributes['sort-by-formatted'];\r\n            if (sortByFormatted && sortByFormatted.rawValue === 'true') {\r\n                paramsBuilder.addParam('sortByFormatted', true);\r\n            }\r\n\r\n            var filterByFormatted = attributes['filter-by-formatted'];\r\n            if (filterByFormatted) {\r\n                if (filterByFormatted.rawValue === 'true') {\r\n                    paramsBuilder.addParam('filterByFormatted', true);\r\n                } else if (filterByFormatted.rawValue === 'false') {\r\n                    paramsBuilder.addParam('filterByFormatted', false);\r\n                }\r\n            }\r\n\r\n            var editorType = attributes['editor-type'];\r\n            var editorTypes = ['checkbox', 'select', 'text'];\r\n            if (editorType && editorTypes.indexOf(editorType.rawValue) !== -1) {\r\n                if (editorType.rawValue === 'select') {\r\n                    if (!attributes['editor-options-set'] && !attributes['editor-options']) {\r\n                        throw Error('vdlx-datagrid-column with \"editor-type\" of \"select\" needs either the \"editor-options-set\" or the \"editor-options\" attribute to be supplied.');\r\n                    }\r\n                }\r\n                paramsBuilder.addParam('editorType', editorType.rawValue);\r\n            }\r\n\r\n            var editorCheckedValue = attributes['editor-checked-value'];\r\n            if (editorCheckedValue) {\r\n                paramsBuilder.addParam('editorCheckedValue', editorCheckedValue.rawValue);\r\n            }\r\n\r\n            var editorUncheckedValue = attributes['editor-unchecked-value'];\r\n            if (editorUncheckedValue) {\r\n                paramsBuilder.addParam('editorUncheckedValue', editorUncheckedValue.rawValue);\r\n            }\r\n\r\n            var editorOptionsSet = attributes['editor-options-set'];\r\n            if (editorOptionsSet) {\r\n                var optionsSetEntity = api.getModelEntityByName(editorOptionsSet.rawValue);\r\n                if (!optionsSetEntity) {\r\n                    throw Error('vdlx-datagrid-column editor-options-set entity \"' + editorOptionsSet.rawValue + '\" does not exist in the model schema.');\r\n                }\r\n\r\n                var optionsSetEntityType = optionsSetEntity.getType();\r\n                if (optionsSetEntityType !== enums.DataType.SET) {\r\n                    throw Error('Entity \"' + editorOptionsSet.rawValue + '\" cannot be used as editor-options-set, wrong data type.');\r\n                }\r\n                paramsBuilder.addParam('editorOptionsSet', editorOptionsSet.rawValue);\r\n            }\r\n\r\n            var editorOptions = attributes['editor-options'];\r\n            if (editorOptions) {\r\n                if (editorOptions.expression.isString) {\r\n                    throw Error('vdlx-datagrid-column attribute \"editor-options\" must be an expression.');\r\n                }\r\n                paramsBuilder.addFunctionOrExpressionParam(\r\n                    'editorOptions',\r\n                    editorOptions.expression.value,\r\n                    ['value', 'rowData']);\r\n            }\r\n\r\n            if (editorOptionsSet && editorOptions) {\r\n                throw Error('vdlx-datagrid-column cannot have both editor-options-set and editor-options specified.');\r\n            }\r\n\r\n            var editorOptionsIncludeEmpty = attributes['editor-options-include-empty'];\r\n            if (editorOptionsIncludeEmpty) {\r\n                paramsBuilder.addParam('editorOptionsIncludeEmpty', editorOptionsIncludeEmpty.rawValue === 'true');\r\n            }\r\n\r\n            var render = attributes['render'];\r\n            if (render) {\r\n                if (render.expression.isString) {\r\n                    throw Error('Render parameter has to be an expression');\r\n                }\r\n                paramsBuilder.addParam('render', render.expression.value, true);\r\n            }\r\n\r\n            var format = attributes['format'];\r\n            if (format) {\r\n                if (!DataUtils.entityTypeIsNumber(entity)) {\r\n                    throw Error('Entity ' + entityName + ' with element type ' + entity.getElementType() + ' cannot be formatted');\r\n                }\r\n\r\n                paramsBuilder.addParam('format', format.rawValue);\r\n            }\r\n        }\r\n    });\r\n})(window);","\r\nimport '../css/vdlx-datagrid.scss';\r\nimport './vdlx-datagrid';\r\nimport './vdlx-datagrid-column';\r\n\r\n"]}