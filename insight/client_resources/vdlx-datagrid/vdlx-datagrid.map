{"version":3,"sources":["vdlx-datagrid/attributes.js","vdlx-datagrid/transform.js","vdlx-datagrid/data-transform.js","vdlx-datagrid/ko-utils.js","vdlx-datagrid/data-loader.js","vdlx-datagrid/paginator.js","vdlx-datagrid/datagrid.js","vdlx-datagrid/view-model.js","vdlx-datagrid/index.js","vdlx-datagrid-column/index.js","index.js"],"names":["name","description","acceptsExpression","required","expressionVars","type","element","attributes","api","paramsBuilder","getComponentParamsBuilder","$element","$","scenarioId","expression","isString","parsedNum","parseInt","rawValue","isNaN","addParam","Error","value","pageSize","pageSizeNum","pageMode","addClass","columnFilter","addRemoveRow","tableIdAttr","tableId","attr","_","uniqueId","width","modifier","klass","removeAttr","rowFilter","addFunctionOrExpressionParam","gridData","gridHeight","$tableDiv","append","$hiddenFooter","$footerToolBar","DataUtils","insightModules","load","createDenseData","getAllColumnIndices","curry","schema","columnOptions","map","option","getEntity","getIndexSets","getDisplayIndices","columnIndices","setCount","numColumns","length","indices","i","options","setPosns","getIndexPosns","forEach","setName","setPosn","getFilterValue","filters","key","position","keyJson","JSON","stringify","pick","count","keys","k","parse","getPartialExposedKey","setNameAndPosns","rowData","slice","generateCompositeKey","setValues","arrayIndices","arrayOptions","setIndex","findIndex","filterValue","allColumnIndices","setNamePosnsAndOptions","scenariosData","defaultScenario","indexScenarios","uniq","id","get","scenarios","arrayIds","setIds","arrays","column","getArray","sets","setNameAndPosn","scenario","getSet","flatten","createRow","partial","zipObject","concat","ko","onSubscribe","f","observable","subscribe","subscription","apply","arguments","onSubscriptionDispose","dispose","findScenario","identifier","result","some","currentScenario","getId","getSelectionIndex","getAutoTableEntities","modelSchema","insight","getView","getProject","getModelSchema","entities","entity","filter","identity","getLabelsEntity","getScenarios","config","isUndefined","columnsAndScenarios","currentColumn","columnId","withScenarioData","config$","hasSubscription","scenarios$","scenarioData$","pureComputed","unwrap","isEmpty","undefined","scenarioObserverSubscription$","scenarioList","withScenarios","withEntities","notify","start","subscriptions","noop","oldScenarioObserver","getSubscriptionsCount","scenarioObserver","each","sub","Paginator","table","$paginationControl","pageNum","currentPage","$pageInput","val","$prevBtn","removeClass","maxPage","$nextBtn","$pageNumbersSpan","text","previousPage","updatePageIndicators","nextPage","Math","max","min","$container","$revealBtn","find","$dropdown","$perPageSelector","on","toggleClass","evt","target","isNumber","actual","goToPage","setPageSize","getPage","num","setPage","getPageMax","SelectOptions","Datagrid","root","options$","columnOptions$","componentRoot","createTable","paginatorControl","createPaginatorControl","buildTable","scenariosData$","setColumnsAndData","tabulatorOptions","pagination","paginationSize","paginationElement","layout","placeholder","groupStartOpen","ajaxLoader","columns","Tabulator","$componentRoot","appendTo","indicesOptions","entitiesOptions","allScenarios","values","indicesColumns","title","String","getAbbreviation","field","mutatorData","data","params","getLabel","columnsIds","entitiesColumns","entityOptions","columnNumber","assign","propertyOf","tableKeys","columnScenario","window","Formatter","getFormattedLabel","setColumns","setData","then","redraw","catch","err","COLUMN_UPDATE_DELAY","DEFAULT_GRID_PAGE_SIZE","parseIntOrKeep","isNullOrUndefined","isNull","stripEmpties","partialRight","flow","negate","getTableOptions","overrides","paging","pageLength","searching","showFilter","tableOptions","selectionAndNavigation","selectionNavigation","onError","bindKey","self","alwaysShowSelection","height","isFunction","modifiedTableOptions","cloneDeep","isPlainObject","isEditable","editable","createViewModel","componentInfo","vm","tableWidth","replace","tableOptions$","columnConfig$","datagrid","columnConfigs","idx","clone","configItem","scenarioNum","push","omit","set","has","indexList","cleanItem","setPosition","range","j","item","sortBy","throttledBuildTable","throttle","leading","tableUpdate","tableValidate","validate","VDL","tag","VXDAttributes","viewModel","transform","enums","vdlIndexFilter","validatorFactory","insightGetter","RenderCallbacks","COLUMN_BUILD_DELAY","AUTOCOLUMN_PROP_NAME","VDGCattributes","docIgnore","expressionReturns","errorTargetSelector","closest","template","modifiesDescendants","indexFilters$","filters$","reduce","memo","filterProps","buildColumn","done","console","log","columnReady","size","props","heading","toLowerCase","visible","style","sortByFormatted","filterByFormatted","editorOptionsSet","selectNull","editorOptionsIncludeEmpty","checkedValue","editorCheckedValue","uncheckedValue","editorUncheckedValue","editorType","editorOptions","render","format","markAsBuiltinRenderCallback","formatCell","formatNumber","getValidationFn","validationProperties","getValidationProperties","customValidators","getCustomValidators","createFromValidators","validationObservable","extend","functionObservable","onDependenciesChange","read","disposeWhenDependenciesChange","editorValidate","newValue","peek","paramsWatcher","computed","constructedParams","columnUpdate","filterUpdate","filterId","filterProperties","filterRemove","entityAttr","entityName","getModelEntityByName","test","entityType","getType","DataType","ARRAY","SET","addRawOrExpressionParam","textContent","contents","index","nodeType","Node","TEXT_NODE","trim","toArray","join","getManagementType","EntityManagementType","RESULT","editorTypes","indexOf","optionsSetEntity","optionsSetEntityType","entityTypeIsNumber","getElementType"],"mappings":"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","file":"vdlx-datagrid.map","sourceRoot":"..\\..\\..\\src\\js","sourcesContent":["export default [\r\n    {\r\n        name: 'id',\r\n        description:\r\n        'Specify an element id for the table. Useful if you later want to target the table using a selector. ' +\r\n        'If not given then an id will be generated.'\r\n    },\r\n    {\r\n        name: 'scenario',\r\n        description:\r\n        'The default scenario to use for fetching data in the table. This can be overridden per column but the default ' +\r\n        'will be used when a column does not specify a particular scenario and the index sets will be fetched from the default scenario.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-size',\r\n        description: 'The number of rows to show per-page in paged mode. Defaults to 50.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'page-mode',\r\n        description: 'By default the table will show all rows. Set this attribute to \"paged\" to enable table pagination.'\r\n    },\r\n    {\r\n        name: 'height',\r\n        description: 'Table height',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'show-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the table filter. This will show a single input above the table to filter across all table cells.'\r\n    },\r\n    {\r\n        name: 'column-filter',\r\n        description:\r\n            'Set this to \"true\" to enable the column filters. This will show a header row with filter inputs for each column.'\r\n    },\r\n    {\r\n        name: 'add-remove-row',\r\n        description:\r\n        'Setting this will show the add-remove row buttons at the bottom of the table. Set to \"true\" ' +\r\n        'to prompt for index selection on row add. Set to \"addrow-autoinc\" will switch the behaviour to allow new ' +\r\n        'index values to be created, incrementing from the highest value in the set(s).'\r\n    },\r\n    {\r\n        name: 'selection-navigation',\r\n        description:\r\n        'Enable/disable table navigation, selection and clipboard features. Set to \"false\" to disable ' +\r\n        'these features. Defaults to true.'\r\n    },\r\n    {\r\n        name: 'modifier',\r\n        description:\r\n        'Table modifier function. Will be called after the table configuration ' +\r\n        'has been built. Provides a way to change the configuration before the table is rendered. Must ' +\r\n        'be an expression that resolves to a function. Takes the table configuration object and ' +\r\n        'should return the modified configuration. If an object is not returned then the table will be unaffected.',\r\n        acceptsExpression: true\r\n    },\r\n    {\r\n        name: 'width',\r\n        description:\r\n        'Set the table to a fixed width, in pixels. Accepts an integer value. ' +\r\n        'If set to the string \"custom\" then the table width is calculated by adding up all the widths of the columns in the table. ' +\r\n        \"If a column doesn't have a width specified then it is given a default value of 100px.\",\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'class',\r\n        description: 'Space-separated list of the classes of the element.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'always-show-selection',\r\n        description:\r\n            'Whether to display selection on inactive tables. Set to \"true\" to keep selection on a table when it becomes inactive. Defaults to false.',\r\n        acceptsExpression: false\r\n    },\r\n    {\r\n        name: 'row-filter',\r\n        description:\r\n        'Expression to be used for filtering the rows of a <vdl-table>. This must be an expression and ' +\r\n        'should resolve to either a function or a boolean value. If a function it will be executed when table updates. ' +\r\n        'The function will have the following signature (rowData, indices) and should return a boolean.',\r\n        acceptsExpression: true,\r\n        required: false,\r\n        expressionVars: [\r\n            {\r\n                name: 'rowData',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for all row cells'\r\n            },\r\n            {\r\n                name: 'indices',\r\n                type: 'Array.<(string|boolean|number)>',\r\n                description: 'Data for the index columns of the row'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'save-state',\r\n        description:\r\n        'Set this to \"false\" to disable table state saving. By default table state is stored in the ' +\r\n        \"user's browser session so that user settings (e.g. page, sorting and search) are preserved if table data \" +\r\n        'is reloaded. Defaults to true.',\r\n        acceptsExpression: false,\r\n        required: false\r\n    },\r\n    {\r\n        name: 'grid-data',\r\n        acceptsExpression: true\r\n    }\r\n];","export default function (element, attributes, api) {\r\n    var paramsBuilder = api.getComponentParamsBuilder(element);\r\n    var $element = $(element);\r\n\r\n    var scenarioId = attributes['scenario'];\r\n    if (scenarioId) {\r\n        if (scenarioId.expression.isString) {\r\n            var parsedNum = parseInt(scenarioId.rawValue);\r\n            if (isNaN(parsedNum)) {\r\n                paramsBuilder.addParam('scenarioId', scenarioId.rawValue);\r\n            } else {\r\n                if (parsedNum < 0) {\r\n                    throw Error('If scenario-id is specifying an index it must be a positive integer.');\r\n                }\r\n                paramsBuilder.addParam('scenarioId', parsedNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('scenarioId', scenarioId.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageSize = attributes['page-size'];\r\n    if (pageSize) {\r\n        if (pageSize.expression.isString) {\r\n            var pageSizeNum = parseInt(pageSize.rawValue);\r\n            if (!isNaN(pageSizeNum)) {\r\n                paramsBuilder.addParam('pageSize', pageSizeNum);\r\n            }\r\n        } else {\r\n            paramsBuilder.addParam('pageSize', pageSize.expression.value, true);\r\n        }\r\n    }\r\n\r\n    var pageMode = attributes['page-mode'];\r\n    if (pageMode && pageMode.rawValue === 'paged') {\r\n        paramsBuilder.addParam('pageMode', pageMode.rawValue);\r\n    } else {\r\n        paramsBuilder.addParam('pageMode', 'scrolling');\r\n        $(element).addClass('scrolling');\r\n    }\r\n\r\n    // TODO No table search in vdlx-datagrid\r\n    // var showFilter = attributes['show-filter'];\r\n    // if (showFilter) {\r\n    //     paramsBuilder.addParam('showFilter', showFilter.rawValue === 'true');\r\n    // }\r\n\r\n    var columnFilter = attributes['column-filter'];\r\n    if (columnFilter) {\r\n        paramsBuilder.addParam('columnFilter', columnFilter.rawValue === 'true');\r\n    }\r\n\r\n    var addRemoveRow = attributes['add-remove-row'];\r\n    if (addRemoveRow) {\r\n        if (addRemoveRow.rawValue === 'true') {\r\n            paramsBuilder.addParam('addRemoveRow', true);\r\n        } else if (addRemoveRow.rawValue === 'addrow-autoinc') {\r\n            paramsBuilder.addParam('addRemoveRow', 'addrow-autoinc');\r\n        }\r\n    }\r\n\r\n    // TODO row selection?\r\n    // var selectionNavigation = attributes['selection-navigation'];\r\n    // if (selectionNavigation && selectionNavigation.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('selectionNavigation', false);\r\n    // }\r\n\r\n    var tableIdAttr = attributes['id'];\r\n    let tableId;\r\n    if (tableIdAttr) {\r\n        $element.attr('id', null);\r\n        tableId = tableIdAttr.rawValue;\r\n    } else {\r\n        tableId = _.uniqueId('vdlx-datagrid-')\r\n    }\r\n    paramsBuilder.addParam('tableId', tableId);\r\n\r\n    var width = attributes['width'];\r\n    if (width) {\r\n        paramsBuilder.addParam('width', width.rawValue);\r\n    }\r\n\r\n    // TODO state saving?\r\n    // var saveState = attributes['save-state'];\r\n    // if (saveState && saveState.rawValue === 'false') {\r\n    //     paramsBuilder.addParam('saveState', false);\r\n    // }\r\n\r\n    var modifier = attributes['modifier'];\r\n    if (modifier) {\r\n        if (modifier.expression.isString) {\r\n            throw Error('The vdl-table modifier attribute must be supplied as an expression');\r\n        }\r\n        paramsBuilder.addParam('modifier', modifier.expression.value, true);\r\n    }\r\n\r\n    var klass = attributes['class'];\r\n    if (klass) {\r\n        $element.removeAttr('class');\r\n        paramsBuilder.addParam('class', klass.rawValue);\r\n    }\r\n\r\n    // TODO any way to achieve this? Is it needed?\r\n    // var alwaysShowSelection = attributes['always-show-selection'];\r\n    // if (alwaysShowSelection && (alwaysShowSelection.rawValue.toUpperCase() === 'TRUE')) {\r\n    //     paramsBuilder.addParam('alwaysShowSelection', true);\r\n    // }\r\n\r\n    var rowFilter = attributes['row-filter'];\r\n    if (rowFilter) {\r\n        if (rowFilter.expression.isString) {\r\n            throw Error('The vdl-table \"row-filter\" attribute must be supplied as an expression');\r\n        }\r\n\r\n        paramsBuilder.addFunctionOrExpressionParam('rowFilter', rowFilter.expression.value, ['rowData', 'indices']);\r\n    }\r\n\r\n    // TODO temporary data\r\n    var gridData = attributes['grid-data'];\r\n    if (gridData) {\r\n        paramsBuilder.addParam('gridData', gridData.expression.value, true);\r\n    }\r\n\r\n    var gridHeight = attributes['height'];\r\n    if (gridHeight) {\r\n        if (gridHeight.expression.isString) {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.rawValue, false);\r\n        } else {\r\n            paramsBuilder.addParam('gridHeight', gridHeight.expression.value, true);\r\n        }\r\n    }\r\n\r\n    /*\r\n    Create the DIV placeholder to attach Tabulator component to. \r\n     */\r\n    const $tableDiv = $('<div/>');\r\n    $tableDiv.attr('id', tableId);\r\n    $tableDiv.addClass('table-striped table-bordered table-condensed');\r\n    $element.append($tableDiv);\r\n\r\n    /*\r\n    Create to DIV to hide the built-in pagination\r\n     */\r\n    const $hiddenFooter = $('<div class=\"hidden-footer-toolbar\" style=\"display: none\"/>');\r\n    $element.append($hiddenFooter);\r\n\r\n    /*\r\n    Create the Footer toolbar with FICO pagination control.\r\n     */\r\n    const $footerToolBar = $('<div class=\"footer-toolbar\"/>');\r\n    $element.append($footerToolBar);\r\n}\r\n","const DataUtils = insightModules.load('utils/data-utils');\r\nconst createDenseData = insightModules.load('components/table/create-dense-data');\r\n\r\nexport const getAllColumnIndices = _.curry((schema, columnOptions) => {\r\n    return _.map(columnOptions, function (option) {\r\n        return schema.getEntity(option.name).getIndexSets();\r\n    });\r\n}, 2);\r\n\r\n/**\r\n * @typedef {{name: string, position: number}} SetNameAndPosition \r\n */\r\n\r\n/** @returns {SetNameAndPosition[]} */\r\nexport const getDisplayIndices = (columnIndices, columnOptions) => {\r\n    var setCount = {};\r\n    var numColumns = columnIndices.length;\r\n\r\n    for (var i = 0; i < numColumns; i++) {\r\n        const indices = columnIndices[i], options = columnOptions[i];\r\n        const setPosns = DataUtils.getIndexPosns(indices);\r\n        indices.forEach(function (setName, i) {\r\n            const setPosn = setPosns[i];\r\n            if (DataUtils.getFilterValue(options.filters, setName, setPosn) == null) {\r\n                // i.e. if there is no filter, then this index is to be used\r\n                const key = { name: setName, position: setPosn }, keyJson = JSON.stringify(key);\r\n                setCount[keyJson] = (setCount[keyJson] || 0) + 1;\r\n            }\r\n        });\r\n    }\r\n\r\n    return _(setCount)\r\n        .pick(function (count) {\r\n            return count === numColumns;\r\n        })\r\n        .keys()\r\n        .map(function (k) {\r\n            return JSON.parse(k);\r\n        })\r\n        .value();\r\n}\r\n\r\n// Build a key from the index set columns of a row. This may be partial, if not all index sets are displayed in the row\r\nexport const getPartialExposedKey = (setNameAndPosns, rowData) => \r\n    // Assume index columns always start at the beginning of the rowData array\r\n    rowData.slice(0, setNameAndPosns.length);\r\n\r\nexport const generateCompositeKey = function (setValues, setNameAndPosns, arrayIndices, arrayOptions) {\r\n    const setPosns = DataUtils.getIndexPosns(arrayIndices);\r\n    return arrayIndices.map(function (setName, i) {\r\n        const setPosn = setPosns[i];\r\n        const setIndex = _.findIndex(setNameAndPosns, { name: setName, position: setPosn });\r\n        const filterValue = DataUtils.getFilterValue(arrayOptions.filters, setName, setPosn);\r\n        if (setIndex !== -1) {\r\n            return setValues[setIndex];\r\n        } else if (filterValue != null) {\r\n            return filterValue;\r\n        } else {\r\n            throw Error('Cannot generate table with incomplete index configuration. Missing indices: ' +\r\n                setName + ' for entity: ' + arrayOptions.name);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (allColumnIndices, columnOptions, setNamePosnsAndOptions, scenariosData) => {\r\n\r\n    var defaultScenario = scenariosData.defaultScenario;\r\n    const indexScenarios = _.uniq(_.map(_.map(columnOptions, 'id'), id =>\r\n        _.get(scenariosData.scenarios, id, defaultScenario)\r\n    ));\r\n\r\n    const arrayIds = _.map(columnOptions, 'id');\r\n    const setIds = _.map(setNamePosnsAndOptions, 'options.id');\r\n\r\n    const arrays = _.map(columnOptions, column =>\r\n        _.get(scenariosData.scenarios, column.id, defaultScenario).getArray(column.name)\r\n    );\r\n\r\n    const sets = _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n        return _(indexScenarios)\r\n            .map(function (scenario) {\r\n                return scenario.getSet(setNameAndPosn.name);\r\n            })\r\n            .flatten()\r\n            .uniq()\r\n            .value();\r\n    });\r\n\r\n    const createRow = _.partial(_.zipObject, setIds.concat(arrayIds));\r\n\r\n    return _.map(createDenseData(sets, arrays, setNamePosnsAndOptions, allColumnIndices, columnOptions, generateCompositeKey), createRow);\r\n};","/** @type {KnockoutStatic} */ ko;\r\n/** @type {import('lodash').LoDashStatic} */ _;\r\n\r\nexport const onSubscribe = _.curry(function (f, observable) {\r\n    var subscribe = observable.subscribe;\r\n    observable.subscribe = function () {\r\n        var subscription = subscribe.apply(observable, arguments);\r\n        f(subscription);\r\n        return subscription;\r\n    };\r\n\r\n    return observable;\r\n}, 2);\r\n\r\nexport function onSubscriptionDispose (f, subscription) {\r\n    var dispose = subscription.dispose;\r\n\r\n    subscription.dispose = function () {\r\n        dispose.apply(subscription, arguments);\r\n        f();\r\n    };\r\n\r\n    return subscription;\r\n}","import { onSubscribe, onSubscriptionDispose } from \"./ko-utils\";\r\n\r\nfunction findScenario (scenarios, identifier) {\r\n    var result = null;\r\n\r\n    // Find scenario by ID.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getId() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    if (result) {\r\n        return result;\r\n    }\r\n\r\n    // Find by position.\r\n    scenarios.some(function (currentScenario) {\r\n        if (currentScenario.getSelectionIndex() === identifier) {\r\n            result = currentScenario;\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction getAutoTableEntities (columnOptions) {\r\n    var modelSchema = insight.getView().getProject().getModelSchema();\r\n\r\n    let entities = _.map(columnOptions, 'name');\r\n    // and index sets\r\n    entities = entities.concat(\r\n        _.flatten(_.map(entities, entity => modelSchema.getEntity(entity).getIndexSets()))\r\n    );\r\n\r\n    // Also add entities from editor options set.\r\n    entities = entities.concat(\r\n        _.filter(_.map(columnOptions, 'editorOptionsSet'), _.identity)\r\n    );\r\n\r\n    entities = _.uniq(entities);\r\n\r\n    return entities.concat(\r\n        _.filter(_.map(entities, (entity) => modelSchema.getEntity(entity).getLabelsEntity()), _.identity)\r\n    );\r\n}\r\n\r\nfunction getScenarios (config, scenarios) {\r\n    scenarios = [].concat(scenarios);\r\n    const defaultScenario = _.isUndefined(config.scenario) ? scenarios[0] : findScenario(scenarios, config.scenario);\r\n\r\n    // Bind a scenario per column - single table.\r\n    const columnsAndScenarios = _.zipObject(_.filter(_.map(config.columnOptions, currentColumn => [\r\n        currentColumn.id,\r\n        findScenario(scenarios, currentColumn.scenario)\r\n    ]), ([columnId, scenario]) => !!scenario));\r\n\r\n    return { defaultScenario: defaultScenario, scenarios: columnsAndScenarios };\r\n}\r\n\r\n/**\r\n *\r\n * @param {*} config$\r\n * @returns {KnockoutObservable<{defaultScenario: Scenario, scenarios: Scenario[]}>}\r\n */\r\nfunction withScenarioData (config$) {\r\n    let hasSubscription = false;\r\n    const scenarios$ = ko.observable([]);\r\n\r\n    const scenarioData$ = ko.pureComputed(() => {\r\n        const config = ko.unwrap(config$);\r\n        const scenarios = ko.unwrap(scenarios$);\r\n        if (_.isEmpty(config) || _.isEmpty(scenarios)) {\r\n            return undefined;\r\n        }\r\n\r\n        return getScenarios(config, scenarios);\r\n    });\r\n\r\n    const scenarioObserverSubscription$ = ko.pureComputed(function () {\r\n        const config = ko.unwrap(config$);\r\n        if (!_.isEmpty(config.scenarioList) && !_.isEmpty(config.columnOptions)) {\r\n            return insight.getView()\r\n                .withScenarios(config.scenarioList)\r\n                .withEntities(getAutoTableEntities(config.columnOptions))\r\n                .notify(function (scenarios) {\r\n                    scenarios$(scenarios);\r\n                })\r\n                .start();\r\n        }\r\n        return undefined;\r\n    });\r\n\r\n    return onSubscribe(function (subscription) {\r\n        let subscriptions = [];\r\n\r\n        if (!hasSubscription) {\r\n            subscriptions = [scenarioObserverSubscription$.subscribe(_.noop),\r\n            scenarioObserverSubscription$.subscribe(function (oldScenarioObserver) {\r\n                oldScenarioObserver && oldScenarioObserver.dispose();\r\n            }, null, 'beforeChange')];\r\n            hasSubscription = true;\r\n        }\r\n\r\n        onSubscriptionDispose(function () {\r\n            hasSubscription = !!scenarioData$.getSubscriptionsCount();\r\n            if (!hasSubscription) {\r\n                const scenarioObserver = scenarioObserverSubscription$();\r\n                scenarioObserver && scenarioObserver.dispose();\r\n                _.each(subscriptions, sub => sub.dispose());\r\n            }\r\n        }, subscription);\r\n\r\n    }, scenarioData$);\r\n};\r\n\r\nexport default withScenarioData;\r\n","export default class Paginator {\r\n\r\n    constructor(table) {\r\n        this.table = table;\r\n        this.$paginationControl = $(`<div class=\"datagrid-pagination-control\">\r\n    <div class=\"pull-right\">\r\n        <div class=\"paging_fico\">\r\n            <button class=\"reveal-btn btn\"><span class=\"paginate-control-text\">page 1 of 1 </span><i class=\"fico-arrow-down5\"></i>\r\n            </button>\r\n            <ul class=\"pager jumpto-pager\">\r\n                <li><a class=\"pagination-button-previous disabled\"><i class=\"fico-chevron-left\"></i></a></li>\r\n                <li><a class=\"pagination-button-next\"><i class=\"fico-chevron-right\"></i></a></li>\r\n            </ul>\r\n            <div class=\"jumpto-pagination hide\">\r\n                <div>\r\n                    <div class=\"jumpto-pagination-label\">Jump to page:</div>\r\n                    <input type=\"number\" class=\"jumpto-pagination-input\" value=\"1\"></div>\r\n                <div class=\"results-per-page\">\r\n                    <div class=\"jumpto-pagination-label\">Items per page:</div>\r\n                    <select class=\"results-per-page-selector\">\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\" selected>10</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                    </select></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>`);\r\n    }\r\n\r\n    /*\r\n    Tabulator Pagination methods\r\n\r\n    table.setPage(5);\r\n    table.nextPage();\r\n    table.previousPage();\r\n    table.setPageSize(50);\r\n    var pageSize = table.getPageSize();\r\n    table.getPage();\r\n    table.getPageMax();\r\n\r\n     */\r\n\r\n\r\n    /**\r\n     * get the currentPage as integer\r\n     * @returns {number}\r\n     */\r\n    get currentPage() {\r\n        return this.table.getPage();\r\n    }\r\n\r\n    /**\r\n     * Set the current page as integer\r\n     * @param {number} num\r\n     * @returns {*|boolean}\r\n     */\r\n    set currentPage(num) {\r\n        return this.table.setPage(num);\r\n    }\r\n\r\n    /**\r\n     * get the number of the last page.\r\n     * @returns {number} last page\r\n     */\r\n    get maxPage() {\r\n        return this.table.getPageMax();\r\n    }\r\n\r\n    /**\r\n     * Refresh all the Paginator controls to display the correct pages, the enabled start of the previous and next buttons, ect..\r\n     */\r\n    updatePageIndicators() {\r\n        let pageNum = this.currentPage;\r\n        this.$pageInput.val(pageNum);\r\n        if(pageNum === 1) {\r\n            this.$prevBtn.addClass('disabled');\r\n        } else {\r\n            this.$prevBtn.removeClass('disabled');\r\n        }\r\n        if(pageNum === this.maxPage) {\r\n            this.$nextBtn.addClass('disabled');\r\n        } else {\r\n            this.$nextBtn.removeClass('disabled');\r\n        }\r\n        this.$pageNumbersSpan.text(`Page ${this.currentPage} of ${this.maxPage}`);\r\n    }\r\n\r\n    /**\r\n     * Navigate the grid to the previous page.\r\n     */\r\n    previousPage() {\r\n        if(this.currentPage > 1) {\r\n            this.table.previousPage();\r\n            this.updatePageIndicators();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Navigate the grid to the next page.\r\n     */\r\n    nextPage() {\r\n        if(this.currentPage < this.maxPage) {\r\n            this.table.nextPage();\r\n            this.updatePageIndicators();\r\n        }\r\n    }\r\n\r\n    goToPage(pageNum) {\r\n        let currentPage = Math.max(1, Math.min(this.maxPage, pageNum));\r\n        this.currentPage = currentPage;\r\n\r\n        return currentPage;\r\n    }\r\n\r\n    appendTo($container) {\r\n        $container.append(this.$paginationControl);\r\n\r\n        this.$revealBtn = this.$paginationControl.find('.paging_fico .reveal-btn');\r\n        this.$dropdown = this.$paginationControl.find('.paging_fico .jumpto-pagination');\r\n        this.$prevBtn = this.$paginationControl.find('.pagination-button-previous');\r\n        this.$nextBtn = this.$paginationControl.find('.pagination-button-next');\r\n        this.$pageInput = this.$paginationControl.find('.paging_fico .jumpto-pagination-input');\r\n        this.$perPageSelector = this.$paginationControl.find('.results-per-page-selector');\r\n        this.$pageNumbersSpan = this.$paginationControl.find('.paginate-control-text');\r\n\r\n        this.$revealBtn.on('mousedown', () => {\r\n            this.$revealBtn.toggleClass('active-pager-btn');\r\n            this.$dropdown.toggleClass('hide');\r\n        });\r\n\r\n        this.$prevBtn.on('mouseup', () => {\r\n            this.previousPage();\r\n        });\r\n\r\n        this.$nextBtn.on('mouseup', () => {\r\n            this.nextPage();\r\n        });\r\n\r\n        this.$pageInput.on('input', evt => {\r\n            let val = _.parseInt(evt.target.value);\r\n            if(_.isNumber(val)) {\r\n                let actual = this.goToPage(val);\r\n                if(actual !== val) {\r\n                    this.updatePageIndicators();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$perPageSelector.on('input', evt => {\r\n            let val = _.parseInt(evt.target.value);\r\n            this.table.setPageSize(val);\r\n            this.updatePageIndicators();\r\n        });\r\n    }\r\n}","import dataTransform, { getAllColumnIndices, getDisplayIndices, getPartialExposedKey, generateCompositeKey } from './data-transform';\r\nimport withScenarioData from './data-loader';\r\nimport Paginator from \"./paginator\";\r\n\r\nconst SelectOptions = insightModules.load('components/autotable-select-options');\r\n\r\nclass Datagrid {\r\n    constructor(root, options$, columnOptions$) {\r\n        this.options$ = options$;\r\n        this.columnOptions$ = columnOptions$;\r\n        this.componentRoot = root;\r\n        this.table = undefined;\r\n        this.schema = insight\r\n            .getView()\r\n            .getProject()\r\n            .getModelSchema();\r\n\r\n        const options = ko.unwrap(options$);\r\n\r\n        this.table = this.createTable(options);\r\n\r\n        this.paginatorControl = this.createPaginatorControl(this.componentRoot, this.table);\r\n\r\n        this.buildTable();\r\n    }\r\n\r\n    buildTable () {\r\n        const columnOptions$ = this.columnOptions$;\r\n\r\n        const scenariosData$ = withScenarioData(columnOptions$);\r\n\r\n        ko.pureComputed(() => {\r\n            const columnOptions = columnOptions$();\r\n            const scenariosData = scenariosData$();\r\n\r\n            if (columnOptions && scenariosData) {\r\n                this.setColumnsAndData(columnOptions, scenariosData);\r\n            }\r\n            return undefined;\r\n        }).subscribe(_.noop);\r\n    }\r\n\r\n    createTable(options) {\r\n        const tabulatorOptions = {\r\n            pagination: options.pagination,\r\n            paginationSize: options.paginationSize,\r\n            paginationElement: options.paginationElement,\r\n            layout: 'fitColumns',\r\n            placeholder: 'Waiting for data',\r\n            groupStartOpen: false,\r\n            ajaxLoader: true,\r\n            columns: [],\r\n        };\r\n\r\n        return new Tabulator(`#${options.tableId}`, tabulatorOptions);\r\n    }\r\n\r\n    createPaginatorControl(componentRoot, table) {\r\n        let $componentRoot = $(componentRoot);\r\n        let $footerToolBar = $componentRoot.find('.footer-toolbar');\r\n        const paginatorControl = new Paginator(table);\r\n        paginatorControl.appendTo($footerToolBar);\r\n        return paginatorControl;\r\n    }\r\n\r\n    setColumnsAndData(columnOptions, scenariosData) {\r\n        const table = this.table;\r\n        const schema = this.schema;\r\n        const indicesOptions = columnOptions.indicesOptions\r\n        const entitiesOptions = columnOptions.columnOptions\r\n        const allColumnIndices = getAllColumnIndices(schema, entitiesOptions);\r\n\r\n        const setNameAndPosns = getDisplayIndices(allColumnIndices, entitiesOptions);\r\n\r\n        const setNamePosnsAndOptions = _.map(setNameAndPosns, setNameAndPosn => ({\r\n            ...setNameAndPosn,\r\n            options: _.get(indicesOptions, `${setNameAndPosn.name}.${setNameAndPosn.position}`, {\r\n                id: `${setNameAndPosn.name}_${setNameAndPosn.position}`\r\n            })\r\n        }))\r\n\r\n        const allScenarios = _.uniq([scenariosData.defaultScenario].concat(_.values(scenariosData.scenarios)));\r\n\r\n        const indicesColumns = _.map(setNamePosnsAndOptions, setNameAndPosn => {\r\n            const { name, options } = setNameAndPosn;\r\n            const entity = schema.getEntity(name);\r\n\r\n            return {\r\n                title: String(options.title || entity.getAbbreviation() || name),\r\n                field: options.id,\r\n                mutatorData: (value, data, type, params) => SelectOptions.getLabel(schema, allScenarios, entity, value)\r\n            };\r\n        });\r\n\r\n        const columnsIds = _.map(setNamePosnsAndOptions, 'options.id').concat(_.map(entitiesOptions, 'id'));\r\n\r\n        const entitiesColumns =  _.map(entitiesOptions, (entityOptions, columnNumber) => {\r\n            const entity = schema.getEntity(entityOptions.name);\r\n\r\n            return _.assign(entityOptions, {\r\n                title: String(entityOptions.title || entity.getAbbreviation() || entityOptions.name),\r\n                field: entityOptions.id,\r\n                mutatorData: (value, data) => {\r\n                    const rowData = _.map(columnsIds, _.propertyOf(data));\r\n                    const tableKeys = getPartialExposedKey(setNameAndPosns, rowData);\r\n                    const keys = generateCompositeKey(tableKeys, setNameAndPosns, allColumnIndices[columnNumber], entityOptions);\r\n                    const columnScenario = _.get(scenariosData.scenarios, entityOptions.id, scenariosData.defaultScenario);\r\n                    return window.insight.Formatter.getFormattedLabel(entity, columnScenario, value, keys);\r\n                }\r\n            });\r\n        });\r\n        const columns = [].concat(indicesColumns, entitiesColumns);\r\n\r\n        const data = dataTransform(allColumnIndices, entitiesColumns, setNamePosnsAndOptions, scenariosData)\r\n\r\n        table.setColumns(columns);\r\n\r\n        return table\r\n            .setData(data)\r\n            .then(() => {\r\n                table.redraw();\r\n                this.paginatorControl.updatePageIndicators();\r\n            })\r\n            .catch((err) => {\r\n                debugger;\r\n            });\r\n    }\r\n}\r\n\r\nexport default Datagrid;\r\n","import Datagrid from './datagrid';\r\n\r\nconst COLUMN_UPDATE_DELAY = 100;\r\nconst DEFAULT_GRID_PAGE_SIZE = 10;\r\n\r\nfunction parseIntOrKeep (val) {\r\n    var result = _.parseInt(val);\r\n    if (_.isNaN(result)) {\r\n        return val;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction isNullOrUndefined (val) {\r\n    return _.isNull(val) || _.isUndefined(val);\r\n}\r\n\r\nconst stripEmpties = _.partialRight(_.pick, _.flow(_.identity, _.negate(isNullOrUndefined)));\r\n\r\nconst getTableOptions = (params) => () => {\r\n    var overrides = stripEmpties({\r\n        paging: params.pageMode,\r\n        pageLength: params.pageSize,\r\n        searching: params.showFilter,\r\n        columnFilter: params.columnFilter\r\n    });\r\n\r\n    var tableOptions = {\r\n        tableId: params.tableId,\r\n        addRemoveRow: params.addRemoveRow,\r\n        selectionAndNavigation: params.selectionNavigation,\r\n        overrides: overrides,\r\n        onError: _.bindKey(self, '_wrapAlert'),\r\n        alwaysShowSelection: params.alwaysShowSelection,\r\n        gridHeight: params.gridHeight,\r\n        gridData: params.gridData\r\n    };\r\n\r\n    var pageMode = params['pageMode'];\r\n\r\n    if (pageMode === 'paged') {\r\n        tableOptions.pagination = 'local';\r\n        tableOptions.paginationSize = params.pageSize || DEFAULT_GRID_PAGE_SIZE;\r\n        tableOptions.paginationElement = $('.hidden-footer-toolbar').get(0); // hide the built-in paginator\r\n    } else if (!pageMode || pageMode === 'none') {\r\n        tableOptions.height = false;\r\n    }\r\n\r\n    if (_.isFunction(params.rowFilter)) {\r\n        tableOptions.rowFilter = params.rowFilter;\r\n    }\r\n\r\n    tableOptions = stripEmpties(tableOptions);\r\n\r\n    if (!_.isUndefined(params.modifier)) {\r\n        if (_.isFunction(params.modifier)) {\r\n            // Pass cloned options so they cannot modify the original table options object\r\n            var modifiedTableOptions = params.modifier(_.cloneDeep(tableOptions));\r\n            if (_.isPlainObject(modifiedTableOptions)) {\r\n                tableOptions = modifiedTableOptions;\r\n            }\r\n        } else {\r\n            // console.error('vdl-table (' + self.tableId + '): \"modifier\" attribute must be a function.');\r\n        }\r\n    }\r\n\r\n    if (tableOptions.addRemoveRow) {\r\n        var isEditable = tableOptions.columnOptions.some(function (column) {\r\n            return !!column.editable;\r\n        });\r\n\r\n        if (!isEditable) {\r\n            tableOptions.addRemoveRow = false;\r\n            // not a hard error as this is used as a feature when making a table read only based on permissions\r\n            // console.log('vdl-table (' + self.tableId + \"): add/remove rows disabled. Table needs to have at least one editable column to use this feature.\");\r\n        }\r\n    }\r\n\r\n    return tableOptions;\r\n};\r\n\r\n/**\r\n * VDL Extensions callback.\r\n *\r\n * It is this functions responsibility to create the ViewModel that supplies data and behaviour to the <vdlx-datagrid> UI template.\r\n *\r\n * @param {object} params - an object where each property is a static or dynamic runtime value for this VDL extension.\r\n * @param {object} componentInfo - An object containing info describing the component.\r\n * @param {HTMLElement} componentInfo.element the DOM node for this instance of the VDL extension.\r\n */\r\nexport default function createViewModel(params, componentInfo) {\r\n    // Create the ViewModel object\r\n    var vm = {};\r\n\r\n    // Strip off the 'px' units if present.\r\n    if (params.width) {\r\n        vm.tableWidth = params.width.replace('px', '');\r\n    }\r\n\r\n    const element = componentInfo.element;\r\n    const defaultScenario = params.scenarioId || 0;\r\n\r\n    /**\r\n     * Wrap the options for the\r\n     */\r\n    const tableOptions$ = ko.pureComputed(getTableOptions(params));\r\n    const columnConfig$ = ko.observable({}); \r\n\r\n    var datagrid = new Datagrid(componentInfo.element, tableOptions$, columnConfig$);\r\n\r\n    function buildTable () {\r\n\r\n        /*\r\n        Collect the column information from the child VDL extensions (vdlx-datagrid-column)\r\n         */\r\n        const columnConfigs = $(element)\r\n            .find('vdlx-datagrid-column')\r\n            .map(function (idx, element) {\r\n                return _.clone(element['autotableConfig']);\r\n            });\r\n        if(!columnConfigs.length) {\r\n            return;\r\n        }\r\n\r\n        var entities = [];\r\n        var indices = {};\r\n\r\n        _.forEach(columnConfigs, function (configItem) {\r\n            var scenarioNum = parseIntOrKeep(configItem.scenario || defaultScenario);\r\n            if (_.isNumber(scenarioNum)) {\r\n                if (scenarioNum < 0) {\r\n                    // reject('Scenario index must be a positive integer.');\r\n                }\r\n            }\r\n            configItem.scenario = scenarioNum;\r\n            if (!!configItem.entity) {\r\n                configItem.name = configItem.entity;\r\n                delete configItem.entity;\r\n                entities.push(_.omit(configItem, isNullOrUndefined));\r\n            } else if (!!configItem.set) {\r\n                if (!_.has(indices, [configItem.set])) {\r\n                    indices[configItem.set] = [];\r\n                }\r\n                const indexList = indices[configItem.set];\r\n                const cleanItem = _.omit(configItem, isNullOrUndefined);\r\n                const setPosn = configItem.setPosition;\r\n                if (setPosn == null) {\r\n                    indexList.push(cleanItem);\r\n                } else if (indexList[setPosn]) {\r\n                    // reject('Table column for set \"' + configItem.set + '\" at position ' + setPosn\r\n                    //     + ' specified more than once');\r\n                } else {\r\n                    indexList[setPosn] = cleanItem;\r\n                    // if we have increased the length, then need to\r\n                    // explicitly inserts null/undefined here, or some\r\n                    // standard algorithms behave oddly. (E.g. _.map\r\n                    // will count the missing items, but [].map won't)\r\n                    _.range(indexList.length).forEach(function (j) {\r\n                        if (!indexList[j]) {\r\n                            indexList[j] = null;\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                // reject('Unknown column type');\r\n            }\r\n        });\r\n\r\n        var scenarioList = _(entities).filter(function (item) {\r\n            return !isNullOrUndefined(item);\r\n        }).map(function (item) {\r\n            return ko.unwrap(item.scenario);\r\n        }).uniq().sortBy().value();\r\n\r\n        if (_.isEmpty(scenarioList) || _.isEmpty(entities)) {\r\n            // console.debug('vdl-table (' + self.tableId + '): Scenario list or table column configuration is empty, ignoring update');\r\n\r\n            // if (resolve) {\r\n            //     resolve(tableOptions);\r\n            // }\r\n\r\n            // empty table element, to get rid of old configuration\r\n            // $table && $table.empty();\r\n            return;\r\n        }\r\n\r\n        columnConfig$({columnOptions: entities, indicesOptions: indices, scenarioList: scenarioList});\r\n    }\r\n\r\n    const throttledBuildTable = _.throttle(buildTable, COLUMN_UPDATE_DELAY, { leading: false });\r\n\r\n    vm.tableUpdate = function () {\r\n        throttledBuildTable();\r\n    };\r\n\r\n    vm.tableValidate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.validate = function () {\r\n        debugger;\r\n    };\r\n\r\n    vm.dispose = function () { };\r\n\r\n    buildTable();\r\n\r\n    return vm;\r\n}","\r\nimport VXDAttributes from './attributes';\r\nimport transform from './transform';\r\nimport viewModel from './view-model';\r\n\r\nVDL('vdlx-datagrid', {\r\n    tag: 'vdlx-datagrid',\r\n    attributes: VXDAttributes,\r\n    createViewModel: viewModel,\r\n    transform: transform\r\n});\r\n","(function (window) {\r\n    /*\r\n        vdlx-datagrid-column\r\n    \r\n        To be used as the direct child of <vdlx-datagrid>. <vdlx-datagrid-column may be used multiple times within its parent.\r\n        One of these tags directly generates a column in the resulting Datagrid.\r\n    \r\n        This tag creates config to tell its parent how to populate the datagrid column.\r\n     */\r\n\r\n    var enums = insightModules.load('enums');\r\n    var vdlIndexFilter = insightModules.load('vdl/extensions/vdl-index-filter');\r\n    var validatorFactory = insightModules.load('vdl/vdl-validator-factory');\r\n    var insightGetter = insightModules.load('insight-getter');\r\n    var RenderCallbacks = insightModules.load('components/table/render-callbacks');\r\n    var DataUtils = insightModules.load('utils/data-utils');\r\n\r\n    var COLUMN_BUILD_DELAY = 50;\r\n    var AUTOCOLUMN_PROP_NAME = 'autotableConfig';\r\n\r\n    /*\r\n        vdlx-datagrid-column attributes\r\n    \r\n        TODO do we need to add extra properties for the datagrid?\r\n     */\r\n    var VDGCattributes = [\r\n        {\r\n            name: 'entity',\r\n            description: 'Name of the array entity to show in this column. Throws an error if the entity doesn\\'t exist or is not an array or set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set',\r\n            description: 'Name of the set entity to show in this column. Throws an error if the entity doesn\\'t exist or is not a set type.',\r\n            required: false\r\n        },\r\n        {\r\n            name: 'set-position',\r\n            description: 'Index (zero-based) of occurrence of that index set in the index tuple for the array.' +\r\n                'Defaults to next available position.'\r\n        },\r\n        {\r\n            name: 'scenario',\r\n            description: 'The scenario id/index for this column. Not allowed on index column (when specifying a set entity)',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'editable',\r\n            description: 'Whether the cells within this column are editable.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'vdl-visible',\r\n            acceptsExpression: true,\r\n            docIgnore: true\r\n        },\r\n        {\r\n            name: 'heading',\r\n            description: 'A custom header for this column, will default to be the entity alias. ' +\r\n                'Alternatively, you can set the title as the text contents of the <vdlx-datagrid-column> element.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'width',\r\n            description: 'The width, in pixels, to set the column.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'class',\r\n            description: 'CSS classes to add to the table column cells. You can provide multiple classes separated by spaces.',\r\n            acceptsExpression: true\r\n        },\r\n        {\r\n            name: 'sort-by-formatted',\r\n            description: 'Use formatted values for sorting.'\r\n        },\r\n        {\r\n            name: 'filter-by-formatted',\r\n            description: 'Use formatted values for filtering. This defaults to false unless the entity has a label in which case the default is true.'\r\n        },\r\n        {\r\n            name: 'editor-type',\r\n            description: 'The editor type to use, in edit mode, for cells in this column. If not specified then it ' +\r\n                'will be autodetected based on entity type. Possible values: checkbox, select, text'\r\n        },\r\n        {\r\n            name: 'editor-checked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is checked.'\r\n        },\r\n        {\r\n            name: 'editor-unchecked-value',\r\n            description: 'The value to set the cell data to if input type is checkbox and it is not checked.'\r\n        },\r\n        {\r\n            name: 'editor-options-set',\r\n            description: 'Name of a set entity to use for select options. This will display labels if a labels entity ' +\r\n                'is defined against this set. This will automatically set the editor-type to be \"select\".'\r\n        },\r\n        {\r\n            name: 'editor-options',\r\n            description: 'An expression that results in one of the follow to be used as the select options: an array ' +\r\n                'of values, an object of property to value or an array of objects containing key and value properties. ' +\r\n                'This will automatically set the editor-type to be \"select\".',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'value',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'rowData',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ],\r\n            expressionReturns: {\r\n                type: 'Array.<*>|Object.<string, string>|Array.<{key: string, value: *}>',\r\n                description: 'An array of values, an object of property to value or an array of objects containing key and value properties'\r\n            }\r\n        },\r\n        {\r\n            name: 'editor-options-include-empty',\r\n            description: 'Allow array elements to be removed using the select input. Setting this to true will add ' +\r\n                'a blank item to the top of the select list. Defaults to false.'\r\n        },\r\n        {\r\n            name: 'render',\r\n            description: 'Reference to a custom cell renderer. Overrides any default entity rendering. This will be used to generate the cell value ' +\r\n                'for rendering, filtering and sorting. It must be an expression and resolves as a function, this function should return a string.',\r\n            acceptsExpression: true,\r\n            expressionVars: [\r\n                {\r\n                    name: 'data',\r\n                    type: '(string|boolean|number)',\r\n                    description: 'The value of the cell being rendered. Its data type will match that of the array elements in this column.'\r\n                },\r\n                {\r\n                    name: 'type',\r\n                    type: 'string',\r\n                    description: 'The type call data requested - this will be \"filter\", \"display\", \"type\" or \"sort\"'\r\n                },\r\n                {\r\n                    name: 'row',\r\n                    type: 'Array.<(string|boolean|number)>',\r\n                    description: 'The values from each cell in the current row'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'format',\r\n            description: 'Specify a number formatting string. Only applicable to array elements of type integer, real, ' +\r\n                'decision variable and constraint. The formatting syntax is explained in the Xpress Insight Developer Guide.'\r\n        }\r\n    ];\r\n\r\n    VDL('vdlx-datagrid-column', {\r\n        tag: 'vdlx-datagrid-column',\r\n        attributes: VDGCattributes,\r\n        // Apply errors to the parent vdlx-datagrid element\r\n        errorTargetSelector: function (element) {\r\n            // error is displayed on autotable, or if there isn't one, the parent\r\n            // will have to do as as default\r\n            return $(element).closest('vdlx-datagrid')[0] || element;\r\n        },\r\n\r\n        template: '<vdl-contents></vdl-contents>',\r\n\r\n        modifiesDescendants: false,\r\n\r\n        createViewModel: function (params, componentInfo) {\r\n\r\n            var indexFilters$ = ko.observable({});\r\n            var filters$ = ko.pureComputed(function () {\r\n                return _.reduce(indexFilters$(), function (memo, filterProps) {\r\n                    return _.set(memo, [filterProps.setName, filterProps.setPosition], filterProps.value);\r\n                }, {});\r\n            });\r\n\r\n            const columnId = _.uniqueId('datagrid-column');\r\n\r\n            var buildColumn = _.throttle(function (done) {\r\n                console.log('vdlx-datagrid update column');\r\n                var columnReady = $(componentInfo.element).find('vdl-index-filter').length === _.size(indexFilters$());\r\n\r\n                var props = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ('' + ko.unwrap(params.editable)).toLowerCase() === 'true',\r\n                    visible: !(('' + ko.unwrap(params.visible)).toLowerCase() === 'false'),\r\n                    style: params.style,\r\n                    sortByFormatted: params.sortByFormatted,\r\n                    filterByFormatted: params.filterByFormatted,\r\n                    editorOptionsSet: params.editorOptionsSet,\r\n                    selectNull: params.editorOptionsIncludeEmpty,\r\n                    checkedValue: params.editorCheckedValue,\r\n                    uncheckedValue: params.editorUncheckedValue,\r\n                    editorType: params.editorType,\r\n                    id: columnId \r\n                };\r\n\r\n                if (params.editorOptions) {\r\n                    props.editorOptions = function () {\r\n                        // Return an empty list of options if value is undefined\r\n                        return params.editorOptions.apply(null, arguments) || [];\r\n                    };\r\n                }\r\n\r\n                if (_.isFunction(params.render)) {\r\n                    props.render = params.render;\r\n                }\r\n\r\n                if (params.format) {\r\n                    props.render = RenderCallbacks.markAsBuiltinRenderCallback(function (data, type) {\r\n                        var formatCell = type === 'display'\r\n                            || (type === 'filter' && params.filterByFormatted)\r\n                            || (type === 'sort' && params.sortByFormatted);\r\n\r\n                        return formatCell ? insightGetter().Formatter.formatNumber(data, params.format) : data;\r\n                    });\r\n\r\n                    props.format = params.format;\r\n                } else {\r\n                    props.format = null;\r\n                }\r\n\r\n                if (!!params.entity) {\r\n                    props.entity = params.entity;\r\n                } else if (!!params.set) {\r\n                    props.set = params.set;\r\n                }\r\n\r\n                if (params.setPosition != null) {\r\n                    props.setPosition = params.setPosition;\r\n                }\r\n\r\n                if (_.size(filters$())) {\r\n                    props.filters = filters$();\r\n                }\r\n\r\n                if (props.entity) {\r\n                    var getValidationFn = function (indices) {\r\n                        var validationProperties = validatorFactory.getValidationProperties({\r\n                            entity: props.entity,\r\n                            indices: indices\r\n                        });\r\n\r\n                        var customValidators = validatorFactory\r\n                            .getCustomValidators(validationProperties, componentInfo.element);\r\n\r\n                        return validatorFactory.createFromValidators(customValidators);\r\n                    };\r\n\r\n                    var validationObservable = ko.observable().extend({\r\n                        functionObservable: {\r\n                            onDependenciesChange: function () {\r\n                                params.tableValidate();\r\n\r\n                            },\r\n                            read: function (indices, value, rowData) {\r\n                                return getValidationFn(indices)(value, rowData);\r\n                            },\r\n                            disposeWhenDependenciesChange: false\r\n                        }\r\n                    });\r\n\r\n                    props.editorValidate = function (newValue, rowData, keys) {\r\n                        validationObservable(keys, newValue, rowData);\r\n                        return validationObservable.peek();\r\n                    };\r\n                }\r\n\r\n                if (columnReady) {\r\n                    componentInfo.element[AUTOCOLUMN_PROP_NAME] = props;\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                }\r\n\r\n                if (_.isFunction(done)) {\r\n                    done();\r\n                }\r\n\r\n            }, COLUMN_BUILD_DELAY, { leading: false });\r\n\r\n            var paramsWatcher = ko.computed(function () {\r\n                var constructedParams = {\r\n                    scenario: ko.unwrap(params.scenario),\r\n                    title: ko.unwrap(params.heading),\r\n                    width: ko.unwrap(params.width),\r\n                    editable: ko.unwrap(params.editable),\r\n                    visible: ko.unwrap(params.visible),\r\n                };\r\n\r\n                buildColumn();\r\n\r\n                return constructedParams;\r\n            });\r\n\r\n            return {\r\n                columnUpdate: buildColumn,\r\n                validate: buildColumn,\r\n                dispose: function () {\r\n                    paramsWatcher.dispose();\r\n                    _.isFunction(params.tableUpdate) && params.tableUpdate();\r\n                },\r\n                filterUpdate: function (filterId, filterProperties) {\r\n                    indexFilters$(_.set(indexFilters$(), filterId, filterProperties));\r\n                    buildColumn();\r\n                },\r\n                filterRemove: function (filterId) {\r\n                    indexFilters$(_.omit(indexFilters$(), filterId));\r\n                    buildColumn();\r\n                }\r\n            };\r\n        },\r\n\r\n        transform: function (element, attributes, api) {\r\n\r\n            var $element = $(element);\r\n\r\n            if (!$element.closest('vdlx-datagrid').length) {\r\n                throw Error('<vdlx-datagrid-column> must be contained within a <vdlx-datagrid> tag.');\r\n            }\r\n\r\n            if (!attributes.entity && !attributes.set) {\r\n                throw Error('Must specify either an \"entity\" or \"set\" attribute for <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes.entity && attributes.set) {\r\n                throw Error('You cannot specify both \"entity\" and \"set\" on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            if (attributes['set-position'] && !attributes.set) {\r\n                throw Error('You cannot specify \"set-position\" without also specifying \"set\"');\r\n            }\r\n\r\n            if (attributes.set && attributes.scenario) {\r\n                throw Error('The \"scenario\" attribute cannot be used in combination with the \"set\" attribute on a <vdlx-datagrid-column>.');\r\n            }\r\n\r\n            var entityAttr = !!attributes.entity ? attributes.entity : attributes.set;\r\n\r\n            var entityName = entityAttr.rawValue;\r\n            var entity = api.getModelEntityByName(entityName);\r\n            if (!entity) {\r\n                throw Error('Entity \"' + entityName + '\" does not exist in the model schema.');\r\n            }\r\n\r\n            var setPosition = _.get(attributes, ['set-position', 'rawValue']);\r\n            if (setPosition != null) {\r\n                if (!/^\\d+$/.test(setPosition)) {\r\n                    throw Error('Invalid set-position \"' + setPosition + '\", must be a number at least zero');\r\n                } else {\r\n                    setPosition = +setPosition;\r\n                }\r\n            }\r\n            var entityType = entity.getType();\r\n            if (attributes.entity && entityType !== enums.DataType.ARRAY) {\r\n                throw Error('Entity type ' + entityType + ' cannot be displayed as a column in <vdlx-datagrid>.');\r\n            } else if (attributes.set && entityType !== enums.DataType.SET) {\r\n                throw Error('Entity type ' + entityType + ' cannot be specified as an index set in <vdlx-datagrid>.');\r\n            }\r\n\r\n            var paramsBuilder = api.getComponentParamsBuilder(element)\r\n                .addParam('tableUpdate', '$component.tableUpdate', true)\r\n                .addParam('tableValidate', '$component.tableValidate', true)\r\n                .addParam('validate', '$component.validate', true);\r\n\r\n            if (!!attributes.entity) {\r\n                paramsBuilder.addParam('entity', entityName);\r\n            } else {\r\n                paramsBuilder.addParam('set', entityName);\r\n            }\r\n\r\n            if (setPosition != null) {\r\n                paramsBuilder.addParam('setPosition', setPosition);\r\n            }\r\n\r\n            var heading = attributes['heading'];\r\n            if (heading) {\r\n                paramsBuilder.addRawOrExpressionParam('heading', heading);\r\n            } else {\r\n                var textContent = $(element)\r\n                    .contents()\r\n                    .filter(function (index, element) {\r\n                        return element.nodeType === Node.TEXT_NODE && element.textContent.trim() !== '';\r\n                    })\r\n                    .toArray()\r\n                    .map(function (element) {\r\n                        return element.textContent.trim();\r\n                    })\r\n                    .join(' ');\r\n\r\n                if (textContent) {\r\n                    paramsBuilder.addParam('heading', textContent);\r\n                }\r\n            }\r\n\r\n            var scenario = attributes['scenario'];\r\n            if (scenario) {\r\n                paramsBuilder.addRawOrExpressionParam('scenario', scenario);\r\n            }\r\n\r\n            var editable = attributes['editable'];\r\n            if (attributes['editable']) {\r\n                if (entity.getManagementType() === enums.EntityManagementType.RESULT) {\r\n                    throw Error('Cannot set editable attribute on a <vdlx-datagrid-column> bound to a result entity.');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('editable', editable);\r\n            }\r\n\r\n            var visible = attributes['vdl-visible'];\r\n            if (visible) {\r\n                if (visible.expression.isString || _.isEmpty(visible.expression.value)) {\r\n                    throw Error('vdl-visible has to be an expression');\r\n                }\r\n                paramsBuilder.addRawOrExpressionParam('visible', visible);\r\n                $element.removeAttr('vdl-visible');\r\n            }\r\n\r\n            var width = attributes['width'];\r\n            if (width) {\r\n                paramsBuilder.addRawOrExpressionParam('width', width);\r\n                // Remove the width attribute from the vdlx-datagrid-column as it has implications on page layout\r\n                $element.removeAttr('width');\r\n            }\r\n\r\n            var style = attributes['class'];\r\n            if (style) {\r\n                paramsBuilder.addRawOrExpressionParam('style', style);\r\n                // Remove the class attribute from the vdlx-datagrid-column as it has implications on styling for the hidden element\r\n                $element.removeAttr('class');\r\n            }\r\n\r\n            var sortByFormatted = attributes['sort-by-formatted'];\r\n            if (sortByFormatted && sortByFormatted.rawValue === 'true') {\r\n                paramsBuilder.addParam('sortByFormatted', true);\r\n            }\r\n\r\n            var filterByFormatted = attributes['filter-by-formatted'];\r\n            if (filterByFormatted) {\r\n                if (filterByFormatted.rawValue === 'true') {\r\n                    paramsBuilder.addParam('filterByFormatted', true);\r\n                } else if (filterByFormatted.rawValue === 'false') {\r\n                    paramsBuilder.addParam('filterByFormatted', false);\r\n                }\r\n            }\r\n\r\n            var editorType = attributes['editor-type'];\r\n            var editorTypes = ['checkbox', 'select', 'text'];\r\n            if (editorType && editorTypes.indexOf(editorType.rawValue) !== -1) {\r\n                if (editorType.rawValue === 'select') {\r\n                    if (!attributes['editor-options-set'] && !attributes['editor-options']) {\r\n                        throw Error('vdlx-datagrid-column with \"editor-type\" of \"select\" needs either the \"editor-options-set\" or the \"editor-options\" attribute to be supplied.');\r\n                    }\r\n                }\r\n                paramsBuilder.addParam('editorType', editorType.rawValue);\r\n            }\r\n\r\n            var editorCheckedValue = attributes['editor-checked-value'];\r\n            if (editorCheckedValue) {\r\n                paramsBuilder.addParam('editorCheckedValue', editorCheckedValue.rawValue);\r\n            }\r\n\r\n            var editorUncheckedValue = attributes['editor-unchecked-value'];\r\n            if (editorUncheckedValue) {\r\n                paramsBuilder.addParam('editorUncheckedValue', editorUncheckedValue.rawValue);\r\n            }\r\n\r\n            var editorOptionsSet = attributes['editor-options-set'];\r\n            if (editorOptionsSet) {\r\n                var optionsSetEntity = api.getModelEntityByName(editorOptionsSet.rawValue);\r\n                if (!optionsSetEntity) {\r\n                    throw Error('vdlx-datagrid-column editor-options-set entity \"' + editorOptionsSet.rawValue + '\" does not exist in the model schema.');\r\n                }\r\n\r\n                var optionsSetEntityType = optionsSetEntity.getType();\r\n                if (optionsSetEntityType !== enums.DataType.SET) {\r\n                    throw Error('Entity \"' + editorOptionsSet.rawValue + '\" cannot be used as editor-options-set, wrong data type.');\r\n                }\r\n                paramsBuilder.addParam('editorOptionsSet', editorOptionsSet.rawValue);\r\n            }\r\n\r\n            var editorOptions = attributes['editor-options'];\r\n            if (editorOptions) {\r\n                if (editorOptions.expression.isString) {\r\n                    throw Error('vdlx-datagrid-column attribute \"editor-options\" must be an expression.');\r\n                }\r\n                paramsBuilder.addFunctionOrExpressionParam(\r\n                    'editorOptions',\r\n                    editorOptions.expression.value,\r\n                    ['value', 'rowData']);\r\n            }\r\n\r\n            if (editorOptionsSet && editorOptions) {\r\n                throw Error('vdlx-datagrid-column cannot have both editor-options-set and editor-options specified.');\r\n            }\r\n\r\n            var editorOptionsIncludeEmpty = attributes['editor-options-include-empty'];\r\n            if (editorOptionsIncludeEmpty) {\r\n                paramsBuilder.addParam('editorOptionsIncludeEmpty', editorOptionsIncludeEmpty.rawValue === 'true');\r\n            }\r\n\r\n            var render = attributes['render'];\r\n            if (render) {\r\n                if (render.expression.isString) {\r\n                    throw Error('Render parameter has to be an expression');\r\n                }\r\n                paramsBuilder.addParam('render', render.expression.value, true);\r\n            }\r\n\r\n            var format = attributes['format'];\r\n            if (format) {\r\n                if (!DataUtils.entityTypeIsNumber(entity)) {\r\n                    throw Error('Entity ' + entityName + ' with element type ' + entity.getElementType() + ' cannot be formatted');\r\n                }\r\n\r\n                paramsBuilder.addParam('format', format.rawValue);\r\n            }\r\n        }\r\n    });\r\n})(window);","\r\nimport '../css/vdlx-datagrid.scss';\r\nimport './vdlx-datagrid';\r\nimport './vdlx-datagrid-column';\r\n\r\n"]}