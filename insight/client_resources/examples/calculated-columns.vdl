<!--
Xpress Insight vdlx-datagrid
=============================

file examples/calculated-columns.vdl
````````````````````````````````````
(c) Copyright 2019 Fair Isaac Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<vdl version="4.6">
    <vdl-include src="includes/doc-extensions/code-panel.vdl"></vdl-include>
    <vdl-include src="vdlx-datagrid/vdlx-datagrid.vdl"></vdl-include>

    <vdl-page>
        <vdl-section heading="Calculated Columns">
            <vdl-column size="7">
                <p class="lead">Generate data columns.</p>
                <p>You can add columns to a datagrid that are not binding to an Insight array. You must specify a <code>render</code>
                    function
                    for the column to generate the display, sort and filter data. Calculated columns must be part of an
                    existing datagrid that
                    has one or more columns bound to an Insight array, this allows the indices to be generated based on
                    those array entities.
                </p>

                <vdlx-datagrid column-filter="true">
                    <vdlx-datagrid-column entity="SupportCosts"></vdlx-datagrid-column>
                    <vdlx-datagrid-column render="=scenario.entities.ServiceLevelAgreements([rowData[0]]).value">
                        ServiceLevelAgreements
                    </vdlx-datagrid-column>
                    <vdlx-datagrid-column
                            render="=scenario.entities.ServiceLevelAgreements([rowData[0]]).value * 2 + ''">
                        ServiceLevelAgreements * 2
                    </vdlx-datagrid-column>
                </vdlx-datagrid>
            </vdl-column>
            <vdl-column heading="VDL source:" size="5">
                <code-panel>
&lt;vdlx-datagrid column-filter=&quot;true&quot;&gt;
    &lt;vdlx-datagrid-column entity=&quot;SupportCosts&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.ServiceLevelAgreements([rowData[0]]).value&quot;&gt;
        ServiceLevelAgreements
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column
            render=&quot;=scenario.entities.ServiceLevelAgreements([rowData[0]]).value * 2 + ''&quot;&gt;
        ServiceLevelAgreements * 2
    &lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                </code-panel>
            </vdl-column>
        </vdl-section>

        <vdl-section heading="Combined example with calculated columns">
            <vdl-column size="7">
                <p>This example combines calculated columns with export to CSV, column ordering and sort ordering. The
                    exported CSV file will include the display values from the calculated cells and it will be in the same
                    order as the datagrid at time of export.</p>
                <p>The calculated columns lookup the country for destination and origin for each row. Rows with matching
                    destination and origin CITIES are filtered out using <code>"row-filter"</code>.</p>

                <!-- Filter out rows where destination and origin match -->
                <vdlx-datagrid column-filter="true" show-export="true" export-filename="city_to_city_amounts"
                               row-filter="=rowData[0] !== rowData[1]">
                    <vdlx-datagrid-column set="CITIES" set-position="0" sort-order="2">Destination
                    </vdlx-datagrid-column>
                    <!-- Lookup country for the destination city -->
                    <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[0]).value">Ctry of dest
                    </vdlx-datagrid-column>
                    <vdlx-datagrid-column set="CITIES" set-position="1" sort-order="1">Origin</vdlx-datagrid-column>
                    <!-- Lookup country for the origin city -->
                    <vdlx-datagrid-column render="=scenario.entities.mapCity2Ctry(rowData[1]).value">Ctry of orig
                    </vdlx-datagrid-column>
                    <vdlx-datagrid-column set="PERIODS" position="" sort-order="0"></vdlx-datagrid-column>
                    <vdlx-datagrid-column entity="amount" editable="true"></vdlx-datagrid-column>
                </vdlx-datagrid>
            </vdl-column>
            <vdl-column heading="VDL source:" size="5">
                <code-panel>
&lt;!-- Filter out rows where destination and origin match --&gt;
&lt;vdlx-datagrid column-filter=&quot;true&quot; show-export=&quot;true&quot; export-filename=&quot;city_to_city_amounts&quot;
               row-filter=&quot;=rowData[0] !== rowData[1]&quot;&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;0&quot; sort-order=&quot;2&quot;&gt;Destination
    &lt;/vdlx-datagrid-column&gt;
    &lt;!-- Lookup country for the destination city --&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[0]).value&quot;&gt;Ctry of dest
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;CITIES&quot; set-position=&quot;1&quot; sort-order=&quot;1&quot;&gt;Origin&lt;/vdlx-datagrid-column&gt;
    &lt;!-- Lookup country for the origin city --&gt;
    &lt;vdlx-datagrid-column render=&quot;=scenario.entities.mapCity2Ctry(rowData[1]).value&quot;&gt;Ctry of orig
    &lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column set=&quot;PERIODS&quot; position=&quot;&quot; sort-order=&quot;0&quot;&gt;&lt;/vdlx-datagrid-column&gt;
    &lt;vdlx-datagrid-column entity=&quot;amount&quot; editable=&quot;true&quot;&gt;&lt;/vdlx-datagrid-column&gt;
&lt;/vdlx-datagrid&gt;
                </code-panel>
            </vdl-column>
        </vdl-section>
    </vdl-page>
</vdl>